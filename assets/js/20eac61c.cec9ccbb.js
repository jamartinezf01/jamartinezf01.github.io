"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[3980],{1881:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/Atributos","title":"Atributos","description":"En XSD (XML Schema Definition), los atributos son una parte fundamental para describir c\xf3mo se estructura y valida un documento XML. En pocas palabras, definen las \u201cpropiedades\u201d de un elemento, permitiendo precisar qu\xe9 valores puede (o debe) llevar un elemento como \u201cmetadatos\u201d o \u201ccaracter\xedsticas\u201d adjuntas.","source":"@site/docs/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/Atributos.md","sourceDirName":"lenguajes-de-marcas/5 Validaci\xf3n XML/XDS","slug":"/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/Atributos","permalink":"/docs/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/Atributos","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"llmmSidebar","previous":{"title":"Elementos Complejos","permalink":"/docs/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/Elementos Complejos"},"next":{"title":"Indicadores","permalink":"/docs/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/Indicadores"}}');var o=s(4848),i=s(8453);const l={sidebar_position:5},d="Atributos",t={},c=[{value:"1. <strong>D\xf3nde se definen los atributos en XSD</strong>",id:"1-d\xf3nde-se-definen-los-atributos-en-xsd",level:2},{value:"2. <strong>Declaraci\xf3n b\xe1sica de un atributo</strong>",id:"2-declaraci\xf3n-b\xe1sica-de-un-atributo",level:2},{value:"3. <strong>Atributos con un <code>xs:simpleType</code></strong>",id:"3-atributos-con-un-xssimpletype",level:2},{value:"4. <strong>Atributos en un <code>xs:complexType</code> con <code>xs:attribute</code></strong>",id:"4-atributos-en-un-xscomplextype-con-xsattribute",level:2},{value:"5. <strong>Modos de uso (<code>use</code>)</strong>",id:"5-modos-de-uso-use",level:2},{value:"<code>use=&quot;required&quot;</code>",id:"userequired",level:3},{value:"<code>use=&quot;optional&quot;</code>",id:"useoptional",level:3},{value:"<code>use=&quot;prohibited&quot;</code>",id:"useprohibited",level:3},{value:"6. <strong>Valores por defecto y fijos</strong>",id:"6-valores-por-defecto-y-fijos",level:2},{value:"7. <strong>Tipos de atributo en XSD</strong>",id:"7-tipos-de-atributo-en-xsd",level:2},{value:"8. <strong>Atributos Globales vs. Locales</strong>",id:"8-atributos-globales-vs-locales",level:2},{value:"9. <strong>Ejemplo Completo</strong>",id:"9-ejemplo-completo",level:2}];function a(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"atributos",children:"Atributos"})}),"\n",(0,o.jsxs)(n.p,{children:["En ",(0,o.jsx)(n.strong,{children:"XSD (XML Schema Definition)"}),", los ",(0,o.jsx)(n.strong,{children:"atributos"})," son una parte fundamental para describir c\xf3mo se estructura y valida un documento XML. En pocas palabras, definen las \u201cpropiedades\u201d de un elemento, permitiendo precisar qu\xe9 valores puede (o debe) llevar un elemento como \u201cmetadatos\u201d o \u201ccaracter\xedsticas\u201d adjuntas."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"1-d\xf3nde-se-definen-los-atributos-en-xsd",children:["1. ",(0,o.jsx)(n.strong,{children:"D\xf3nde se definen los atributos en XSD"})]}),"\n",(0,o.jsxs)(n.p,{children:["En un archivo XSD, los atributos se ",(0,o.jsx)(n.strong,{children:"declaran"})," dentro de un ",(0,o.jsx)(n.code,{children:"<xs:complexType>"})," o directamente en un ",(0,o.jsx)(n.code,{children:"<xs:element>"})," (si se quiere describir un tipo en l\xednea). Por ejemplo:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:element name="videojuego">\r\n  <xs:complexType>\r\n    <xs:sequence>\r\n      <xs:element name="titulo" type="xs:string"/>\r\n      <xs:element name="genero" type="xs:string"/>\r\n    </xs:sequence>\r\n    <xs:attribute name="id" type="xs:ID" use="required"/>\r\n    <xs:attribute name="plataforma" type="xs:string" use="optional" default="PC"/>\r\n  </xs:complexType>\r\n</xs:element>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Aqu\xed, ",(0,o.jsx)(n.code,{children:"videojuego"})," define subelementos (",(0,o.jsx)(n.code,{children:"<titulo>"}),", ",(0,o.jsx)(n.code,{children:"<genero>"}),") y atributos (",(0,o.jsx)(n.code,{children:"id"}),", ",(0,o.jsx)(n.code,{children:"plataforma"}),")."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"2-declaraci\xf3n-b\xe1sica-de-un-atributo",children:["2. ",(0,o.jsx)(n.strong,{children:"Declaraci\xf3n b\xe1sica de un atributo"})]}),"\n",(0,o.jsxs)(n.p,{children:["Para un ",(0,o.jsx)(n.strong,{children:"atributo"}),", se usa la etiqueta ",(0,o.jsx)(n.code,{children:"<xs:attribute>"})," con propiedades clave:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"name"}),": El nombre del atributo tal como aparecer\xe1 en el XML."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"type"}),": El tipo de dato, por ejemplo, ",(0,o.jsx)(n.code,{children:"xs:string"}),", ",(0,o.jsx)(n.code,{children:"xs:integer"}),", etc."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"use"}),": El modo de uso del atributo (ej. ",(0,o.jsx)(n.code,{children:"required"}),", ",(0,o.jsx)(n.code,{children:"optional"}),", o ",(0,o.jsx)(n.code,{children:"prohibited"}),")."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"default"})," o ",(0,o.jsx)(n.strong,{children:"fixed"}),": Para asignar un valor por defecto o uno fijo."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Ejemplo sencillo"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:attribute name="codigo" type="xs:string" use="required"/>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Significa que todo elemento que use este atributo \u201ccodigo\u201d est\xe1 obligado a especificarlo, y su valor ser\xe1 de tipo string."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"3-atributos-con-un-xssimpletype",children:["3. ",(0,o.jsxs)(n.strong,{children:["Atributos con un ",(0,o.jsx)(n.code,{children:"xs:simpleType"})]})]}),"\n",(0,o.jsxs)(n.p,{children:["Si tenemos un ",(0,o.jsx)(n.strong,{children:"tipo simple"})," personalizado con restricciones (por ejemplo, una enumeraci\xf3n de valores), tambi\xe9n podemos aplicarlo a un atributo. Por ejemplo:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:simpleType name="tipoPlataforma">\r\n  <xs:restriction base="xs:string">\r\n    <xs:enumeration value="PC"/>\r\n    <xs:enumeration value="Consola"/>\r\n    <xs:enumeration value="Movil"/>\r\n  </xs:restriction>\r\n</xs:simpleType>\r\n\r\n<xs:attribute name="plataforma" type="tipoPlataforma" use="optional"/>\n'})}),"\n",(0,o.jsx)(n.p,{children:"De este modo, el atributo \u201cplataforma\u201d solo puede tomar los valores \u201cPC\u201d, \u201cConsola\u201d o \u201cMovil\u201d."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"4-atributos-en-un-xscomplextype-con-xsattribute",children:["4. ",(0,o.jsxs)(n.strong,{children:["Atributos en un ",(0,o.jsx)(n.code,{children:"xs:complexType"})," con ",(0,o.jsx)(n.code,{children:"xs:attribute"})]})]}),"\n",(0,o.jsxs)(n.p,{children:["Normalmente, en un ",(0,o.jsx)(n.strong,{children:"tipo complejo"})," (que admite subelementos), los atributos se definen fuera de ",(0,o.jsx)(n.code,{children:"<xs:sequence>"}),", ",(0,o.jsx)(n.code,{children:"<xs:choice>"}),", o ",(0,o.jsx)(n.code,{children:"<xs:all>"}),", pero dentro del ",(0,o.jsx)(n.code,{children:"<xs:complexType>"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:complexType name="personaType">\r\n  <xs:sequence>\r\n    <xs:element name="nombre" type="xs:string"/>\r\n    <xs:element name="edad" type="xs:integer"/>\r\n  </xs:sequence>\r\n  <xs:attribute name="id" type="xs:ID" use="required"/>\r\n  <xs:attribute name="genero" type="xs:string" use="optional" default="desconocido"/>\r\n</xs:complexType>\n'})}),"\n",(0,o.jsx)(n.p,{children:"El resultado permite un XML del estilo:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<persona id="P001" genero="Femenino">\r\n  <nombre>Ana</nombre>\r\n  <edad>30</edad>\r\n</persona>\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"5-modos-de-uso-use",children:["5. ",(0,o.jsxs)(n.strong,{children:["Modos de uso (",(0,o.jsx)(n.code,{children:"use"}),")"]})]}),"\n",(0,o.jsxs)(n.p,{children:["En XSD, cuando defines un atributo dentro de un ",(0,o.jsx)(n.code,{children:"<xs:complexType>"})," o directamente en un ",(0,o.jsx)(n.code,{children:"<xs:element>"}),", el atributo ",(0,o.jsx)(n.code,{children:"use"})," determina si ese atributo es ",(0,o.jsx)(n.strong,{children:"obligatorio"}),", ",(0,o.jsx)(n.strong,{children:"opcional"})," o queda ",(0,o.jsx)(n.strong,{children:"prohibido"})," para instancias espec\xedficas del tipo. A continuaci\xf3n se describen estos modos con ejemplos adicionales:"]}),"\n",(0,o.jsx)(n.h3,{id:"userequired",children:(0,o.jsx)(n.code,{children:'use="required"'})}),"\n",(0,o.jsxs)(n.p,{children:["Esto indica que el atributo ",(0,o.jsx)(n.strong,{children:"siempre debe"})," aparecer en el XML, sin excepci\xf3n.",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Ejemplo"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:element name="videojuego">\r\n  <xs:complexType>\r\n    <xs:sequence>\r\n      <xs:element name="titulo" type="xs:string"/>\r\n      <xs:element name="genero" type="xs:string"/>\r\n    </xs:sequence>\r\n    <xs:attribute name="id" type="xs:ID" use="required"/>\r\n  </xs:complexType>\r\n</xs:element>\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Aqu\xed, el atributo ",(0,o.jsx)(n.code,{children:"id"})," es de tipo ",(0,o.jsx)(n.code,{children:"xs:ID"})," y se marca con ",(0,o.jsx)(n.code,{children:'use="required"'}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Uso en el XML"}),":","\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<videojuego id="VG001">\r\n  <titulo>Celeste</titulo>\r\n  <genero>Plataformas</genero>\r\n</videojuego>\n'})}),"\n","Si omites ",(0,o.jsx)(n.code,{children:'id="VG001"'}),", el documento ser\xeda ",(0,o.jsx)(n.strong,{children:"inv\xe1lido"}),", pues ",(0,o.jsx)(n.code,{children:"id"})," es obligatorio."]}),"\n"]})}),"\n",(0,o.jsx)(n.h3,{id:"useoptional",children:(0,o.jsx)(n.code,{children:'use="optional"'})}),"\n",(0,o.jsxs)(n.p,{children:["Significa que el atributo ",(0,o.jsx)(n.strong,{children:"puede o no"})," aparecer en el elemento. Si no aparece, sigue siendo v\xe1lido el documento."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Ejemplo"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:element name="jugador">\r\n  <xs:complexType>\r\n    <xs:sequence>\r\n      <xs:element name="nickname" type="xs:string"/>\r\n      <xs:element name="ranking"  type="xs:integer" minOccurs="0"/>\r\n    </xs:sequence>\r\n    <xs:attribute name="avatar" type="xs:anyURI" use="optional"/>\r\n  </xs:complexType>\r\n</xs:element>\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["En el XML, el atributo ",(0,o.jsx)(n.code,{children:"avatar"})," es ",(0,o.jsx)(n.strong,{children:"opcional"}),":","\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<jugador>\r\n  <nickname>ProGamerX</nickname>\r\n  <ranking>1</ranking>\r\n</jugador>\r\n\r\n<jugador avatar="http://miweb.com/avatars/progamer.png">\r\n  <nickname>NoobMaster</nickname>\r\n</jugador>\n'})}),"\n","Ambos ",(0,o.jsx)(n.code,{children:"<jugador>"})," son v\xe1lidos; el primero no especifica ",(0,o.jsx)(n.code,{children:"avatar"}),", el segundo s\xed."]}),"\n"]})}),"\n",(0,o.jsx)(n.h3,{id:"useprohibited",children:(0,o.jsx)(n.code,{children:'use="prohibited"'})}),"\n",(0,o.jsxs)(n.p,{children:["Indica que el atributo ",(0,o.jsx)(n.strong,{children:"no debe aparecer"}),". Esto suele usarse en casos donde est\xe1s ",(0,o.jsx)(n.strong,{children:"redefiniendo"})," o ",(0,o.jsx)(n.strong,{children:"restringiendo"})," un tipo en XSD y deseas eliminar un atributo previamente definido, haciendo que su aparici\xf3n sea inv\xe1lida."]}),"\n",(0,o.jsxs)(n.p,{children:["Supongamos que tienes un tipo general ",(0,o.jsx)(n.code,{children:"productoType"})," que define un atributo ",(0,o.jsx)(n.code,{children:"color"}),". Luego quieres crear un tipo derivado que ",(0,o.jsx)(n.strong,{children:"no"})," admita ese atributo ",(0,o.jsx)(n.code,{children:"color"}),". Ah\xed, ",(0,o.jsx)(n.code,{children:'use="prohibited"'})," resulta \xfatil."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Ejemplo"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Tipo base --\x3e\r\n<xs:complexType name="productoType">\r\n  <xs:sequence>\r\n    <xs:element name="nombre" type="xs:string"/>\r\n  </xs:sequence>\r\n  <xs:attribute name="color" type="xs:string" use="optional"/>\r\n</xs:complexType>\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Aqu\xed, ",(0,o.jsx)(n.code,{children:"productoType"})," admite (opcionalmente) un atributo ",(0,o.jsx)(n.code,{children:"color"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Ahora, se define un tipo derivado que no permita ese atributo:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:complexType name="productoSinColor">\r\n  <xs:complexContent>\r\n    <xs:restriction base="productoType">\r\n      <xs:sequence>\r\n        <xs:element name="nombre" type="xs:string"/>\r\n      </xs:sequence>\r\n      \x3c!-- Eliminamos el atributo color del tipo original --\x3e\r\n      <xs:attribute name="color" use="prohibited"/>\r\n    </xs:restriction>\r\n  </xs:complexContent>\r\n</xs:complexType>\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Aqu\xed, ",(0,o.jsx)(n.code,{children:"color"})," est\xe1 ",(0,o.jsx)(n.strong,{children:"prohibido"}),". Si el XML de un ",(0,o.jsx)(n.code,{children:"<productoSinColor>"})," intenta incluir ",(0,o.jsx)(n.code,{children:'color="rojo"'}),", ser\xe1 inv\xe1lido."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Uso en el XML"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<productoSinColor>\r\n  <nombre>Tarjeta de cr\xe9dito</nombre>\r\n</productoSinColor>\n"})}),"\n",(0,o.jsx)(n.p,{children:"Correcto."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<productoSinColor color="rojo">\r\n  <nombre>Tarjeta de cr\xe9dito</nombre>\r\n</productoSinColor>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Inv\xe1lido, pues se prohibi\xf3 el atributo ",(0,o.jsx)(n.code,{children:"color"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"6-valores-por-defecto-y-fijos",children:["6. ",(0,o.jsx)(n.strong,{children:"Valores por defecto y fijos"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"default"}),": Si el atributo no se especifica en el XML, el procesador asume un valor predeterminado. Por ejemplo:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:attribute name="color" type="xs:string" use="optional" default="rojo"/>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Si \u201ccolor\u201d no aparece, se interpreta como \u201crojo\u201d."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"fixed"}),": Obliga a que el atributo tenga siempre el mismo valor; si se pone otro, el documento ser\xe1 inv\xe1lido."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:attribute name="version" type="xs:string" use="optional" fixed="1.0"/>\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"7-tipos-de-atributo-en-xsd",children:["7. ",(0,o.jsx)(n.strong,{children:"Tipos de atributo en XSD"})]}),"\n",(0,o.jsxs)(n.p,{children:["Al igual que en elementos, los atributos pueden usar los ",(0,o.jsx)(n.strong,{children:"tipos predefinidos"})," de XSD (por ejemplo, ",(0,o.jsx)(n.code,{children:"xs:string"}),", ",(0,o.jsx)(n.code,{children:"xs:boolean"}),", ",(0,o.jsx)(n.code,{children:"xs:decimal"}),", ",(0,o.jsx)(n.code,{children:"xs:date"}),", etc.) o ",(0,o.jsx)(n.strong,{children:"tipos personalizados"})," basados en ",(0,o.jsx)(n.code,{children:"<xs:simpleType>"}),". Tambi\xe9n se puede utilizar ",(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"xs:ID"}),", ",(0,o.jsx)(n.code,{children:"xs:IDREF"}),", ",(0,o.jsx)(n.code,{children:"xs:IDREFS"})]})," en atributos, tal como sucede en DTD, pero con la ventaja de que se pueden imponer restricciones adicionales (patrones, enumeraciones, etc.)."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Ejemplo"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:attribute name="codigoProducto" type="xs:ID" use="required"/>\r\n<xs:attribute name="refRelacionado" type="xs:IDREF"/>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Esto crea la relaci\xf3n de identificadores en XSD de forma parecida a DTD, pero dentro del contexto de un esquema m\xe1s robusto."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"8-atributos-globales-vs-locales",children:["8. ",(0,o.jsx)(n.strong,{children:"Atributos Globales vs. Locales"})]}),"\n",(0,o.jsxs)(n.p,{children:["Lo m\xe1s habitual es definir los atributos ",(0,o.jsx)(n.strong,{children:"localmente"})," dentro de ",(0,o.jsx)(n.code,{children:"<xs:complexType>"})," o directamente en ",(0,o.jsx)(n.code,{children:"<xs:element>"}),". Sin embargo, XSD tambi\xe9n permite declarar ",(0,o.jsx)(n.strong,{children:"atributos a nivel global"})," (igual que se hace con elementos globales), de manera que puedan referenciarse en distintos tipos:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:attribute name="idDocumento" type="xs:ID"/>\r\n\r\n<xs:complexType name="documentoType">\r\n  <xs:sequence> ... </xs:sequence>\r\n  <xs:attribute ref="idDocumento" use="required"/>\r\n</xs:complexType>\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Aqu\xed, el atributo ",(0,o.jsx)(n.code,{children:"idDocumento"})," est\xe1 declarado globalmente (fuera de cualquier ",(0,o.jsx)(n.code,{children:"<complexType>"}),") y luego referenciado con ",(0,o.jsx)(n.code,{children:'ref="idDocumento"'}),"."]})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"9-ejemplo-completo",children:["9. ",(0,o.jsx)(n.strong,{children:"Ejemplo Completo"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<xs:element name="orden">\r\n  <xs:complexType>\r\n    <xs:sequence>\r\n      <xs:element name="articulo" minOccurs="1" maxOccurs="unbounded">\r\n        <xs:complexType>\r\n          <xs:attribute name="codigo" type="xs:string" use="required"/>\r\n          <xs:attribute name="cantidad" type="xs:integer" use="required" default="1"/>\r\n        </xs:complexType>\r\n      </xs:element>\r\n    </xs:sequence>\r\n    <xs:attribute name="numOrden" type="xs:ID" use="required"/>\r\n    <xs:attribute name="estado" type="xs:string" use="optional" fixed="pendiente"/>\r\n  </xs:complexType>\r\n</xs:element>\n'})}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"<orden>"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Atributos de orden: ",(0,o.jsx)(n.code,{children:"numOrden"})," (ID obligatorio) y ",(0,o.jsx)(n.code,{children:"estado"})," (siempre \u201cpendiente\u201d)."]}),"\n",(0,o.jsxs)(n.li,{children:["Subelementos ",(0,o.jsx)(n.code,{children:"<articulo>"})," con 2 atributos (",(0,o.jsx)(n.code,{children:"codigo"}),", ",(0,o.jsx)(n.code,{children:"cantidad"}),"). Si ",(0,o.jsx)(n.code,{children:"cantidad"})," no se especifica, se asume \u201c1\u201d."]}),"\n"]}),"\n"]}),"\n"]}),(0,o.jsx)(n.p,{children:"As\xed un XML podr\xeda ser:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<orden numOrden="ORD001" estado="pendiente">\r\n  <articulo codigo="A1001" cantidad="2"/>\r\n  <articulo codigo="B2003"/>\r\n</orden>\n'})}),(0,o.jsxs)(n.p,{children:["En el segundo ",(0,o.jsx)(n.code,{children:"<articulo>"}),", ",(0,o.jsx)(n.code,{children:"cantidad"})," se interpreta como \u201c1\u201d por la definici\xf3n ",(0,o.jsx)(n.code,{children:'default="1"'}),"."]})]}),"\n",(0,o.jsx)(n.hr,{})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var r=s(6540);const o={},i=r.createContext(o);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);