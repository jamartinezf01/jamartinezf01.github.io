"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[4154],{8482:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"salva/aplicaciones m\xf3viles/5 Persistencia/Room/Caso Pr\xe1ctico/5.4.3 A\xf1adir y Eliminar Rese\xf1as","title":"A\xf1adir y Eliminar Rese\xf1as","description":"Vamos a continuar desarrollando nuestra aplicaci\xf3n introduciendo dos nuevas funcionalidades que nos permitian agregar y eliminar elementos a nuestra Base de Datos.","source":"@site/docs/salva/aplicaciones m\xf3viles/5 Persistencia/Room/Caso Pr\xe1ctico/5.4.3 A\xf1adir y Eliminar Rese\xf1as.md","sourceDirName":"salva/aplicaciones m\xf3viles/5 Persistencia/Room/Caso Pr\xe1ctico","slug":"/salva/aplicaciones m\xf3viles/5 Persistencia/Room/Caso Pr\xe1ctico/5.4.3 A\xf1adir y Eliminar Rese\xf1as","permalink":"/docs/salva/aplicaciones m\xf3viles/5 Persistencia/Room/Caso Pr\xe1ctico/5.4.3 A\xf1adir y Eliminar Rese\xf1as","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3}}');var i=n(4848),l=n(8453);const o={sidebar_position:3},t="A\xf1adir y Eliminar Rese\xf1as",d={},s=[{value:"<strong>Agregar Elementos a la Base de Datos</strong>",id:"agregar-elementos-a-la-base-de-datos",level:2},{value:"1. A\xf1adir un FAB.",id:"1-a\xf1adir-un-fab",level:3},{value:"<strong>Modifica el Layout del FragmentListaPeliculas</strong>:",id:"modifica-el-layout-del-fragmentlistapeliculas",level:4},{value:"2. Crear un nuevo Fragmento.",id:"2-crear-un-nuevo-fragmento",level:3},{value:"Crear el fragmento",id:"crear-el-fragmento",level:4},{value:"Crear el Layout",id:"crear-el-layout",level:4},{value:"Modificar el grafo de navegaci\xf3n",id:"modificar-el-grafo-de-navegaci\xf3n",level:4},{value:"Configurar el listener del FAB",id:"configurar-el-listener-del-fab",level:4},{value:"3. A\xf1adir Im\xe1genes desde la galer\xeda.",id:"3-a\xf1adir-im\xe1genes-desde-la-galer\xeda",level:3},{value:"Actualizar la clase <code>Pelicula</code> para incluir la imagen como <code>byte[]</code>:",id:"actualizar-la-clase-pelicula-para-incluir-la-imagen-como-byte",level:4},{value:"Modificar el Dise\xf1o del Layout del Fragmento para Agregar Pel\xedculas",id:"modificar-el-dise\xf1o-del-layout-del-fragmento-para-agregar-pel\xedculas",level:4},{value:"Modificar la l\xf3gica del Fragmento para Agregar Pel\xedculas",id:"modificar-la-l\xf3gica-del-fragmento-para-agregar-pel\xedculas",level:4},{value:"<strong>Eliminar Elementos de la Base de Datos</strong>",id:"eliminar-elementos-de-la-base-de-datos",level:2},{value:"Modificamos el Adaptador",id:"modificamos-el-adaptador",level:4},{value:"Configuramos el <code>ItemTouchHelper</code> en el Fragmento de la Lista",id:"configuramos-el-itemtouchhelper-en-el-fragmento-de-la-lista",level:4},{value:"<strong>Prueba la aplicaci\xf3n</strong>",id:"prueba-la-aplicaci\xf3n",level:2}];function c(e){const a={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"a\xf1adir-y-eliminar-rese\xf1as",children:"A\xf1adir y Eliminar Rese\xf1as"})}),"\n",(0,i.jsx)(a.p,{children:"Vamos a continuar desarrollando nuestra aplicaci\xf3n introduciendo dos nuevas funcionalidades que nos permitian agregar y eliminar elementos a nuestra Base de Datos."}),"\n",(0,i.jsx)("div",{style:{margin:"0 auto",width:"250px"},children:(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"Segunda Versi\xf3n de la App de rese\xf1as de cine",src:n(4669).A+"",title:"Versi\xf3n avanzada de la App de rese\xf1as de cine",width:"375",height:"842"})})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.strong,{children:"\xbfQu\xe9 vamos a hacer? \ud83e\udd14"})}),"\n",(0,i.jsxs)(a.ol,{children:["\n",(0,i.jsxs)(a.li,{children:["A\xf1adiremos un ",(0,i.jsx)(a.strong,{children:"FAB"})," (Floating Action Button) que nos permita agregar un nuevo elemento a la lista."]}),"\n",(0,i.jsxs)(a.li,{children:["Crearemos un ",(0,i.jsx)(a.strong,{children:"nuevo Fragmento y su Layout"})," para definir el nuevo elemento."]}),"\n",(0,i.jsxs)(a.li,{children:["Modificaremos la ",(0,i.jsxs)(a.strong,{children:["Entidad ",(0,i.jsx)(a.code,{children:"Pelicula"})]})," para agregar una imagen a la rese\xf1a."]}),"\n",(0,i.jsxs)(a.li,{children:["Agregaremos im\xe1genes desde la ",(0,i.jsx)(a.strong,{children:"Galer\xeda"})," de nuestro dispositivo."]}),"\n",(0,i.jsx)(a.li,{children:"Configuraremos los gestos para poder borrar rese\xf1as desplazando el elemento de la lista hacia un lado."}),"\n"]}),"\n",(0,i.jsx)(a.hr,{}),"\n",(0,i.jsx)(a.h2,{id:"agregar-elementos-a-la-base-de-datos",children:(0,i.jsx)(a.strong,{children:"Agregar Elementos a la Base de Datos"})}),"\n",(0,i.jsx)(a.h3,{id:"1-a\xf1adir-un-fab",children:"1. A\xf1adir un FAB."}),"\n",(0,i.jsx)(a.p,{children:"El Floating Action Button (FAB) es un bot\xf3n con forma redondeada que flota sobre la interfaz de usuario con el objetivo de proporcionar una experiencia intuitiva par el usuario y consistente con las directrices de Material Design. Este bot\xf3n se usa generalmente para acciones principales o m\xe1s frecuentes en una pantalla (como a\xf1adir, crear o iniciar algo nuevo)."}),"\n",(0,i.jsxs)(a.h4,{id:"modifica-el-layout-del-fragmentlistapeliculas",children:[(0,i.jsx)(a.strong,{children:"Modifica el Layout del FragmentListaPeliculas"}),":"]}),"\n",(0,i.jsxs)(a.p,{children:["A\xf1ade el siguiente elemento al archivo ",(0,i.jsx)(a.code,{children:"fragment_lista_peliculas.xml"})," de la carpeta ",(0,i.jsx)(a.code,{children:"res/layout"}),"."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-xml",metastring:'title="res/layout/fragment_lista_peliculas.xml"',children:'    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n       android:id="@+id/botonAgregarPelicula"\r\n       android:layout_width="wrap_content"\r\n       android:layout_height="wrap_content"\r\n       android:layout_gravity="bottom|end"\r\n       android:layout_margin="16dp"\r\n       android:contentDescription="Agrega Pel\xedcula"\r\n       app:layout_constraintBottom_toBottomOf="@+id/recycler_peliculas"\r\n       app:layout_constraintEnd_toEndOf="parent"\r\n       app:srcCompat="@android:drawable/ic_input_add" />\n'})}),"\n",(0,i.jsx)(a.h3,{id:"2-crear-un-nuevo-fragmento",children:"2. Crear un nuevo Fragmento."}),"\n",(0,i.jsx)(a.p,{children:"Deberemos crear un fragmento que implemente la interfaz de usuario que nos permita agregar un nuevo elemento a la lista de rese\xf1as de pel\xedculas."}),"\n",(0,i.jsx)(a.h4,{id:"crear-el-fragmento",children:"Crear el fragmento"}),"\n",(0,i.jsxs)(a.p,{children:["A\xf1ade un nuevo Fragment ",(0,i.jsx)(a.code,{children:"FragmentAgregarPelicula"})," al package ",(0,i.jsx)(a.code,{children:"UI"})]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",metastring:'title="UI/FragmentAgregarPelicula.java"',children:"package com.agora.criticascine.UI;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.agora.criticascine.databinding.FragmentAgregarPeliculaBinding;\r\nimport com.agora.criticascine.modelo.Pelicula;\r\nimport com.agora.criticascine.modelo.PeliculasViewModel;\r\n\r\nimport java.io.InputStream;\r\n\r\npublic class FragmentAgregarPelicula extends Fragment {\r\n\r\n    private FragmentAgregarPeliculaBinding binding; // Objeto para ViewBinding\r\n    private String rutaImagenSeleccionada;\r\n    private PeliculasViewModel peliculasViewModel;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        // Vinculamos el dise\xf1o usando ViewBinding\r\n        binding = FragmentAgregarPeliculaBinding.inflate(inflater, container, false);\r\n        return binding.getRoot();\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        // Inicializamos el ViewModel\r\n        peliculasViewModel = new ViewModelProvider(this).get(PeliculasViewModel.class);\r\n\r\n        // Configuramos los botones\r\n        binding.btnSeleccionarImagen.setOnClickListener(v -> abrirGaleria());\r\n        binding.btnGuardar.setOnClickListener(v -> guardarPelicula());\r\n    }\r\n\r\n    private void guardarPelicula() {\r\n        String nombre = binding.editNombre.getText().toString(); // Usamos ViewBinding para el EditText\r\n        String descripcion = binding.editDescripcion.getText().toString();\r\n        float valoracion = binding.barraValoracion.getRating();\r\n\r\n        Pelicula pelicula = new Pelicula(nombre, descripcion, valoracion);\r\n        peliculasViewModel.insertar(pelicula);\r\n\r\n        // Volvemos al fragmento anterior\r\n        getActivity().onBackPressed();\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        binding = null; // Liberamos el objeto ViewBinding\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(a.h4,{id:"crear-el-layout",children:"Crear el Layout"}),"\n",(0,i.jsxs)(a.p,{children:["Modifica el archivo ",(0,i.jsx)(a.code,{children:"fragment_agregar_pelicula.xml"})," de la carpeta ",(0,i.jsx)(a.code,{children:"res/layout"})]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-xml",metastring:'title="res/layout/fragment_agregar_peicula.xml"',children:'<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:padding="16dp">\r\n\r\n    <LinearLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content"\r\n        android:orientation="vertical">\r\n\r\n        <EditText\r\n            android:id="@+id/edit_nombre"\r\n            android:layout_width="match_parent"\r\n            android:layout_height="wrap_content"\r\n            android:hint="Nombre de la pel\xedcula"\r\n            android:inputType="text" />\r\n\r\n        <EditText\r\n            android:id="@+id/edit_descripcion"\r\n            android:layout_width="match_parent"\r\n            android:layout_height="wrap_content"\r\n            android:hint="Descripci\xf3n"\r\n            android:inputType="textMultiLine"\r\n            android:layout_marginTop="16dp" />\r\n\r\n        <RatingBar\r\n            android:id="@+id/barra_valoracion"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:numStars="5"\r\n            android:stepSize="0.5"\r\n            android:layout_marginTop="16dp" />\r\n\r\n        <Button\r\n            android:id="@+id/btn_guardar"\r\n            android:layout_width="match_parent"\r\n            android:layout_height="wrap_content"\r\n            android:layout_marginTop="16dp"\r\n            android:text="Guardar" />\r\n    </LinearLayout>\r\n</ScrollView>\n'})}),"\n",(0,i.jsx)(a.h4,{id:"modificar-el-grafo-de-navegaci\xf3n",children:"Modificar el grafo de navegaci\xf3n"}),"\n",(0,i.jsxs)(a.p,{children:["Agrega un nuego desino al archivo ",(0,i.jsx)(a.code,{children:"nav_graph.xml"})," de la carpeta ",(0,i.jsx)(a.code,{children:"res/navigation"})]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-xml",metastring:'title="res/navigation/nav_graph.xml"',children:'   \r\n    <fragment\r\n        android:id="@+id/fragmentAgregarPelicula"\r\n        android:name="com.agora.criticascine.UI.FragmentAgregarPelicula"\r\n        android:label="FragmentAgregarPelicula"\r\n        tools:layout="@layout/fragment_agregar_pelicula" />\r\n\n'})}),"\n",(0,i.jsx)(a.p,{children:"En este momento tu grafo de navegaci\xf3n deber\xe1 tener este aspecto."}),"\n",(0,i.jsx)("div",{style:{margin:"0 auto",width:"500px"},children:(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"Vista del grafo de navegaci\xf3n modificado",src:n(3133).A+"",title:"Grafo de navegaci\xf3n modificado",width:"1300",height:"851"})})}),"\n",(0,i.jsx)(a.admonition,{title:"Transiciones",type:"tip",children:(0,i.jsx)(a.p,{children:"Recuerda a\xf1adir transiciones si necesitas que el cambio de un fragmento a otro tenga una animaci\xf3n concreta."})}),"\n",(0,i.jsx)(a.h4,{id:"configurar-el-listener-del-fab",children:"Configurar el listener del FAB"}),"\n",(0,i.jsxs)(a.p,{children:["Agrega un Listener en el ",(0,i.jsx)(a.code,{children:"ListadoPeliculasFragment"})," para que el al pulsar el FAB nos conduzca al nuevo Fragmento."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",metastring:'title="UI/FragmentListaPeliculas.java"',children:"public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n  //...\r\n   \r\n     // Configuramos el bot\xf3n flotante\r\n     binding.botonAgregarPelicula.setOnClickListener(v -> {\r\n         NavHostFragment.findNavController(this).navigate(R.id.fragmentAgregarPelicula);\r\n     });\r\n}\n"})}),"\n",(0,i.jsx)(a.h3,{id:"3-a\xf1adir-im\xe1genes-desde-la-galer\xeda",children:"3. A\xf1adir Im\xe1genes desde la galer\xeda."}),"\n",(0,i.jsxs)(a.p,{children:["Para ",(0,i.jsx)(a.strong,{children:"guardar las im\xe1genes directamente en la base de datos"}),", debemos almacenarlas como datos binarios (tipo ",(0,i.jsx)(a.code,{children:"BLOB"})," en SQL) en lugar de solo la ruta. Esto asegura que la imagen quede incrustada en la base de datos, lo que puede ser \xfatil si la imagen debe mantenerse disponible incluso cuando se elimine de la galer\xeda del dispositivo."]}),"\n",(0,i.jsx)(a.p,{children:"Para ello deberemos haver varias modificaciones en nuestro proyecto..."}),"\n",(0,i.jsxs)(a.h4,{id:"actualizar-la-clase-pelicula-para-incluir-la-imagen-como-byte",children:["Actualizar la clase ",(0,i.jsx)(a.code,{children:"Pelicula"})," para incluir la imagen como ",(0,i.jsx)(a.code,{children:"byte[]"}),":"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",metastring:'title="Model/Pelicula.java"',children:"   public class Pelicula {\r\n   //...\r\n\r\n    // Incluimos el atributo imagen de tipo byte[]\r\n    private byte[] imagen; \r\n    \r\n    // Constructor actualizado para incluir la imagen.\r\n    public Pelicula(String nombre, String descripcion, float valoracion, byte[] imagen) {\r\n        this.nombre = nombre;\r\n        this.descripcion = descripcion;\r\n        this.valoracion = valoracion;\r\n        this.imagen = imagen;\r\n    }\r\n\r\n   //...\r\n\r\n    // A\xf1adimos nuevos m\xe9todos Getters y Setters\r\n        public byte[] getImagen() {\r\n        return imagen;\r\n    }\r\n\r\n    public void setImagen(byte[] imagen) {\r\n        this.imagen = imagen;\r\n    }\r\n}\n"})}),"\n",(0,i.jsxs)(a.admonition,{title:"Version de la Base de Datos",type:"danger",children:[(0,i.jsxs)(a.p,{children:["Debemos tener en cuenta que al modificar la estructura de la tabla deberemos migrar la Base de daatos. Esto lo conseguiremos simplemente cambiando el n\xfamero de versi\xf3n en el archivo ",(0,i.jsx)(a.code,{children:"PeliculasDatabase.java"})]}),(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:"@Database(entities = {Pelicula.class}, version = 2, exportSchema = false)\n"})})]}),"\n",(0,i.jsx)(a.h4,{id:"modificar-el-dise\xf1o-del-layout-del-fragmento-para-agregar-pel\xedculas",children:"Modificar el Dise\xf1o del Layout del Fragmento para Agregar Pel\xedculas"}),"\n",(0,i.jsxs)(a.p,{children:["Agregamos un imageView y un bot\xf3n al layout del fragmento para agregar Pel\xedculas. modifica el archivo ",(0,i.jsx)(a.code,{children:"fragment_agregar_pelicula.xml"})," de la carpeta ",(0,i.jsx)(a.code,{children:"res/layuot"})]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-xml",metastring:'title="res/layout/fragment_agregar_pelicula.xml"',children:'        <ImageView\r\n            android:id="@+id/imagen_pelicula"\r\n            android:layout_width="match_parent"\r\n            android:layout_height="200dp"\r\n            android:layout_marginTop="16dp"\r\n            android:scaleType="fitCenter"\r\n            android:src="@drawable/ic_placeholder" />\r\n\r\n        <Button\r\n            android:id="@+id/btn_seleccionar_imagen"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:layout_marginTop="8dp"\r\n            android:text="Seleccionar Imagen" />\n'})}),"\n",(0,i.jsx)(a.admonition,{type:"warning",children:(0,i.jsxs)(a.p,{children:["El recurso ",(0,i.jsx)(a.code,{children:"@drawable/ic_placeholder"})," deber\xe1s crearlo en la carpeta ",(0,i.jsx)(a.code,{children:"res/drawable"})," mediante el men\xfa ",(0,i.jsx)(a.strong,{children:"New->Vector Asset"}),"."]})}),"\n",(0,i.jsx)(a.h4,{id:"modificar-la-l\xf3gica-del-fragmento-para-agregar-pel\xedculas",children:"Modificar la l\xf3gica del Fragmento para Agregar Pel\xedculas"}),"\n",(0,i.jsxs)(a.p,{children:["Necesitaremos poder ",(0,i.jsx)(a.strong,{children:"seleccionar una imagen de la galeria"}),", procesar la imagen seleccionada y ",(0,i.jsx)(a.strong,{children:"convertila en un array de bytes"})," para poder guardarla en la Base de Datos. Para ello realizaremos las siguientes modificaciones en el fragmento ",(0,i.jsx)(a.code,{children:"FragmentAgregarPelicula"}),"..."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",metastring:'title="UI/FragmentAgregarPelicula.java"',children:"\r\npublic class FragmentAgregarPelicula extends Fragment {\r\n\r\n    private static final int REQUEST_IMAGE_PICK = 1; // C\xf3digo \xfanico para identificar la selecci\xf3n de imagen.\r\n\r\n    private FragmentAgregarPeliculaBinding binding; // Objeto para acceder a las vistas con ViewBinding.\r\n    private byte[] imagenSeleccionada; // Almacena la imagen seleccionada como un array de bytes.\r\n    private PeliculasViewModel peliculasViewModel; // Referencia al ViewModel para interactuar con los datos.\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        // Inicializa ViewBinding para vincular el dise\xf1o XML con el fragmento.\r\n        binding = FragmentAgregarPeliculaBinding.inflate(inflater, container, false);\r\n        return binding.getRoot(); // Devuelve la vista ra\xedz del dise\xf1o.\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        // Inicializa el ViewModel para gestionar las operaciones relacionadas con las pel\xedculas.\r\n        peliculasViewModel = new ViewModelProvider(this).get(PeliculasViewModel.class);\r\n\r\n        // Configura el bot\xf3n para abrir la galer\xeda y seleccionar una imagen.\r\n        binding.btnSeleccionarImagen.setOnClickListener(v -> abrirGaleria());\r\n\r\n        // Configura el bot\xf3n para guardar la pel\xedcula y sus datos en la base de datos.\r\n        binding.btnGuardar.setOnClickListener(v -> guardarPelicula());\r\n    }\r\n\r\n    private void abrirGaleria() {\r\n        // Crea un intent para seleccionar una imagen desde la galer\xeda.\r\n        Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n        startActivityForResult(intent, REQUEST_IMAGE_PICK); // Inicia la actividad para la selecci\xf3n de imagen.\r\n    }\r\n\r\n    // maneja la respuesta de la actividad que abre la galer\xeda   \r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        // Verifica si el resultado corresponde a la selecci\xf3n de imagen y si fue exitoso.\r\n        if (requestCode == REQUEST_IMAGE_PICK && resultCode == getActivity().RESULT_OK && data != null) {\r\n            Uri uriImagen = data.getData(); // Obtiene la URI de la imagen seleccionada.\r\n            try {\r\n                // Abre un flujo de entrada para leer los datos de la imagen.\r\n                InputStream inputStream = getActivity().getContentResolver().openInputStream(uriImagen);\r\n                Bitmap bitmap = BitmapFactory.decodeStream(inputStream); // Convierte los datos en un Bitmap.\r\n\r\n                // Muestra la imagen seleccionada en el ImageView.\r\n                binding.imagenPelicula.setImageBitmap(bitmap);\r\n\r\n                // Convierte el Bitmap a un array de bytes para guardarlo en la base de datos.\r\n                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\r\n                bitmap.compress(Bitmap.CompressFormat.JPEG, 100, outputStream);\r\n                imagenSeleccionada = outputStream.toByteArray(); // Almacena la imagen como bytes.\r\n            } catch (Exception e) {\r\n                e.printStackTrace(); // Maneja posibles errores al procesar la imagen.\r\n            }\r\n        }\r\n    }\r\n\r\n    private void guardarPelicula() {\r\n        // Obtiene los valores ingresados por el usuario.\r\n        String nombre = binding.editNombre.getText().toString(); // Nombre de la pel\xedcula.\r\n        String descripcion = binding.editDescripcion.getText().toString(); // Descripci\xf3n de la pel\xedcula.\r\n        float valoracion = binding.barraValoracion.getRating(); // Valoraci\xf3n asignada.\r\n\r\n        // Crea un nuevo objeto Pelicula con los datos proporcionados.\r\n        Pelicula pelicula = new Pelicula(nombre, descripcion, valoracion, imagenSeleccionada);\r\n\r\n        // Inserta la pel\xedcula en la base de datos a trav\xe9s del ViewModel.\r\n        peliculasViewModel.insertar(pelicula);\r\n\r\n        // Navega al fragmento anterior despu\xe9s de guardar la pel\xedcula.\r\n        getActivity().onBackPressed();\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        binding = null; // Libera el objeto ViewBinding para evitar fugas de memoria.\r\n    }\r\n}\r\n}\n"})}),"\n",(0,i.jsxs)(a.admonition,{title:"explicaci\xf3n:",type:"note",children:[(0,i.jsx)(a.p,{children:(0,i.jsx)(a.strong,{children:(0,i.jsx)(a.code,{children:"abrirGaleria()"})})}),(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"Intent"}),": Es una clase que se utiliza para realizar una acci\xf3n, como abrir una actividad o compartir datos entre aplicaciones. En este caso, se crea un ",(0,i.jsx)(a.code,{children:"Intent"})," con la acci\xf3n ",(0,i.jsx)(a.strong,{children:(0,i.jsx)(a.code,{children:"Intent.ACTION_PICK"})}),", que solicita al sistema que muestre una interfaz de selecci\xf3n para elegir un elemento (en este caso, una imagen)."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"MediaStore.Images.Media.EXTERNAL_CONTENT_URI"}),": Este URI apunta al contenido externo del almacenamiento del dispositivo donde se almacenan las im\xe1genes. Espec\xedficamente, indica que la actividad debe mostrar im\xe1genes disponibles en el dispositivo."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"startActivityForResult"}),": Inicia la actividad del sistema encargada de gestionar la selecci\xf3n de im\xe1genes. El segundo par\xe1metro, ",(0,i.jsx)(a.strong,{children:(0,i.jsx)(a.code,{children:"REQUEST_IMAGE_PICK"})}),", es un c\xf3digo \xfanico que identifica esta solicitud. Esto es \xfatil para manejar el resultado en el m\xe9todo ",(0,i.jsx)(a.code,{children:"onActivityResult"}),"."]}),"\n"]}),(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.strong,{children:(0,i.jsx)(a.code,{children:"onActivityResult()"})}),": es un callback que se ejecuta autom\xe1ticamente cuando se completa una actividad que fue iniciada con startActivityForResult. En este caso, se utiliza para manejar el resultado de la selecci\xf3n de una imagen desde la galer\xeda. Verifica tres condiciones:"]}),(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"requestCode"}),": Que el resultado corresponde al c\xf3digo \xfanico REQUEST_IMAGE_PICK."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"resultCode"}),": Que la operaci\xf3n fue exitosa (RESULT_OK)."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"data"}),": Que contiene los datos del resultado (no nulo)."]}),"\n"]})]}),"\n",(0,i.jsxs)(a.admonition,{title:"PERMISOS",type:"info",children:[(0,i.jsx)(a.p,{children:"Si necesitas acceder a la galer\xeda en Android 10 o inferior, a\xf1ade este permiso al AndroidManifest.xml:"}),(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-xml",children:'<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />\n'})}),(0,i.jsx)(a.p,{children:"A partir de Android 11, no es necesario el permiso para acceder a im\xe1genes de la galer\xeda."})]}),"\n",(0,i.jsx)(a.hr,{}),"\n",(0,i.jsx)(a.h2,{id:"eliminar-elementos-de-la-base-de-datos",children:(0,i.jsx)(a.strong,{children:"Eliminar Elementos de la Base de Datos"})}),"\n",(0,i.jsxs)(a.p,{children:["Para permitir la eliminaci\xf3n de elementos mediante un gesto de desplazamiento lateral (swipe) en el RecyclerView, utilizaremos la clase ",(0,i.jsx)(a.code,{children:"ItemTouchHelper"}),"."]}),"\n",(0,i.jsx)(a.h4,{id:"modificamos-el-adaptador",children:"Modificamos el Adaptador"}),"\n",(0,i.jsxs)(a.p,{children:["Debemos modificar el adaptador del reciclerView para aadir dos nuevos m\xe9todos que no ayuden a eliminar elementos. Agrega al archivo ",(0,i.jsx)(a.code,{children:"PeliculasAdapter"})," estos m\xe9todos..."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",metastring:'title="UI/PeliculasAdapter.java"',children:"public class PeliculasAdaptador extends RecyclerView.Adapter<PeliculasAdaptador.PeliculasViewHolder> {\r\n\r\n   //...\r\n\r\n    // M\xe9todo para obtener la pel\xedcula en una posici\xf3n espec\xedfica.\r\n    public Pelicula obtenerPeliculaEn(int posicion) {\r\n        return listaPeliculas.get(posicion);\r\n    }\r\n\r\n    // M\xe9todo para eliminar una pel\xedcula de la lista.\r\n    public void eliminarPeliculaEn(int posicion) {\r\n        listaPeliculas.remove(posicion); // Elimina el elemento de la lista.\r\n        notifyItemRemoved(posicion); // Notifica al RecyclerView sobre la eliminaci\xf3n.\r\n    }\r\n\r\n}\n"})}),"\n",(0,i.jsxs)(a.h4,{id:"configuramos-el-itemtouchhelper-en-el-fragmento-de-la-lista",children:["Configuramos el ",(0,i.jsx)(a.code,{children:"ItemTouchHelper"})," en el Fragmento de la Lista"]}),"\n",(0,i.jsxs)(a.p,{children:["En el fragmento ",(0,i.jsx)(a.code,{children:"FragmentListaPeliculas"}),", a\xf1ade el soporte para gestos de desplazamiento."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",metastring:'title="UI/FragmentListaPeliculas.java"',children:"    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n\r\n        //...\r\n\r\n        // Configura el gesto de desplazamiento lateral para eliminar elementos.\r\n        new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {\r\n            @Override\r\n            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {\r\n                return false; // No permitimos mover los elementos.\r\n            }\r\n\r\n            @Override\r\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\r\n                // Obtiene la posici\xf3n del elemento desplazado.\r\n                int posicion = viewHolder.getAdapterPosition();\r\n                Pelicula peliculaAEliminar = adaptador.obtenerPeliculaEn(posicion);\r\n\r\n                // Elimina la pel\xedcula de la base de datos.\r\n                peliculasViewModel.eliminar(peliculaAEliminar);\r\n\r\n                // Elimina la pel\xedcula de la lista visualmente.\r\n                adaptador.eliminarPeliculaEn(posicion);\r\n            }\r\n        }).attachToRecyclerView(binding.recyclerPeliculas); \r\n\r\n    }\n"})}),"\n",(0,i.jsx)(a.hr,{}),"\n",(0,i.jsx)(a.h2,{id:"prueba-la-aplicaci\xf3n",children:(0,i.jsx)(a.strong,{children:"Prueba la aplicaci\xf3n"})}),"\n",(0,i.jsx)(a.p,{children:"Felicidades \ud83d\udc4f\ud83c\udffd\ud83d\udc4f\ud83c\udffd. En este punto deber\xedas tener una App que muestre una lista de pel\xedculas con su valoraci\xf3n y permita agregar y eliminar rese\xf1as. Ahora a\xf1adiremos nuevas funcionalidades \ud83d\ude80"})]})}function u(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},4669:(e,a,n)=>{n.d(a,{A:()=>r});const r=n.p+"assets/images/app_v2-418d0f4d4823380b07d4c1c8b8738e48.gif"},3133:(e,a,n)=>{n.d(a,{A:()=>r});const r=n.p+"assets/images/grafo_navegacion-c6b1aa57c199a89c5c6f412446487fa5.png"},8453:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>t});var r=n(6540);const i={},l=r.createContext(i);function o(e){const a=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(l.Provider,{value:a},e.children)}}}]);