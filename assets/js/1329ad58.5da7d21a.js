"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[7324],{6478:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"salva/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.1 Entidad","title":"5.3.1 Entidad (@Entity)","description":"En Android Room, una Entidad es un componente fundamental que define una tabla en la base de datos. \ud83d\udcca Cada instancia de la clase entidad corresponde a una fila de dicha tabla. Room utiliza anotaciones \ud83d\udcdd para mapear la estructura de la clase a la estructura de la tabla en SQLite.","source":"@site/docs/salva/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.1 Entidad.md","sourceDirName":"salva/aplicaciones m\xf3viles/5 Persistencia/Room","slug":"/salva/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.1 Entidad","permalink":"/docs/salva/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.1 Entidad","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1}}');var i=a(4848),r=a(8453);const l={sidebar_position:1},o="5.3.1 Entidad (@Entity)",d={},c=[{value:"<strong>\xbfQu\xe9 es una Entidad?</strong> \ud83e\udd14",id:"qu\xe9-es-una-entidad-",level:2},{value:"<strong>C\xf3mo crear una Entidad</strong> \ud83d\udee0\ufe0f",id:"c\xf3mo-crear-una-entidad-\ufe0f",level:2},{value:"1. Anotar la clase con <code>@Entity</code>",id:"1-anotar-la-clase-con-entity",level:3},{value:"2. Definir una clave primaria",id:"2-definir-una-clave-primaria",level:3},{value:"3. Definir columnas con <code>@ColumnInfo</code> (opcional)",id:"3-definir-columnas-con-columninfo-opcional",level:3},{value:"4. Ignorar campos no necesarios",id:"4-ignorar-campos-no-necesarios",level:3},{value:"<strong>Ejemplo completo de una entidad</strong> \ud83d\udcd8",id:"ejemplo-completo-de-una-entidad-",level:2},{value:"<strong>Anotaciones de Entidad</strong> \ud83d\udcdd",id:"anotaciones-de-entidad-",level:2},{value:"1. <code>@Entity</code>",id:"1-entity",level:3},{value:"2. <code>@PrimaryKey</code>",id:"2-primarykey",level:3},{value:"3. <code>@ColumnInfo</code>",id:"3-columninfo",level:3},{value:"4. <code>@Ignore</code>",id:"4-ignore",level:3},{value:"<strong>\xcdndices en las Entidades</strong> \ud83d\udd0d",id:"\xedndices-en-las-entidades-",level:2},{value:"<strong>Claves primarias compuestas</strong> \ud83d\udd17",id:"claves-primarias-compuestas-",level:2},{value:"<strong>Relaciones entre Entidades</strong> \ud83e\udd1d",id:"relaciones-entre-entidades-",level:2},{value:"<strong>Restricciones de las Entidades</strong> \ud83d\udeab",id:"restricciones-de-las-entidades-",level:2}];function t(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"531-entidad-entity",children:["5.3.1 Entidad (",(0,i.jsx)(n.code,{children:"@Entity"}),")"]})}),"\n",(0,i.jsxs)(n.p,{children:["En Android Room, una ",(0,i.jsx)(n.strong,{children:"Entidad"})," es un componente fundamental que define una tabla en la base de datos. \ud83d\udcca Cada instancia de la clase entidad corresponde a una fila de dicha tabla. Room utiliza anotaciones \ud83d\udcdd para mapear la estructura de la clase a la estructura de la tabla en SQLite."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"qu\xe9-es-una-entidad-",children:[(0,i.jsx)(n.strong,{children:"\xbfQu\xe9 es una Entidad?"})," \ud83e\udd14"]}),"\n",(0,i.jsxs)(n.p,{children:["Una entidad es una clase de Java o Kotlin anotada con ",(0,i.jsx)(n.code,{children:"@Entity"}),". Esta clase define:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"El nombre de la tabla"})," \ud83c\udff7\ufe0f."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Las columnas de la tabla"})," \ud83d\udccb, que corresponden a los campos de la clase."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Las claves primarias y for\xe1neas"})," \ud83d\udd11, esenciales para mantener la integridad de los datos."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"c\xf3mo-crear-una-entidad-\ufe0f",children:[(0,i.jsx)(n.strong,{children:"C\xf3mo crear una Entidad"})," \ud83d\udee0\ufe0f"]}),"\n",(0,i.jsxs)(n.h3,{id:"1-anotar-la-clase-con-entity",children:["1. Anotar la clase con ",(0,i.jsx)(n.code,{children:"@Entity"})]}),"\n",(0,i.jsxs)(n.p,{children:["La anotaci\xf3n ",(0,i.jsx)(n.code,{children:"@Entity"})," marca una clase como una tabla en la base de datos. Si no se especifica el nombre de la tabla, Room usar\xe1 el nombre de la clase por defecto."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Entity(tableName = "users")\r\npublic class User {\r\n    ...\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-definir-una-clave-primaria",children:"2. Definir una clave primaria"}),"\n",(0,i.jsxs)(n.p,{children:["Cada tabla debe tener una clave primaria \xfanica, que se define con la anotaci\xf3n ",(0,i.jsx)(n.code,{children:"@PrimaryKey"}),". Room no permite tablas sin claves primarias."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"@PrimaryKey\r\npublic int id;\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"3-definir-columnas-con-columninfo-opcional",children:["3. Definir columnas con ",(0,i.jsx)(n.code,{children:"@ColumnInfo"})," (opcional)"]}),"\n",(0,i.jsxs)(n.p,{children:["Puedes personalizar el nombre de las columnas con la anotaci\xf3n ",(0,i.jsx)(n.code,{children:"@ColumnInfo"}),". Si no la usas, Room tomar\xe1 el nombre de los campos de la clase."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@ColumnInfo(name = "first_name")\r\npublic String firstName;\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-ignorar-campos-no-necesarios",children:"4. Ignorar campos no necesarios"}),"\n",(0,i.jsxs)(n.p,{children:["Si un campo de la clase no debe ser incluido en la tabla, usa la anotaci\xf3n ",(0,i.jsx)(n.code,{children:"@Ignore"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"@Ignore\r\npublic String tempData; // Este campo no ser\xe1 parte de la tabla.\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"ejemplo-completo-de-una-entidad-",children:[(0,i.jsx)(n.strong,{children:"Ejemplo completo de una entidad"})," \ud83d\udcd8"]}),"\n",(0,i.jsxs)(n.p,{children:["Aqu\xed se define una tabla ",(0,i.jsx)(n.code,{children:"users"})," con columnas para un ID \xfanico, nombre y apellido. Adem\xe1s, se incluye un campo temporal que no forma parte de la tabla."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import androidx.room.ColumnInfo;\r\nimport androidx.room.Entity;\r\nimport androidx.room.Ignore;\r\nimport androidx.room.PrimaryKey;\r\n\r\n@Entity(tableName = "users")\r\npublic class User {\r\n\r\n    @PrimaryKey(autoGenerate = true) // La clave primaria se genera autom\xe1ticamente.\r\n    public int id;\r\n\r\n    @ColumnInfo(name = "first_name") // El nombre de la columna ser\xe1 "first_name".\r\n    public String firstName;\r\n\r\n    @ColumnInfo(name = "last_name") // El nombre de la columna ser\xe1 "last_name".\r\n    public String lastName;\r\n\r\n    @Ignore // Este campo no ser\xe1 incluido en la tabla.\r\n    public String tempData;\r\n\r\n    // Constructor principal\r\n    public User(String firstName, String lastName) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"anotaciones-de-entidad-",children:[(0,i.jsx)(n.strong,{children:"Anotaciones de Entidad"})," \ud83d\udcdd"]}),"\n",(0,i.jsxs)(n.h3,{id:"1-entity",children:["1. ",(0,i.jsx)(n.code,{children:"@Entity"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Define una clase como entidad."}),"\n",(0,i.jsxs)(n.li,{children:["Par\xe1metros comunes:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tableName"}),": Nombre personalizado de la tabla."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"indices"}),": Define \xedndices para mejorar las consultas."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"primaryKeys"}),": Define claves primarias compuestas."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"2-primarykey",children:["2. ",(0,i.jsx)(n.code,{children:"@PrimaryKey"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Declara un campo como clave primaria."}),"\n",(0,i.jsxs)(n.li,{children:["Par\xe1metros comunes:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"autoGenerate"}),": Si es ",(0,i.jsx)(n.code,{children:"true"}),", Room genera autom\xe1ticamente valores \xfanicos."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"3-columninfo",children:["3. ",(0,i.jsx)(n.code,{children:"@ColumnInfo"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Define el nombre de la columna y sus propiedades."}),"\n",(0,i.jsxs)(n.li,{children:["Par\xe1metros comunes:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": Nombre personalizado de la columna."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"typeAffinity"}),": Especifica el tipo de dato SQLite (por ejemplo, ",(0,i.jsx)(n.code,{children:"TEXT"}),", ",(0,i.jsx)(n.code,{children:"INTEGER"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"4-ignore",children:["4. ",(0,i.jsx)(n.code,{children:"@Ignore"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Excluye un campo de la tabla."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"\xedndices-en-las-entidades-",children:[(0,i.jsx)(n.strong,{children:"\xcdndices en las Entidades"})," \ud83d\udd0d"]}),"\n",(0,i.jsxs)(n.p,{children:["Los \xedndices se utilizan para optimizar consultas. Puedes definirlos usando el par\xe1metro ",(0,i.jsx)(n.code,{children:"indices"})," en ",(0,i.jsx)(n.code,{children:"@Entity"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Entity(\r\n    tableName = "users",\r\n    indices = {@Index(value = "first_name", unique = true)}\r\n)\r\npublic class User {\r\n    @PrimaryKey(autoGenerate = true)\r\n    public int id;\r\n\r\n    @ColumnInfo(name = "first_name")\r\n    public String firstName;\r\n\r\n    @ColumnInfo(name = "last_name")\r\n    public String lastName;\r\n}\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Se crea un \xedndice para la columna ",(0,i.jsx)(n.code,{children:"first_name"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["El \xedndice es \xfanico, lo que significa que no puede haber dos filas con el mismo ",(0,i.jsx)(n.code,{children:"first_name"}),"."]}),"\n"]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"claves-primarias-compuestas-",children:[(0,i.jsx)(n.strong,{children:"Claves primarias compuestas"})," \ud83d\udd17"]}),"\n",(0,i.jsxs)(n.p,{children:["Si necesitas que tu tabla tenga una clave primaria compuesta (varios campos como clave primaria), puedes usar el par\xe1metro ",(0,i.jsx)(n.code,{children:"primaryKeys"})," en ",(0,i.jsx)(n.code,{children:"@Entity"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Entity(\r\n    tableName = "user_preferences",\r\n    primaryKeys = {"userId", "preferenceKey"}\r\n)\r\npublic class UserPreference {\r\n    public int userId;\r\n    public String preferenceKey;\r\n    public String preferenceValue;\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"relaciones-entre-entidades-",children:[(0,i.jsx)(n.strong,{children:"Relaciones entre Entidades"})," \ud83e\udd1d"]}),"\n",(0,i.jsxs)(n.p,{children:["En Room, puedes establecer relaciones entre tablas mediante claves for\xe1neas. Esto se hace utilizando el par\xe1metro ",(0,i.jsx)(n.code,{children:"foreignKeys"})," en ",(0,i.jsx)(n.code,{children:"@Entity"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Entity(\r\n    tableName = "orders",\r\n    foreignKeys = @ForeignKey(\r\n        entity = User.class,\r\n        parentColumns = "id",\r\n        childColumns = "userId",\r\n        onDelete = ForeignKey.CASCADE\r\n    )\r\n)\r\npublic class Order {\r\n    @PrimaryKey(autoGenerate = true)\r\n    public int orderId;\r\n\r\n    public int userId; // Clave for\xe1nea que se relaciona con la tabla "users".\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"restricciones-de-las-entidades-",children:[(0,i.jsx)(n.strong,{children:"Restricciones de las Entidades"})," \ud83d\udeab"]}),"\n",(0,i.jsx)(n.admonition,{title:"restricciones",type:"warning",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Campos obligatorios"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Todos los campos no anulables deben tener un valor."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tipos compatibles"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Room admite tipos de datos b\xe1sicos (int, String, boolean, etc.) y algunas clases espec\xedficas como ",(0,i.jsx)(n.code,{children:"Date"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Para otros tipos, necesitas un ",(0,i.jsx)(n.strong,{children:"TypeConverter"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sin herencia"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Las clases de entidad no pueden heredar de otras clases."}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,i.jsx)(n.hr,{})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>o});var s=a(6540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);