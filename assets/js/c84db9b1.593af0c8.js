"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[6350],{1232:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"salva/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.3 Base de Datos","title":"5.3.3 BBDD (@Database)","description":"La clase de Base de Datos en Room act\xfaa como el punto de entrada principal para interactuar con la base de datos SQLite subyacente. Es responsable de definir las entidades, exponer los DAOs y manejar las operaciones de creaci\xf3n y migraci\xf3n de esquemas. \ud83d\udee0\ufe0f","source":"@site/docs/salva/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.3 Base de Datos.md","sourceDirName":"salva/aplicaciones m\xf3viles/5 Persistencia/Room","slug":"/salva/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.3 Base de Datos","permalink":"/docs/salva/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.3 Base de Datos","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3}}');var r=n(4848),o=n(8453);const i={sidebar_position:3},t="5.3.3 BBDD (@Database)",d={},c=[{value:"<strong>\xbfQu\xe9 es una Base de Datos en Room?</strong> \ud83e\udd14",id:"qu\xe9-es-una-base-de-datos-en-room-",level:2},{value:"<strong>C\xf3mo crear una Base de Datos</strong> \ud83d\udee0\ufe0f",id:"c\xf3mo-crear-una-base-de-datos-\ufe0f",level:2},{value:"1. Anotar la clase con <code>@Database</code>",id:"1-anotar-la-clase-con-database",level:3},{value:"2. Extender <code>RoomDatabase</code>",id:"2-extender-roomdatabase",level:3},{value:"3. Proporcionar m\xe9todos para los DAOs",id:"3-proporcionar-m\xe9todos-para-los-daos",level:3},{value:"<strong>Ejemplo completo de una Base de Datos</strong> \ud83d\udcd8",id:"ejemplo-completo-de-una-base-de-datos-",level:2},{value:"<strong>Par\xe1metros de la anotaci\xf3n <code>@Database</code></strong> \ud83d\udcca",id:"par\xe1metros-de-la-anotaci\xf3n-database-",level:2},{value:"<strong>Inicializaci\xf3n de la Base de Datos</strong> \ud83d\ude80",id:"inicializaci\xf3n-de-la-base-de-datos-",level:2},{value:"Ejemplo b\xe1sico",id:"ejemplo-b\xe1sico",level:3},{value:"<strong>Gesti\xf3n del esquema con <code>version</code></strong> \u2699\ufe0f",id:"gesti\xf3n-del-esquema-con-version-\ufe0f",level:2},{value:"Ejemplo de migraci\xf3n",id:"ejemplo-de-migraci\xf3n",level:3},{value:"<strong>Integraci\xf3n con Singletons</strong> \ud83e\udde9",id:"integraci\xf3n-con-singletons-",level:2},{value:"Patr\xf3n Singleton",id:"patr\xf3n-singleton",level:3},{value:"<strong>Buenas pr\xe1cticas</strong> \u2705",id:"buenas-pr\xe1cticas-",level:2}];function l(e){const a={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsxs)(a.h1,{id:"533-bbdd-database",children:["5.3.3 BBDD (",(0,r.jsx)(a.code,{children:"@Database"}),")"]})}),"\n",(0,r.jsxs)(a.p,{children:["La clase de ",(0,r.jsx)(a.strong,{children:"Base de Datos"})," en Room act\xfaa como el punto de entrada principal para interactuar con la base de datos SQLite subyacente. Es responsable de definir las entidades, exponer los DAOs y manejar las operaciones de creaci\xf3n y migraci\xf3n de esquemas. \ud83d\udee0\ufe0f"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h2,{id:"qu\xe9-es-una-base-de-datos-en-room-",children:[(0,r.jsx)(a.strong,{children:"\xbfQu\xe9 es una Base de Datos en Room?"})," \ud83e\udd14"]}),"\n",(0,r.jsxs)(a.p,{children:["En Room, la base de datos es una clase abstracta que:",(0,r.jsx)(a.br,{}),"\n","1\ufe0f\u20e3 Extiende la clase ",(0,r.jsx)(a.code,{children:"RoomDatabase"}),".",(0,r.jsx)(a.br,{}),"\n","2\ufe0f\u20e3 Est\xe1 anotada con ",(0,r.jsx)(a.code,{children:"@Database"})," para definir las entidades que contiene y su versi\xf3n.",(0,r.jsx)(a.br,{}),"\n","3\ufe0f\u20e3 Proporciona m\xe9todos abstractos que exponen los DAOs."]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h2,{id:"c\xf3mo-crear-una-base-de-datos-\ufe0f",children:[(0,r.jsx)(a.strong,{children:"C\xf3mo crear una Base de Datos"})," \ud83d\udee0\ufe0f"]}),"\n",(0,r.jsxs)(a.h3,{id:"1-anotar-la-clase-con-database",children:["1. Anotar la clase con ",(0,r.jsx)(a.code,{children:"@Database"})]}),"\n",(0,r.jsxs)(a.p,{children:["La anotaci\xf3n ",(0,r.jsx)(a.code,{children:"@Database"})," especifica:"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Las entidades que pertenecen a la base de datos"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"La versi\xf3n de la base de datos"}),", que es necesaria para gestionar migraciones."]}),"\n"]}),"\n",(0,r.jsxs)(a.h3,{id:"2-extender-roomdatabase",children:["2. Extender ",(0,r.jsx)(a.code,{children:"RoomDatabase"})]}),"\n",(0,r.jsxs)(a.p,{children:["La clase debe heredar de ",(0,r.jsx)(a.code,{children:"RoomDatabase"}),", lo que permite a Room gestionar autom\xe1ticamente el acceso a los datos."]}),"\n",(0,r.jsx)(a.h3,{id:"3-proporcionar-m\xe9todos-para-los-daos",children:"3. Proporcionar m\xe9todos para los DAOs"}),"\n",(0,r.jsx)(a.p,{children:"Se define un m\xe9todo abstracto para cada DAO que se necesite en la base de datos."}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h2,{id:"ejemplo-completo-de-una-base-de-datos-",children:[(0,r.jsx)(a.strong,{children:"Ejemplo completo de una Base de Datos"})," \ud83d\udcd8"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"import androidx.room.Database;\r\nimport androidx.room.RoomDatabase;\r\n\r\n@Database(entities = {User.class, Order.class}, version = 1)\r\npublic abstract class AppDatabase extends RoomDatabase {\r\n\r\n    // M\xe9todo para acceder al UserDao\r\n    public abstract UserDao userDao();\r\n\r\n    // M\xe9todo para acceder al OrderDao\r\n    public abstract OrderDao orderDao();\r\n}\n"})}),"\n",(0,r.jsx)(a.p,{children:"En este ejemplo:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["La base de datos contiene dos entidades: ",(0,r.jsx)(a.code,{children:"User"})," y ",(0,r.jsx)(a.code,{children:"Order"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:["Proporciona dos DAOs: ",(0,r.jsx)(a.code,{children:"UserDao"})," y ",(0,r.jsx)(a.code,{children:"OrderDao"}),"."]}),"\n"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h2,{id:"par\xe1metros-de-la-anotaci\xf3n-database-",children:[(0,r.jsxs)(a.strong,{children:["Par\xe1metros de la anotaci\xf3n ",(0,r.jsx)(a.code,{children:"@Database"})]})," \ud83d\udcca"]}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"Par\xe1metro"}),(0,r.jsx)(a.th,{children:"Descripci\xf3n"})]})}),(0,r.jsxs)(a.tbody,{children:[(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"entities"})}),(0,r.jsx)(a.td,{children:"Lista de clases que representan las tablas de la base de datos."})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"version"})}),(0,r.jsx)(a.td,{children:"Versi\xf3n del esquema de la base de datos. Se incrementa cuando cambian las entidades."})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"exportSchema"})}),(0,r.jsxs)(a.td,{children:["Si se establece en ",(0,r.jsx)(a.code,{children:"true"}),", exporta el esquema de la base de datos a un archivo JSON."]})]})]})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h2,{id:"inicializaci\xf3n-de-la-base-de-datos-",children:[(0,r.jsx)(a.strong,{children:"Inicializaci\xf3n de la Base de Datos"})," \ud83d\ude80"]}),"\n",(0,r.jsxs)(a.p,{children:["Room proporciona un m\xe9todo ",(0,r.jsx)(a.code,{children:"Room.databaseBuilder"})," para crear una instancia de la base de datos."]}),"\n",(0,r.jsx)(a.h3,{id:"ejemplo-b\xe1sico",children:"Ejemplo b\xe1sico"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'import android.content.Context;\r\nimport androidx.room.Room;\r\n\r\npublic class DatabaseClient {\r\n\r\n    private static DatabaseClient instance;\r\n    private final AppDatabase appDatabase;\r\n\r\n    private DatabaseClient(Context context) {\r\n        appDatabase = Room.databaseBuilder(\r\n                context.getApplicationContext(),\r\n                AppDatabase.class,\r\n                "my_database"\r\n        ).build();\r\n    }\r\n\r\n    public static synchronized DatabaseClient getInstance(Context context) {\r\n        if (instance == null) {\r\n            instance = new DatabaseClient(context);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public AppDatabase getAppDatabase() {\r\n        return appDatabase;\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h2,{id:"gesti\xf3n-del-esquema-con-version-\ufe0f",children:[(0,r.jsxs)(a.strong,{children:["Gesti\xf3n del esquema con ",(0,r.jsx)(a.code,{children:"version"})]})," \u2699\ufe0f"]}),"\n",(0,r.jsx)(a.p,{children:"Cada vez que realices cambios en el esquema (por ejemplo, agregar una columna), debes incrementar el n\xfamero de versi\xf3n y manejar la migraci\xf3n."}),"\n",(0,r.jsx)(a.h3,{id:"ejemplo-de-migraci\xf3n",children:"Ejemplo de migraci\xf3n"}),"\n",(0,r.jsxs)(a.p,{children:["Imagina que en la versi\xf3n 2 quieres agregar una nueva columna ",(0,r.jsx)(a.code,{children:"age"})," a la tabla ",(0,r.jsx)(a.code,{children:"users"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'static final Migration MIGRATION_1_2 = new Migration(1, 2) {\r\n    @Override\r\n    public void migrate(SupportSQLiteDatabase database) {\r\n        database.execSQL("ALTER TABLE users ADD COLUMN age INTEGER");\r\n    }\r\n};\n'})}),"\n",(0,r.jsx)(a.p,{children:"Al construir la base de datos, registra la migraci\xf3n:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'Room.databaseBuilder(context, AppDatabase.class, "my_database")\r\n    .addMigrations(MIGRATION_1_2)\r\n    .build();\n'})}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h2,{id:"integraci\xf3n-con-singletons-",children:[(0,r.jsx)(a.strong,{children:"Integraci\xf3n con Singletons"})," \ud83e\udde9"]}),"\n",(0,r.jsxs)(a.p,{children:["Es com\xfan que la base de datos se inicialice como un ",(0,r.jsx)(a.strong,{children:"Singleton"})," para evitar m\xfaltiples instancias en el proyecto."]}),"\n",(0,r.jsx)(a.h3,{id:"patr\xf3n-singleton",children:"Patr\xf3n Singleton"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'public class DatabaseInstance {\r\n\r\n    private static AppDatabase instance;\r\n\r\n    public static synchronized AppDatabase getDatabase(Context context) {\r\n        if (instance == null) {\r\n            instance = Room.databaseBuilder(\r\n                    context.getApplicationContext(),\r\n                    AppDatabase.class,\r\n                    "app_database"\r\n            ).build();\r\n        }\r\n        return instance;\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h2,{id:"buenas-pr\xe1cticas-",children:[(0,r.jsx)(a.strong,{children:"Buenas pr\xe1cticas"})," \u2705"]}),"\n",(0,r.jsxs)(a.admonition,{title:"Sigue estos consejos...",type:"tip",children:[(0,r.jsxs)(a.p,{children:["1\ufe0f\u20e3 ",(0,r.jsx)(a.strong,{children:"Evita operaciones en el hilo principal"}),":",(0,r.jsx)(a.br,{}),"\n","Room no permite consultas en el hilo principal por defecto. Usa coroutines o un hilo separado para las operaciones de base de datos."]}),(0,r.jsxs)(a.p,{children:["2\ufe0f\u20e3 ",(0,r.jsx)(a.strong,{children:"Manejo adecuado de migraciones"}),":",(0,r.jsx)(a.br,{}),"\n","Siempre incrementa el n\xfamero de versi\xf3n y proporciona migraciones al realizar cambios en el esquema."]}),(0,r.jsxs)(a.p,{children:["3\ufe0f\u20e3 ",(0,r.jsx)(a.strong,{children:"Singleton para la base de datos"}),":",(0,r.jsx)(a.br,{}),"\n","Aseg\xfarate de usar una \xfanica instancia de la base de datos para evitar bloqueos y mejorar el rendimiento."]})]}),"\n",(0,r.jsx)(a.hr,{})]})}function p(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>t});var s=n(6540);const r={},o=s.createContext(r);function i(e){const a=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:a},e.children)}}}]);