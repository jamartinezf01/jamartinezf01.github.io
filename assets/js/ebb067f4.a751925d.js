"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[3],{4426:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"python/UT5- Funciones y Modularidad/5.4_orden_superior","title":"5.4 Funciones de orden superior","description":"En Python, las funciones son ciudadanos de primera clase (first-class objects), lo que significa que se pueden almacenar en variables, pasar como argumentos y devolver como resultado de otras funciones.","source":"@site/docs/python/UT5- Funciones y Modularidad/5.4_orden_superior.md","sourceDirName":"python/UT5- Funciones y Modularidad","slug":"/python/UT5- Funciones y Modularidad/5.4_orden_superior","permalink":"/docs/python/UT5- Funciones y Modularidad/5.4_orden_superior","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"pythonSidebar","previous":{"title":"5.3 Funciones An\xf3nimas","permalink":"/docs/python/UT5- Funciones y Modularidad/5.3_lambdas"},"next":{"title":"5.5  M\xf3dulos","permalink":"/docs/python/UT5- Funciones y Modularidad/5.5_modulos/"}}');var a=r(4848),s=r(8453);const d={sidebar_position:4},i="5.4 Funciones de orden superior",c={},l=[{value:"1\ufe0f\u20e3 <strong>Qu\xe9 es una funci\xf3n de orden superior</strong>",id:"1\ufe0f\u20e3-qu\xe9-es-una-funci\xf3n-de-orden-superior",level:2},{value:"2\ufe0f\u20e3 <strong>Funciones como objetos de primera clase</strong>",id:"2\ufe0f\u20e3-funciones-como-objetos-de-primera-clase",level:2},{value:"3\ufe0f\u20e3 <strong>Funciones que devuelven otras funciones</strong>",id:"3\ufe0f\u20e3-funciones-que-devuelven-otras-funciones",level:2},{value:"4\ufe0f\u20e3 <strong>Funciones de orden superior incorporadas</strong>",id:"4\ufe0f\u20e3-funciones-de-orden-superior-incorporadas",level:2},{value:"\ud83d\udfe9 <code>map()</code>",id:"-map",level:3},{value:"\ud83d\udfe6 <code>filter()</code>",id:"-filter",level:3},{value:"\ud83d\udfe8 <code>reduce()</code>",id:"-reduce",level:3},{value:"5\ufe0f\u20e3 <strong>Creaci\xf3n de funciones personalizadas con closures</strong>",id:"5\ufe0f\u20e3-creaci\xf3n-de-funciones-personalizadas-con-closures",level:2},{value:"6\ufe0f\u20e3 <strong>Ejemplos pr\xe1cticos de funciones de orden superior</strong>",id:"6\ufe0f\u20e3-ejemplos-pr\xe1cticos-de-funciones-de-orden-superior",level:2},{value:"\ud83d\udfe9 Ejemplo 1: transformaci\xf3n de datos",id:"-ejemplo-1-transformaci\xf3n-de-datos",level:3},{value:"\ud83d\udfe6 Ejemplo 2: filtrado condicional",id:"-ejemplo-2-filtrado-condicional",level:3},{value:"\ud83d\udfe8 Ejemplo 3: devolver funciones configuradas",id:"-ejemplo-3-devolver-funciones-configuradas",level:3},{value:"7\ufe0f\u20e3 <strong>Beneficios de las funciones de orden superior</strong>",id:"7\ufe0f\u20e3-beneficios-de-las-funciones-de-orden-superior",level:2},{value:"8\ufe0f\u20e3 <strong>Decoradores</strong>",id:"8\ufe0f\u20e3-decoradores",level:2},{value:"\ud83d\udfe9 Concepto b\xe1sico",id:"-concepto-b\xe1sico",level:3},{value:"\ud83d\udfe6 Uso de la sintaxis <code>@decorador</code>",id:"-uso-de-la-sintaxis-decorador",level:3},{value:"\ud83d\udfe8 Decoradores con argumentos",id:"-decoradores-con-argumentos",level:3},{value:"\ud83d\udfe7 Decoradores anidados",id:"-decoradores-anidados",level:3},{value:"\ud83d\udfe5 Decoradores con argumentos propios",id:"-decoradores-con-argumentos-propios",level:3},{value:"\ud83d\udfea Uso de <code>functools.wraps</code>",id:"-uso-de-functoolswraps",level:3},{value:"\ud83d\udfeb Casos de uso comunes",id:"-casos-de-uso-comunes",level:3},{value:"9\ufe0f\u20e3 <strong>Generadores</strong>",id:"9\ufe0f\u20e3-generadores",level:2},{value:"\ud83d\udfe9 Concepto general",id:"-concepto-general",level:3},{value:"\ud83d\udfe6 Diferencias entre <code>return</code> y <code>yield</code>",id:"-diferencias-entre-return-y-yield",level:3},{value:"\ud83d\udfe8 Uso de <code>next()</code> con generadores",id:"-uso-de-next-con-generadores",level:3},{value:"\ud83d\udfe7 Generadores por comprensi\xf3n",id:"-generadores-por-comprensi\xf3n",level:3},{value:"\ud83d\udfea Ventajas de los generadores",id:"-ventajas-de-los-generadores",level:3},{value:"\ud83d\udfeb Uso de <code>yield from</code>",id:"-uso-de-yield-from",level:3},{value:"\ud83d\udfe9 Ejemplos de uso de generadores",id:"-ejemplos-de-uso-de-generadores",level:3},{value:"Ejemplo avanzado: procesador de datos",id:"ejemplo-avanzado-procesador-de-datos",level:4},{value:"Ejemplo: combinaci\xf3n de generadores",id:"ejemplo-combinaci\xf3n-de-generadores",level:4},{value:"Ejemplo final: simulaci\xf3n de flujo de datos",id:"ejemplo-final-simulaci\xf3n-de-flujo-de-datos",level:4},{value:"\ud83d\udcca <strong>Tabla resumen</strong>",id:"-tabla-resumen",level:2}];function t(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"54-funciones-de-orden-superior",children:"5.4 Funciones de orden superior"})}),"\n",(0,a.jsxs)(n.p,{children:["En Python, las ",(0,a.jsx)(n.strong,{children:"funciones son ciudadanos de primera clase"})," (",(0,a.jsx)(n.em,{children:"first-class objects"}),"), lo que significa que se pueden ",(0,a.jsx)(n.strong,{children:"almacenar en variables, pasar como argumentos y devolver como resultado"})," de otras funciones.\r\nEste comportamiento permite crear las llamadas ",(0,a.jsx)(n.strong,{children:"funciones de orden superior"}),", es decir, funciones que ",(0,a.jsx)(n.strong,{children:"reciben otras funciones como par\xe1metro o las devuelven como resultado"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Este concepto procede de la ",(0,a.jsx)(n.strong,{children:"programaci\xf3n funcional"})," y ofrece una gran flexibilidad a la hora de estructurar el c\xf3digo."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"1\ufe0f\u20e3-qu\xe9-es-una-funci\xf3n-de-orden-superior",children:["1\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Qu\xe9 es una funci\xf3n de orden superior"})]}),"\n",(0,a.jsx)(n.p,{children:"Una funci\xf3n de orden superior es aquella que:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Recibe una funci\xf3n como argumento"}),", o"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Devuelve una funci\xf3n como resultado"}),", o ambas cosas a la vez."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Gracias a este mecanismo, Python permite construir estructuras m\xe1s expresivas y reutilizables."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de funci\xf3n que recibe otra funci\xf3n"',children:'def aplicar_operacion(funcion, valor):\r\n    """Aplica la funci\xf3n recibida al valor dado."""\r\n    return funcion(valor)\r\n\r\ndef cuadrado(x):\r\n    return x ** 2\r\n\r\nprint(aplicar_operacion(cuadrado, 5))\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["La funci\xf3n ",(0,a.jsx)(n.code,{children:"aplicar_operacion()"})," recibe como argumento otra funci\xf3n (",(0,a.jsx)(n.code,{children:"cuadrado"}),") y un valor (",(0,a.jsx)(n.code,{children:"5"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Dentro de ",(0,a.jsx)(n.code,{children:"aplicar_operacion()"})," se ejecuta ",(0,a.jsx)(n.code,{children:"funcion(valor)"}),", que en este caso equivale a ",(0,a.jsx)(n.code,{children:"cuadrado(5)"}),", devolviendo ",(0,a.jsx)(n.code,{children:"25"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"De este modo, una funci\xf3n puede actuar sobre otras funciones sin conocer su implementaci\xf3n concreta."}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"2\ufe0f\u20e3-funciones-como-objetos-de-primera-clase",children:["2\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Funciones como objetos de primera clase"})]}),"\n",(0,a.jsx)(n.p,{children:"En Python, las funciones son tratadas como cualquier otro tipo de dato.\r\nEsto significa que se pueden:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Asignar a variables,"}),"\n",(0,a.jsx)(n.li,{children:"Pasar como par\xe1metros,"}),"\n",(0,a.jsx)(n.li,{children:"Guardar en estructuras de datos,"}),"\n",(0,a.jsx)(n.li,{children:"Y devolver como resultado de otra funci\xf3n."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo, almacenamiento de funciones en una lista"',children:"def sumar(a, b): \r\n    return a + b\r\n\r\ndef restar(a, b): \r\n    return a - b\r\n\r\ndef multiplicar(a, b): \r\n    return a * b\r\n\r\noperaciones = [sumar, restar, multiplicar]\r\n\r\nfor operacion in operaciones:\r\n    print(operacion(5, 3))\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Cada elemento de la lista ",(0,a.jsx)(n.code,{children:"operaciones"})," es una referencia a una funci\xf3n."]}),"\n",(0,a.jsxs)(n.li,{children:["El bucle ",(0,a.jsx)(n.code,{children:"for"})," recorre la lista y ejecuta cada una, mostrando los resultados:\r\n",(0,a.jsx)(n.code,{children:"8"}),", ",(0,a.jsx)(n.code,{children:"2"})," y ",(0,a.jsx)(n.code,{children:"15"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Esta t\xe9cnica resulta \xfatil para aplicar un conjunto de operaciones de forma din\xe1mica."}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"3\ufe0f\u20e3-funciones-que-devuelven-otras-funciones",children:["3\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Funciones que devuelven otras funciones"})]}),"\n",(0,a.jsxs)(n.p,{children:["Una funci\xf3n de orden superior tambi\xe9n puede ",(0,a.jsx)(n.strong,{children:"devolver otra funci\xf3n"}),".\r\nEsto se utiliza, por ejemplo, para crear ",(0,a.jsx)(n.strong,{children:"funciones personalizadas o configuradas din\xe1micamente"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo, funci\xf3n que genera otras funciones"',children:'def crear_multiplicador(factor):\r\n    """Devuelve una nueva funci\xf3n que multiplica por el factor dado."""\r\n    def multiplicar(numero):\r\n        return numero * factor\r\n    return multiplicar\r\n\r\npor_dos = crear_multiplicador(2)\r\npor_tres = crear_multiplicador(3)\r\n\r\nprint(por_dos(10))\r\nprint(por_tres(10))\n'})}),"\n",(0,a.jsxs)(n.admonition,{type:"explicacion",children:[(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["La funci\xf3n ",(0,a.jsx)(n.code,{children:"crear_multiplicador()"})," devuelve otra funci\xf3n (",(0,a.jsx)(n.code,{children:"multiplicar"}),") que recuerda el valor de ",(0,a.jsx)(n.code,{children:"factor"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Cuando se llama a ",(0,a.jsx)(n.code,{children:"por_dos(10)"}),", devuelve ",(0,a.jsx)(n.code,{children:"20"}),", y ",(0,a.jsx)(n.code,{children:"por_tres(10)"})," devuelve ",(0,a.jsx)(n.code,{children:"30"}),"."]}),"\n"]}),(0,a.jsxs)(n.p,{children:["Este comportamiento se conoce como ",(0,a.jsx)(n.strong,{children:"closure"})," (clausura), y permite mantener valores en memoria incluso despu\xe9s de que la funci\xf3n exterior haya finalizado."]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"4\ufe0f\u20e3-funciones-de-orden-superior-incorporadas",children:["4\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Funciones de orden superior incorporadas"})]}),"\n",(0,a.jsxs)(n.p,{children:["Python incluye varias funciones de orden superior muy utilizadas que ya hemos presentado en el punto anterior: ",(0,a.jsx)(n.code,{children:"map()"}),", ",(0,a.jsx)(n.code,{children:"filter()"})," y ",(0,a.jsx)(n.code,{children:"reduce()"}),".\r\nEstas funciones toman otra funci\xf3n como argumento para aplicar transformaciones o filtrados sobre colecciones de datos."]}),"\n",(0,a.jsxs)(n.h3,{id:"-map",children:["\ud83d\udfe9 ",(0,a.jsx)(n.code,{children:"map()"})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"map(funcion, iterable)"})," aplica la funci\xf3n especificada a cada elemento del iterable y devuelve un nuevo objeto de tipo ",(0,a.jsx)(n.code,{children:"map"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Uso de map() con una funci\xf3n normal"',children:"def elevar_cuadrado(x):\r\n    return x ** 2\r\n\r\nnumeros = [1, 2, 3, 4, 5]\r\nresultado = list(map(elevar_cuadrado, numeros))\r\nprint(resultado)\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"explicacion",children:[(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Cada elemento de la lista ",(0,a.jsx)(n.code,{children:"numeros"})," se eleva al cuadrado mediante la funci\xf3n ",(0,a.jsx)(n.code,{children:"elevar_cuadrado"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["El resultado final es ",(0,a.jsx)(n.code,{children:"[1, 4, 9, 16, 25]"}),"."]}),"\n"]}),(0,a.jsxs)(n.p,{children:["Esta misma operaci\xf3n podr\xeda realizarse con una funci\xf3n ",(0,a.jsx)(n.code,{children:"lambda"})," para simplificar a\xfan m\xe1s el c\xf3digo."]})]}),"\n",(0,a.jsxs)(n.h3,{id:"-filter",children:["\ud83d\udfe6 ",(0,a.jsx)(n.code,{children:"filter()"})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"filter(funcion, iterable)"})," recorre una colecci\xf3n y conserva solo los elementos que hacen que la funci\xf3n devuelva ",(0,a.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Uso de filter() para seleccionar n\xfameros pares"',children:"def es_par(n):\r\n    return n % 2 == 0\r\n\r\nnumeros = [10, 15, 20, 25, 30]\r\npares = list(filter(es_par, numeros))\r\nprint(pares)\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["La funci\xf3n ",(0,a.jsx)(n.code,{children:"es_par()"})," devuelve ",(0,a.jsx)(n.code,{children:"True"})," solo para los n\xfameros pares."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"filter()"})," aplica esa funci\xf3n a cada elemento y devuelve una nueva lista con los que cumplen la condici\xf3n: ",(0,a.jsx)(n.code,{children:"[10, 20, 30]"}),"."]}),"\n"]})}),"\n",(0,a.jsxs)(n.h3,{id:"-reduce",children:["\ud83d\udfe8 ",(0,a.jsx)(n.code,{children:"reduce()"})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"reduce(funcion, iterable)"})," aplica una funci\xf3n acumulativa a los elementos de una secuencia.\r\nA diferencia de ",(0,a.jsx)(n.code,{children:"map()"})," y ",(0,a.jsx)(n.code,{children:"filter()"}),", no est\xe1 incorporada directamente, sino que pertenece al m\xf3dulo ",(0,a.jsx)(n.code,{children:"functools"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Uso de reduce() para calcular un producto total"',children:"from functools import reduce\r\n\r\ndef multiplicar(x, y):\r\n    return x * y\r\n\r\nnumeros = [1, 2, 3, 4, 5]\r\nresultado = reduce(multiplicar, numeros)\r\nprint(resultado)\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"explicacion",children:[(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"reduce()"})," aplica la funci\xf3n ",(0,a.jsx)(n.code,{children:"multiplicar"})," acumulativamente sobre la lista."]}),"\n",(0,a.jsxs)(n.li,{children:["Primero multiplica ",(0,a.jsx)(n.code,{children:"1\xd72"}),", luego el resultado por ",(0,a.jsx)(n.code,{children:"3"}),", y as\xed sucesivamente, hasta obtener ",(0,a.jsx)(n.code,{children:"120"}),"."]}),"\n"]}),(0,a.jsx)(n.p,{children:"Es una herramienta poderosa para combinar elementos en un \xfanico resultado."})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"5\ufe0f\u20e3-creaci\xf3n-de-funciones-personalizadas-con-closures",children:["5\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Creaci\xf3n de funciones personalizadas con closures"})]}),"\n",(0,a.jsxs)(n.p,{children:["Los ",(0,a.jsx)(n.strong,{children:"closures"})," son funciones internas que conservan el estado de las variables de la funci\xf3n exterior incluso despu\xe9s de que esta haya terminado.\r\nSe utilizan para crear funciones configuradas que recuerdan un valor o contexto determinado."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de closure"',children:'def contador():\r\n    """Devuelve una funci\xf3n que incrementa un contador interno."""\r\n    n = 0\r\n    def incrementar():\r\n        nonlocal n\r\n        n += 1\r\n        return n\r\n    return incrementar\r\n\r\nc = contador()\r\nprint(c())  # 1\r\nprint(c())  # 2\r\nprint(c())  # 3\n'})}),"\n",(0,a.jsxs)(n.admonition,{type:"explicacion",children:[(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["La variable ",(0,a.jsx)(n.code,{children:"n"})," pertenece al \xe1mbito de ",(0,a.jsx)(n.code,{children:"contador()"})," y se conserva gracias al uso de ",(0,a.jsx)(n.code,{children:"nonlocal"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Cada vez que se llama a ",(0,a.jsx)(n.code,{children:"c()"}),", el valor interno de ",(0,a.jsx)(n.code,{children:"n"})," se incrementa, manteni\xe9ndose entre ejecuciones."]}),"\n"]}),(0,a.jsx)(n.p,{children:"Esto demuestra que las funciones pueden retener un \u201cestado interno\u201d sin usar variables globales."})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"6\ufe0f\u20e3-ejemplos-pr\xe1cticos-de-funciones-de-orden-superior",children:["6\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Ejemplos pr\xe1cticos de funciones de orden superior"})]}),"\n",(0,a.jsx)(n.h3,{id:"-ejemplo-1-transformaci\xf3n-de-datos",children:"\ud83d\udfe9 Ejemplo 1: transformaci\xf3n de datos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Aplicar una funci\xf3n a todos los elementos de una lista"',children:'def aplicar(funcion, datos):\r\n    """Aplica una funci\xf3n a cada elemento de una lista."""\r\n    return [funcion(x) for x in datos]\r\n\r\nnumeros = [1, 2, 3, 4]\r\nresultado = aplicar(lambda x: x ** 3, numeros)\r\nprint(resultado)\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["La funci\xf3n ",(0,a.jsx)(n.code,{children:"aplicar()"})," recibe otra funci\xf3n (",(0,a.jsx)(n.code,{children:"lambda x: x ** 3"}),") y una lista de n\xfameros."]}),"\n",(0,a.jsx)(n.li,{children:"Devuelve una nueva lista con cada n\xfamero elevado al cubo."}),"\n"]})}),"\n",(0,a.jsx)(n.h3,{id:"-ejemplo-2-filtrado-condicional",children:"\ud83d\udfe6 Ejemplo 2: filtrado condicional"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Filtrar elementos seg\xfan una condici\xf3n"',children:'def filtrar(funcion, datos):\r\n    """Devuelve una lista con los elementos que cumplen la condici\xf3n."""\r\n    return [x for x in datos if funcion(x)]\r\n\r\nvalores = [5, 8, 13, 21, 34]\r\npares = filtrar(lambda x: x % 2 == 0, valores)\r\nprint(pares)\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["La funci\xf3n ",(0,a.jsx)(n.code,{children:"filtrar()"})," recibe como argumento una funci\xf3n que comprueba si un n\xfamero es par."]}),"\n",(0,a.jsxs)(n.li,{children:["El resultado ser\xe1 ",(0,a.jsx)(n.code,{children:"[8, 34]"}),"."]}),"\n"]})}),"\n",(0,a.jsx)(n.h3,{id:"-ejemplo-3-devolver-funciones-configuradas",children:"\ud83d\udfe8 Ejemplo 3: devolver funciones configuradas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Generar funciones configurables"',children:'def potencia(n):\r\n    """Devuelve una funci\xf3n que eleva al exponente n."""\r\n    def elevar(x):\r\n        return x ** n\r\n    return elevar\r\n\r\nal_cuadrado = potencia(2)\r\nal_cubo = potencia(3)\r\n\r\nprint(al_cuadrado(5))  # 25\r\nprint(al_cubo(2))      # 8\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"potencia()"})," genera nuevas funciones personalizadas: una que eleva al cuadrado y otra al cubo."]}),"\n",(0,a.jsxs)(n.li,{children:["Cada una conserva el valor de ",(0,a.jsx)(n.code,{children:"n"})," gracias al mecanismo de cierre (closure)."]}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"7\ufe0f\u20e3-beneficios-de-las-funciones-de-orden-superior",children:["7\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Beneficios de las funciones de orden superior"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Ventajas principales:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Permiten ",(0,a.jsx)(n.strong,{children:"mayor modularidad"}),": el comportamiento se pasa como par\xe1metro."]}),"\n",(0,a.jsxs)(n.li,{children:["Facilitan la ",(0,a.jsx)(n.strong,{children:"reutilizaci\xf3n del c\xf3digo"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Favorecen un estilo de programaci\xf3n ",(0,a.jsx)(n.strong,{children:"m\xe1s declarativo y expresivo"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Reducen la necesidad de bucles expl\xedcitos."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Ejemplo :"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo con map(), filter() y reduce()"',children:"from functools import reduce\r\n\r\nnumeros = [1, 2, 3, 4, 5]\r\n\r\nresultado = reduce(\r\n    lambda x, y: x + y,\r\n    filter(lambda n: n % 2 == 0, map(lambda n: n ** 2, numeros))\r\n)\r\n\r\nprint(resultado)\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"map(lambda n: n ** 2, numeros)"})," genera los cuadrados \u2192 ",(0,a.jsx)(n.code,{children:"[1, 4, 9, 16, 25]"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"filter(lambda n: n % 2 == 0, ...)"})," conserva solo los pares \u2192 ",(0,a.jsx)(n.code,{children:"[4, 16]"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"reduce(lambda x, y: x + y, ...)"})," suma los valores \u2192 ",(0,a.jsx)(n.code,{children:"20"}),".\r\nEste ejemplo combina tres funciones de orden superior en una \xfanica l\xednea clara y compacta."]}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"8\ufe0f\u20e3-decoradores",children:["8\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Decoradores"})]}),"\n",(0,a.jsxs)(n.p,{children:["Los ",(0,a.jsx)(n.strong,{children:"decoradores"})," son una de las aplicaciones m\xe1s potentes y elegantes de las ",(0,a.jsx)(n.strong,{children:"funciones de orden superior"})," en Python.\r\nUn decorador es una funci\xf3n que ",(0,a.jsx)(n.strong,{children:"recibe otra funci\xf3n como argumento y devuelve una nueva funci\xf3n"}),", generalmente ",(0,a.jsx)(n.strong,{children:"modificando o ampliando su comportamiento"})," sin alterar su c\xf3digo original."]}),"\n",(0,a.jsx)(n.p,{children:"Se utilizan con frecuencia para:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Registrar o medir la ejecuci\xf3n de funciones."}),"\n",(0,a.jsx)(n.li,{children:"Controlar el acceso a recursos."}),"\n",(0,a.jsx)(n.li,{children:"Validar par\xe1metros."}),"\n",(0,a.jsxs)(n.li,{children:["Implementar patrones como ",(0,a.jsx)(n.em,{children:"logging"}),", ",(0,a.jsx)(n.em,{children:"caching"})," o ",(0,a.jsx)(n.em,{children:"autenticaci\xf3n"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"-concepto-b\xe1sico",children:"\ud83d\udfe9 Concepto b\xe1sico"}),"\n",(0,a.jsxs)(n.p,{children:["En esencia, un decorador es una ",(0,a.jsx)(n.strong,{children:"funci\xf3n que envuelve otra funci\xf3n"}),".\r\nEsto se conoce como el ",(0,a.jsx)(n.em,{children:"patr\xf3n de envoltura"})," (",(0,a.jsx)(n.em,{children:"wrapper pattern"}),")."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo b\xe1sico de decorador manual"',children:'def decorador(funcion):\r\n    """Ejemplo de decorador que muestra mensajes antes y despu\xe9s."""\r\n    def envoltura():\r\n        print("Antes de ejecutar la funci\xf3n...")\r\n        funcion()\r\n        print("Despu\xe9s de ejecutar la funci\xf3n...")\r\n    return envoltura\r\n\r\ndef saludo():\r\n    print("\xa1Hola, mundo!")\r\n\r\nsaludo = decorador(saludo)\r\nsaludo()\r\n\r\n# Antes de ejecutar la funci\xf3n...\r\n# \xa1Hola, mundo!\r\n# Despu\xe9s de ejecutar la funci\xf3n...\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"decorador()"})," recibe la funci\xf3n ",(0,a.jsx)(n.code,{children:"saludo"})," como argumento."]}),"\n",(0,a.jsxs)(n.li,{children:["Dentro de ",(0,a.jsx)(n.code,{children:"decorador()"})," se define ",(0,a.jsx)(n.code,{children:"envoltura()"}),", que a\xf1ade mensajes antes y despu\xe9s de llamar a la funci\xf3n original."]}),"\n",(0,a.jsxs)(n.li,{children:["Finalmente, ",(0,a.jsx)(n.code,{children:"decorador()"})," devuelve la funci\xf3n ",(0,a.jsx)(n.code,{children:"envoltura()"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Al reasignar ",(0,a.jsx)(n.code,{children:"saludo = decorador(saludo)"}),", la llamada ",(0,a.jsx)(n.code,{children:"saludo()"})," ya no ejecuta directamente la funci\xf3n original, sino la versi\xf3n decorada."]}),"\n"]})}),"\n",(0,a.jsxs)(n.h3,{id:"-uso-de-la-sintaxis-decorador",children:["\ud83d\udfe6 Uso de la sintaxis ",(0,a.jsx)(n.code,{children:"@decorador"})]}),"\n",(0,a.jsxs)(n.p,{children:["Python ofrece una ",(0,a.jsx)(n.strong,{children:"sintaxis simplificada"})," para aplicar decoradores mediante el s\xedmbolo ",(0,a.jsx)(n.code,{children:"@"}),".\r\nEn lugar de reasignar manualmente la funci\xf3n, se coloca ",(0,a.jsx)(n.code,{children:"@nombre_del_decorador"})," justo encima de la definici\xf3n."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Uso de la sintaxis @decorador"',children:'def decorador(funcion):\r\n    def envoltura():\r\n        print("Ejecutando decorador...")\r\n        funcion()\r\n        print("Fin de la ejecuci\xf3n.")\r\n    return envoltura\r\n\r\n@decorador\r\ndef saludo():\r\n    print("Hola desde la funci\xf3n decorada.")\r\n\r\nsaludo()\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:["El decorador ",(0,a.jsx)(n.code,{children:"@decorador"})," equivale a escribir ",(0,a.jsx)(n.code,{children:"saludo = decorador(saludo)"})," justo despu\xe9s de definir la funci\xf3n.\r\nEsta forma es m\xe1s legible y habitual en el c\xf3digo Python moderno."]})}),"\n",(0,a.jsx)(n.h3,{id:"-decoradores-con-argumentos",children:"\ud83d\udfe8 Decoradores con argumentos"}),"\n",(0,a.jsxs)(n.p,{children:["Si la funci\xf3n original recibe argumentos, el decorador debe estar preparado para capturarlos y reenviarlos correctamente mediante ",(0,a.jsx)(n.code,{children:"*args"})," y ",(0,a.jsx)(n.code,{children:"**kwargs"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Decorador que admite par\xe1metros en la funci\xf3n decorada"',children:'def decorador(funcion):\r\n    def envoltura(*args, **kwargs):\r\n        print("Llamando a la funci\xf3n con argumentos:", args, kwargs)\r\n        resultado = funcion(*args, **kwargs)\r\n        print("Ejecuci\xf3n finalizada.")\r\n        return resultado\r\n    return envoltura\r\n\r\n@decorador\r\ndef sumar(a, b):\r\n    print(f"La suma es: {a + b}")\r\n    return a + b\r\n\r\nresultado = sumar(3, 5)\r\nprint("Resultado devuelto:", resultado)\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["El decorador ahora puede interceptar los par\xe1metros con ",(0,a.jsx)(n.code,{children:"*args"})," y ",(0,a.jsx)(n.code,{children:"**kwargs"}),", imprimirlos o modificarlos, y finalmente pasarlos a la funci\xf3n original."]}),"\n",(0,a.jsxs)(n.li,{children:["El decorador tambi\xe9n puede devolver el resultado original (",(0,a.jsx)(n.code,{children:"resultado"}),"), lo que lo hace completamente transparente para quien use la funci\xf3n."]}),"\n"]})}),"\n",(0,a.jsx)(n.h3,{id:"-decoradores-anidados",children:"\ud83d\udfe7 Decoradores anidados"}),"\n",(0,a.jsxs)(n.p,{children:["Una funci\xf3n puede tener ",(0,a.jsx)(n.strong,{children:"varios decoradores aplicados a la vez"}),".\r\nSe ejecutan en el orden en que aparecen, de arriba a abajo."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de varios decoradores"',children:'def mayusculas(funcion):\r\n    def envoltura():\r\n        return funcion().upper()\r\n    return envoltura\r\n\r\ndef signos_exclamacion(funcion):\r\n    def envoltura():\r\n        return f"\xa1{funcion()}!"\r\n    return envoltura\r\n\r\n@signos_exclamacion\r\n@mayusculas\r\ndef saludo():\r\n    return "hola mundo"\r\n\r\nprint(saludo()) # \xa1HOLA MUNDO!\n'})}),"\n",(0,a.jsxs)(n.admonition,{type:"explicacion",children:[(0,a.jsxs)(n.p,{children:["Primero se aplica ",(0,a.jsx)(n.code,{children:"@mayusculas"}),", y luego ",(0,a.jsx)(n.code,{children:"@signos_exclamacion"}),"."]}),(0,a.jsxs)(n.p,{children:["Cada decorador modifica el resultado del anterior, formando una ",(0,a.jsx)(n.strong,{children:"cadena de transformaciones"}),"."]})]}),"\n",(0,a.jsx)(n.h3,{id:"-decoradores-con-argumentos-propios",children:"\ud83d\udfe5 Decoradores con argumentos propios"}),"\n",(0,a.jsxs)(n.p,{children:["A veces el decorador en s\xed necesita ",(0,a.jsx)(n.strong,{children:"recibir par\xe1metros"}),".\r\nEn estos casos, se define una funci\xf3n externa que recibe los par\xe1metros y devuelve el decorador real."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Decorador con argumentos propios"',children:'def repetir(n):\r\n    """Ejecuta la funci\xf3n decorada n veces."""\r\n    def decorador(funcion):\r\n        def envoltura(*args, **kwargs):\r\n            for i in range(n):\r\n                print(f"Ejecuci\xf3n {i + 1} de {n}")\r\n                funcion(*args, **kwargs)\r\n        return envoltura\r\n    return decorador\r\n\r\n@repetir(3)\r\ndef saludo():\r\n    print("\xa1Hola!")\r\n\r\nsaludo()\r\n\r\n# Ejecuci\xf3n 1 de 3\r\n# \xa1Hola!\r\n# Ejecuci\xf3n 2 de 3\r\n# \xa1Hola!\r\n# Ejecuci\xf3n 3 de 3\r\n# \xa1Hola!\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"repetir(3)"})," genera un decorador configurado con ",(0,a.jsx)(n.code,{children:"n = 3"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Este decorador devuelve la funci\xf3n ",(0,a.jsx)(n.code,{children:"envoltura()"}),", que llama tres veces a la funci\xf3n original."]}),"\n"]})}),"\n",(0,a.jsxs)(n.h3,{id:"-uso-de-functoolswraps",children:["\ud83d\udfea Uso de ",(0,a.jsx)(n.code,{children:"functools.wraps"})]}),"\n",(0,a.jsxs)(n.p,{children:["Al aplicar decoradores, Python reemplaza internamente la funci\xf3n original por la funci\xf3n ",(0,a.jsx)(n.code,{children:"envoltura()"}),".\r\nEsto hace que se pierda informaci\xf3n como el nombre, el docstring o las anotaciones.\r\nPara conservar esos metadatos, se utiliza el decorador ",(0,a.jsx)(n.code,{children:"@wraps"})," del m\xf3dulo ",(0,a.jsx)(n.code,{children:"functools"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Conservaci\xf3n de metadatos con functools.wraps"',children:'from functools import wraps\r\n\r\ndef decorador(funcion):\r\n    @wraps(funcion)\r\n    def envoltura(*args, **kwargs):\r\n        print("Ejecutando:", funcion.__name__)\r\n        return funcion(*args, **kwargs)\r\n    return envoltura\r\n\r\n@decorador\r\ndef saludar():\r\n    """Muestra un saludo por pantalla."""\r\n    print("Hola a todos")\r\n\r\nsaludar()\r\nprint(saludar.__name__)\r\nprint(saludar.__doc__)\r\n\r\n# Ejecutando: saludar\r\n# Hola a todos\r\n# saludar\r\n# Muestra un saludo por pantalla.\n'})}),"\n",(0,a.jsxs)(n.admonition,{type:"explicacion",children:[(0,a.jsxs)(n.p,{children:["El decorador ",(0,a.jsx)(n.code,{children:"@wraps(funcion)"})," copia el nombre, docstring y otras propiedades de la funci\xf3n original a la versi\xf3n decorada."]}),(0,a.jsxs)(n.p,{children:["Esto es una ",(0,a.jsx)(n.strong,{children:"buena pr\xe1ctica"})," recomendada siempre que se definan decoradores personalizados."]})]}),"\n",(0,a.jsx)(n.h3,{id:"-casos-de-uso-comunes",children:"\ud83d\udfeb Casos de uso comunes"}),"\n",(0,a.jsx)(n.p,{children:"Los decoradores se utilizan con frecuencia en aplicaciones reales para tareas repetitivas y transversales, como:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Medici\xf3n de tiempo de ejecuci\xf3n"})}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import time\r\n\r\ndef medir_tiempo(funcion):\r\n    def envoltura(*args, **kwargs):\r\n        inicio = time.time()\r\n        resultado = funcion(*args, **kwargs)\r\n        fin = time.time()\r\n        print(f"Tiempo de ejecuci\xf3n: {fin - inicio:.4f} segundos")\r\n        return resultado\r\n    return envoltura\r\n\r\n@medir_tiempo\r\ndef tarea_pesada():\r\n    sum([i**2 for i in range(1_000_000)])\r\n\r\ntarea_pesada()\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Control de acceso"})}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def requiere_autorizacion(funcion):\r\n    def envoltura(usuario):\r\n        if usuario != "admin":\r\n            print("Acceso denegado.")\r\n            return\r\n        return funcion(usuario)\r\n    return envoltura\r\n\r\n@requiere_autorizacion\r\ndef panel_administrador(usuario):\r\n    print(f"Bienvenido, {usuario}.")\r\n\r\npanel_administrador("pepe")\r\npanel_administrador("admin")\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Registro de llamadas"})}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def registrar(funcion):\r\n    def envoltura(*args, **kwargs):\r\n        print(f"Llamando a {funcion.__name__} con argumentos {args} {kwargs}")\r\n        return funcion(*args, **kwargs)\r\n    return envoltura\r\n\r\n@registrar\r\ndef sumar(a, b):\r\n    return a + b\r\n\r\nsumar(5, 8)\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"9\ufe0f\u20e3-generadores",children:["9\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Generadores"})]}),"\n",(0,a.jsxs)(n.p,{children:["Los ",(0,a.jsx)(n.strong,{children:"generadores"})," son un tipo especial de funci\xf3n que permite ",(0,a.jsx)(n.strong,{children:"producir una secuencia de valores de forma progresiva"}),", en lugar de devolverlos todos de una vez.\r\nA diferencia de las funciones tradicionales, que utilizan ",(0,a.jsx)(n.code,{children:"return"}),", las funciones generadoras emplean la palabra clave ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"yield"})})," para ",(0,a.jsx)(n.strong,{children:"devolver un valor y pausar la ejecuci\xf3n"})," hasta la siguiente llamada."]}),"\n",(0,a.jsxs)(n.p,{children:["Cada vez que se invoca el generador, este ",(0,a.jsx)(n.strong,{children:"retoma su ejecuci\xf3n desde el punto en que se detuvo"}),", recordando el estado de sus variables internas."]}),"\n",(0,a.jsx)(n.h3,{id:"-concepto-general",children:"\ud83d\udfe9 Concepto general"}),"\n",(0,a.jsxs)(n.p,{children:["Un generador se define igual que una funci\xf3n normal, pero incluye al menos una instrucci\xf3n ",(0,a.jsx)(n.code,{children:"yield"}),".\r\nCuando se llama a la funci\xf3n, no se ejecuta de inmediato, sino que devuelve un ",(0,a.jsx)(n.strong,{children:"objeto generador"}),", que puede recorrerse con un bucle o con la funci\xf3n ",(0,a.jsx)(n.code,{children:"next()"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo b\xe1sico de generador"',children:'def contar_hasta(n):\r\n    """Generador que produce n\xfameros del 1 al n."""\r\n    contador = 1\r\n    while contador <= n:\r\n        yield contador\r\n        contador += 1\r\n\r\nfor numero in contar_hasta(5):\r\n    print(numero)\r\n\r\n# 1\r\n# 2\r\n# 3\r\n# 4\r\n# 5\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Cada vez que se ejecuta ",(0,a.jsx)(n.code,{children:"yield contador"}),", la funci\xf3n devuelve ese valor y se detiene temporalmente."]}),"\n",(0,a.jsxs)(n.li,{children:["Cuando el bucle ",(0,a.jsx)(n.code,{children:"for"})," solicita el siguiente valor, la ejecuci\xf3n se reanuda desde la l\xednea siguiente al ",(0,a.jsx)(n.code,{children:"yield"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"El proceso contin\xfaa hasta que se alcanza el final de la funci\xf3n."}),"\n"]})}),"\n",(0,a.jsxs)(n.h3,{id:"-diferencias-entre-return-y-yield",children:["\ud83d\udfe6 Diferencias entre ",(0,a.jsx)(n.code,{children:"return"})," y ",(0,a.jsx)(n.code,{children:"yield"})]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Caracter\xedstica"}),(0,a.jsx)(n.th,{children:(0,a.jsx)(n.code,{children:"return"})}),(0,a.jsx)(n.th,{children:(0,a.jsx)(n.code,{children:"yield"})})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Finaliza la funci\xf3n"}),(0,a.jsx)(n.td,{children:"S\xed, termina la ejecuci\xf3n"}),(0,a.jsx)(n.td,{children:"No, la pausa temporalmente"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Devuelve"}),(0,a.jsx)(n.td,{children:"Un \xfanico valor"}),(0,a.jsx)(n.td,{children:"M\xfaltiples valores, uno a uno"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Guarda el estado interno"}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsx)(n.td,{children:"S\xed"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Se utiliza con"}),(0,a.jsx)(n.td,{children:"Funciones tradicionales"}),(0,a.jsx)(n.td,{children:"Generadores"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Tipo de resultado"}),(0,a.jsx)(n.td,{children:"Valor concreto"}),(0,a.jsx)(n.td,{children:"Objeto generador"})]})]})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Ejemplo comparativo:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Comparaci\xf3n entre return y yield"',children:"def con_return(n):\r\n    resultado = []\r\n    for i in range(1, n + 1):\r\n        resultado.append(i)\r\n    return resultado\r\n\r\ndef con_yield(n):\r\n    for i in range(1, n + 1):\r\n        yield i\r\n\r\nprint(con_return(5))\r\nprint(list(con_yield(5)))\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["La funci\xf3n ",(0,a.jsx)(n.code,{children:"con_return()"})," devuelve toda la lista completa ",(0,a.jsx)(n.code,{children:"[1, 2, 3, 4, 5]"}),", ocupando memoria proporcional al tama\xf1o."]}),"\n",(0,a.jsxs)(n.li,{children:["En cambio, ",(0,a.jsx)(n.code,{children:"con_yield()"})," genera cada n\xfamero bajo demanda, lo que resulta mucho m\xe1s eficiente cuando se trabaja con grandes vol\xfamenes de datos."]}),"\n"]})}),"\n",(0,a.jsxs)(n.h3,{id:"-uso-de-next-con-generadores",children:["\ud83d\udfe8 Uso de ",(0,a.jsx)(n.code,{children:"next()"})," con generadores"]}),"\n",(0,a.jsxs)(n.p,{children:["Los generadores son objetos ",(0,a.jsx)(n.strong,{children:"iterables"}),", por lo que pueden recorrerse manualmente con la funci\xf3n ",(0,a.jsx)(n.code,{children:"next()"}),".\r\nCada llamada a ",(0,a.jsx)(n.code,{children:"next()"})," produce el siguiente valor.\r\nCuando no quedan m\xe1s, se lanza la excepci\xf3n ",(0,a.jsx)(n.code,{children:"StopIteration"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Uso manual de un generador"',children:"g = contar_hasta(3)\r\nprint(next(g))  # 1\r\nprint(next(g))  # 2\r\nprint(next(g))  # 3\r\n# print(next(g))  -> StopIteration\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:["Cada llamada a ",(0,a.jsx)(n.code,{children:"next(g)"})," reanuda la ejecuci\xf3n del generador hasta el siguiente ",(0,a.jsx)(n.code,{children:"yield"}),".\r\nAl completarse, se lanza la excepci\xf3n ",(0,a.jsx)(n.code,{children:"StopIteration"})," para indicar que ya no hay m\xe1s valores."]})}),"\n",(0,a.jsx)(n.h3,{id:"-generadores-por-comprensi\xf3n",children:"\ud83d\udfe7 Generadores por comprensi\xf3n"}),"\n",(0,a.jsxs)(n.p,{children:["Adem\xe1s de las funciones con ",(0,a.jsx)(n.code,{children:"yield"}),", Python ofrece ",(0,a.jsx)(n.strong,{children:"generadores por comprensi\xf3n"}),", similares a las comprensiones de listas, pero con par\xe9ntesis en lugar de corchetes.\r\nEstos generadores son a\xfan m\xe1s compactos y se utilizan para construir iteradores ligeros."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Generador por comprensi\xf3n"',children:"cuadrados = (x ** 2 for x in range(5))\r\nprint(cuadrados)\r\nfor c in cuadrados:\r\n    print(c)\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"(x ** 2 for x in range(5))"})," crea un generador que calcula los cuadrados de los n\xfameros del 0 al 4."]}),"\n",(0,a.jsx)(n.li,{children:"No genera una lista en memoria, sino que produce los valores uno a uno cuando se solicitan."}),"\n",(0,a.jsx)(n.li,{children:"Este enfoque es muy eficiente en operaciones de c\xe1lculo o procesamiento de datos secuenciales."}),"\n"]})}),"\n",(0,a.jsx)(n.h3,{id:"-ventajas-de-los-generadores",children:"\ud83d\udfea Ventajas de los generadores"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Eficiencia en memoria:"})," no crean estructuras completas; producen valores seg\xfan se necesitan."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Ejecuci\xf3n diferida (lazy evaluation):"})," solo se calcula el siguiente valor cuando se solicita."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Simplicidad:"})," evitan escribir clases o estructuras para implementar iteradores."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Escalabilidad:"})," ideales para manejar grandes vol\xfamenes de informaci\xf3n o flujos continuos de datos."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Uso eficiente de un generador"',children:'def numeros_grandes():\r\n    """Genera n\xfameros infinitos a partir de 1."""\r\n    n = 1\r\n    while True:\r\n        yield n\r\n        n += 1\r\n\r\n# Recorrer solo los primeros 5 valores\r\nfor num in numeros_grandes():\r\n    if num > 5:\r\n        break\r\n    print(num)\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:["El generador ",(0,a.jsx)(n.code,{children:"numeros_grandes()"})," podr\xeda producir infinitos valores, pero el bucle se detiene cuando llega a 5.\r\nEsto demuestra que los generadores son adecuados para flujos de datos potencialmente infinitos."]})}),"\n",(0,a.jsxs)(n.h3,{id:"-uso-de-yield-from",children:["\ud83d\udfeb Uso de ",(0,a.jsx)(n.code,{children:"yield from"})]}),"\n",(0,a.jsxs)(n.p,{children:["La instrucci\xf3n ",(0,a.jsx)(n.code,{children:"yield from"})," permite ",(0,a.jsx)(n.strong,{children:"delegar parte de la generaci\xf3n a otro iterable o generador"}),", simplificando la sintaxis."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Uso de yield from para delegar la generaci\xf3n"',children:'def generador_principal():\r\n    yield from range(3)\r\n    yield from ["a", "b", "c"]\r\n\r\nfor valor in generador_principal():\r\n    print(valor)\r\n\r\n# 0\r\n# 1\r\n# 2\r\n# a\r\n# b\r\n# c\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"yield from"})," delega la producci\xf3n de valores a otros iterables, evitando escribir bucles adicionales."]})}),"\n",(0,a.jsx)(n.h3,{id:"-ejemplos-de-uso-de-generadores",children:"\ud83d\udfe9 Ejemplos de uso de generadores"}),"\n",(0,a.jsx)(n.h4,{id:"ejemplo-avanzado-procesador-de-datos",children:"Ejemplo avanzado: procesador de datos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Procesador de datos con yield"',children:'def procesar_lineas(texto):\r\n    """Devuelve las l\xedneas no vac\xedas de un texto."""\r\n    for linea in texto.split("\\n"):\r\n        linea = linea.strip()\r\n        if linea:\r\n            yield linea\r\n\r\ntexto = """\r\nPython es un lenguaje de programaci\xf3n.\r\n  \r\nPermite crear generadores f\xe1cilmente.\r\n"""\r\n\r\nfor linea in procesar_lineas(texto):\r\n    print("\u2192", linea)\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["El generador ",(0,a.jsx)(n.code,{children:"procesar_lineas()"})," analiza un texto l\xednea por l\xednea, devolviendo solo las que contienen informaci\xf3n \xfatil."]}),"\n",(0,a.jsx)(n.li,{children:"El resultado se obtiene de forma progresiva, sin procesar todo el texto de una vez."}),"\n"]})}),"\n",(0,a.jsx)(n.h4,{id:"ejemplo-combinaci\xf3n-de-generadores",children:"Ejemplo: combinaci\xf3n de generadores"}),"\n",(0,a.jsxs)(n.p,{children:["Los generadores pueden ",(0,a.jsx)(n.strong,{children:"encadenarse"}),", de modo que el resultado de uno alimente a otro."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Encadenamiento de generadores"',children:"def pares(n):\r\n    for i in range(n):\r\n        if i % 2 == 0:\r\n            yield i\r\n\r\ndef cuadrados(iterable):\r\n    for num in iterable:\r\n        yield num ** 2\r\n\r\nfor valor in cuadrados(pares(10)):\r\n    print(valor)\r\n\r\n# 0\r\n# 4\r\n# 16\r\n# 36\r\n# 64\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"explicacion",children:[(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Primero, ",(0,a.jsx)(n.code,{children:"pares(10)"})," genera los n\xfameros pares del 0 al 8."]}),"\n",(0,a.jsxs)(n.li,{children:["Luego, ",(0,a.jsx)(n.code,{children:"cuadrados()"})," recibe ese generador y produce los cuadrados de cada n\xfamero."]}),"\n"]}),(0,a.jsxs)(n.p,{children:["Este encadenamiento es una forma elegante de crear ",(0,a.jsx)(n.strong,{children:"tuber\xedas de procesamiento"})," sin necesidad de listas intermedias."]})]}),"\n",(0,a.jsx)(n.h4,{id:"ejemplo-final-simulaci\xf3n-de-flujo-de-datos",children:"Ejemplo final: simulaci\xf3n de flujo de datos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de flujo de datos con generadores"',children:'def leer_datos():\r\n    for i in range(1, 4):\r\n        print("Leyendo dato", i)\r\n        yield i\r\n\r\ndef procesar_datos(datos):\r\n    for d in datos:\r\n        print("Procesando dato", d)\r\n        yield d * 10\r\n\r\ndef guardar_datos(datos):\r\n    for d in datos:\r\n        print("Guardando resultado:", d)\r\n\r\n# Encadenar los generadores\r\nguardar_datos(procesar_datos(leer_datos()))\r\n\r\n# Leyendo dato 1\r\n# Procesando dato 1\r\n# Guardando resultado: 10\r\n# Leyendo dato 2\r\n# Procesando dato 2\r\n# Guardando resultado: 20\r\n# Leyendo dato 3\r\n# Procesando dato 3\r\n# Guardando resultado: 30\n'})}),"\n",(0,a.jsxs)(n.admonition,{type:"explicacion",children:[(0,a.jsx)(n.p,{children:"En este ejemplo, tres generadores trabajan juntos:"}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"leer_datos()"})," produce los valores."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"procesar_datos()"})," los transforma."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"guardar_datos()"})," los consume.\r\nEl flujo completo de datos se ejecuta paso a paso, sin cargar nada innecesario en memoria."]}),"\n"]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"-tabla-resumen",children:["\ud83d\udcca ",(0,a.jsx)(n.strong,{children:"Tabla resumen"})]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Concepto"}),(0,a.jsx)(n.th,{children:"Descripci\xf3n"}),(0,a.jsx)(n.th,{children:"Ejemplo"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Funci\xf3n de orden superior"}),(0,a.jsx)(n.td,{children:"Recibe o devuelve otra funci\xf3n"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"map(funcion, lista)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Funci\xf3n como dato"}),(0,a.jsx)(n.td,{children:"Puede almacenarse en variables o estructuras"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"operaciones = [sumar, restar]"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"map()"})}),(0,a.jsx)(n.td,{children:"Aplica una funci\xf3n a todos los elementos"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"map(lambda x: x*2, lista)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"filter()"})}),(0,a.jsx)(n.td,{children:"Filtra elementos seg\xfan una condici\xf3n"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"filter(lambda x: x>0, lista)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"reduce()"})}),(0,a.jsx)(n.td,{children:"Acumula valores de una secuencia"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"reduce(lambda x,y:x+y, lista)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Closure"}),(0,a.jsx)(n.td,{children:"Funci\xf3n interna que conserva el estado de variables externas"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"contador()"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Decorador"}),(0,a.jsx)(n.td,{children:"Funci\xf3n que recibe y devuelve otra funci\xf3n"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"@decorador"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Funci\xf3n interna"}),(0,a.jsx)(n.td,{children:"A\xf1ade nueva l\xf3gica a la funci\xf3n original"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"def envoltura():"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Decoradores anidados"}),(0,a.jsx)(n.td,{children:"Varios decoradores aplicados a la vez"}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"@a"})," encima de ",(0,a.jsx)(n.code,{children:"@b"})]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Decoradores con argumentos"}),(0,a.jsx)(n.td,{children:"Configurables mediante funciones externas"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"@repetir(3)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"functools.wraps"})}),(0,a.jsx)(n.td,{children:"Conserva metadatos de la funci\xf3n original"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"@wraps(funcion)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Generador"}),(0,a.jsx)(n.td,{children:"Funci\xf3n que devuelve una secuencia de valores"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"yield valor"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Objeto generador"}),(0,a.jsxs)(n.td,{children:["Resultado de llamar a una funci\xf3n con ",(0,a.jsx)(n.code,{children:"yield"})]}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"g = generador()"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"yield"})}),(0,a.jsx)(n.td,{children:"Devuelve un valor y pausa la ejecuci\xf3n"}),(0,a.jsx)(n.td,{children:"dentro de un bucle"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"next()"})}),(0,a.jsx)(n.td,{children:"Obtiene el siguiente valor del generador"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"next(g)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Generador por comprensi\xf3n"}),(0,a.jsx)(n.td,{children:"Sintaxis abreviada con par\xe9ntesis"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(x**2 for x in range(5))"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"yield from"})}),(0,a.jsx)(n.td,{children:"Delegaci\xf3n de otro iterable"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"yield from lista"})})]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["Las ",(0,a.jsx)(n.strong,{children:"funciones de orden superior"})," son una herramienta fundamental en Python para escribir c\xf3digo flexible, expresivo y reutilizable.\r\nPermiten tratar las funciones como valores, lo que ampl\xeda enormemente las posibilidades del lenguaje."]}),"\n",(0,a.jsxs)(n.p,{children:["Los ",(0,a.jsx)(n.strong,{children:"generadores"})," son una extensi\xf3n natural del concepto de funci\xf3n.\r\nPermiten trabajar con ",(0,a.jsx)(n.strong,{children:"secuencias grandes o infinitas"})," de manera eficiente, conservando la simplicidad y expresividad caracter\xedstica de Python."]}),"\n",(0,a.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>i});var o=r(6540);const a={},s=o.createContext(a);function d(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);