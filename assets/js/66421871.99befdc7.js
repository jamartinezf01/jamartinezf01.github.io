"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[5022],{4923:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Autentication/google","title":"Ejemplo Google-LogIn","description":"A continuaci\xf3n, se describe el proceso paso a paso para a\xf1adir la posibilidad de registrarse (o iniciar sesi\xf3n) en tu app de Android mediante la cuenta de Google usando Firebase Authentication. Asumimos que ya tienes configurado tu proyecto con Firebase (dependencias, google-services.json, etc.) y que dispones de FirebaseAuth para correo/contrase\xf1a. Veamos qu\xe9 necesitas hacer para integrar Google Sign-In.","source":"@site/docs/salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Autentication/google.md","sourceDirName":"salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Autentication","slug":"/salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Autentication/google","permalink":"/docs/salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Autentication/google","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4}}');var s=i(4848),a=i(8453);const o={sidebar_position:4},l="Ejemplo Google-LogIn",t={},c=[{value:"1. <strong>Habilitar Google como proveedor</strong>",id:"1-habilitar-google-como-proveedor",level:2},{value:"2. <strong>Agregar huellas digitales a tu proyecto</strong>",id:"2-agregar-huellas-digitales-a-tu-proyecto",level:2},{value:"\xbfPor qu\xe9 son necesarias las huellas digitales?",id:"por-qu\xe9-son-necesarias-las-huellas-digitales",level:3},{value:"Tipos de huellas digitales",id:"tipos-de-huellas-digitales",level:3},{value:"\xbfC\xf3mo obtener tus huellas digitales?",id:"c\xf3mo-obtener-tus-huellas-digitales",level:3},{value:"\xbfC\xf3mo se agregan a Firebase?",id:"c\xf3mo-se-agregan-a-firebase",level:3},{value:"3. <strong>Agregar las dependencias</strong>",id:"3-agregar-las-dependencias",level:2},{value:"4. <strong>Configurar GoogleSignInClient</strong>",id:"4-configurar-googlesigninclient",level:2},{value:"5. <strong>A\xf1adir un bot\xf3n para Iniciar sesi\xf3n con Google</strong>",id:"5-a\xf1adir-un-bot\xf3n-para-iniciar-sesi\xf3n-con-google",level:2},{value:"6. <strong>Modificar la <code>RegistroActivity</code></strong>",id:"6-modificar-la-registroactivity",level:2},{value:"C\xf3digo completo",id:"c\xf3digo-completo",level:3},{value:"Explicaci\xf3n detallada",id:"explicaci\xf3n-detallada",level:3},{value:"Declaraci\xf3n de Variables Clave",id:"declaraci\xf3n-de-variables-clave",level:4},{value:"Configuraci\xf3n de Google Sign-In",id:"configuraci\xf3n-de-google-sign-in",level:4},{value:"Registro del Launcher para Manejar Resultados de Google Sign-In",id:"registro-del-launcher-para-manejar-resultados-de-google-sign-in",level:4},{value:"Implementaci\xf3n del Listener para el Bot\xf3n de Google Sign-In",id:"implementaci\xf3n-del-listener-para-el-bot\xf3n-de-google-sign-in",level:4},{value:"M\xe9todo <code>configurarGoogleSignIn()</code>",id:"m\xe9todo-configurargooglesignin",level:4},{value:"M\xe9todo <code>registrarLauncherGoogleSignIn()</code>",id:"m\xe9todo-registrarlaunchergooglesignin",level:4},{value:"M\xe9todo <code>iniciarSignInConGoogle()</code>",id:"m\xe9todo-iniciarsignincongoogle",level:4},{value:"M\xe9todo <code>autenticarConFirebaseGoogle(String idToken)</code>",id:"m\xe9todo-autenticarconfirebasegooglestring-idtoken",level:4},{value:"7. <strong>Modificar la <code>MainActivity</code></strong>",id:"7-modificar-la-mainactivity",level:2},{value:"C\xf3digo Completo",id:"c\xf3digo-completo-1",level:3},{value:"Explicaci\xf3n detallada",id:"explicaci\xf3n-detallada-1",level:3},{value:"Declaraci\xf3n de Variables Clave",id:"declaraci\xf3n-de-variables-clave-1",level:4},{value:"Configuraci\xf3n de Google Sign-In",id:"configuraci\xf3n-de-google-sign-in-1",level:4},{value:"M\xe9todo <code>configurarGoogleSignIn()</code>",id:"m\xe9todo-configurargooglesignin-1",level:4},{value:"M\xe9todo <code>signOutUsuario()</code>",id:"m\xe9todo-signoutusuario",level:4},{value:"M\xe9todo <code>onDestroy()</code>",id:"m\xe9todo-ondestroy",level:4},{value:"<strong>Prueba la aplicaci\xf3n</strong>",id:"prueba-la-aplicaci\xf3n",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ejemplo-google-login",children:"Ejemplo Google-LogIn"})}),"\n",(0,s.jsxs)(n.p,{children:["A continuaci\xf3n, se describe el ",(0,s.jsx)(n.strong,{children:"proceso paso a paso"})," para ",(0,s.jsx)(n.strong,{children:"a\xf1adir la posibilidad de registrarse"})," (o iniciar sesi\xf3n) en tu app de Android mediante la ",(0,s.jsx)(n.strong,{children:"cuenta de Google"})," usando ",(0,s.jsx)(n.strong,{children:"Firebase Authentication"}),". Asumimos que ya tienes configurado tu proyecto con Firebase (dependencias, ",(0,s.jsx)(n.code,{children:"google-services.json"}),", etc.) y que dispones de ",(0,s.jsx)(n.strong,{children:"FirebaseAuth"})," para correo/contrase\xf1a. Veamos qu\xe9 necesitas hacer para ",(0,s.jsx)(n.strong,{children:"integrar Google Sign-In"}),"."]}),"\n",(0,s.jsx)("div",{style:{margin:"0 auto",width:"250px"},children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Presentaci\xf3n de la 2\xaa version de la app de autenticaci\xf3n",src:i(1822).A+"",title:"Presentaci\xf3n de la 2\xaa version de la app de autenticaci\xf3n",width:"378",height:"840"})})}),"\n",(0,s.jsxs)(n.h2,{id:"1-habilitar-google-como-proveedor",children:["1. ",(0,s.jsx)(n.strong,{children:"Habilitar Google como proveedor"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Accede a la ",(0,s.jsx)(n.a,{href:"https://console.firebase.google.com/",children:"Consola de Firebase"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Selecciona tu ",(0,s.jsx)(n.strong,{children:"proyecto"})," y ve al men\xfa ",(0,s.jsx)(n.strong,{children:"Authentication"})," en la barra lateral."]}),"\n",(0,s.jsxs)(n.li,{children:["En la pesta\xf1a ",(0,s.jsx)(n.strong,{children:"M\xe9todo de inicio de sesi\xf3n"}),", busca la opci\xf3n ",(0,s.jsx)(n.strong,{children:"Google"})," y ",(0,s.jsx)(n.strong,{children:"act\xedvala"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Aseg\xfarate de tener configurada la informaci\xf3n del ",(0,s.jsx)(n.strong,{children:"ID de cliente de OAuth 2.0"})," para Android (generalmente se configura autom\xe1ticamente si has a\xf1adido la aplicaci\xf3n Android en Firebase y has subido el ",(0,s.jsx)(n.strong,{children:"SHA1"})," de tu keystore)."]}),"\n"]}),"\n",(0,s.jsx)("div",{style:{margin:"0 auto",width:"1000px"},children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Selecciona Google como nuevo proveedor de autenticaci\xf3n",src:i(6588).A+"",title:"Selecciona Google como nuevo proveedor de autenticaci\xf3n",width:"1610",height:"702"})})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Si no has agregado la ",(0,s.jsx)(n.strong,{children:"SHA-1"})," de tu keystore en la consola de Firebase, hazlo en la secci\xf3n ",(0,s.jsx)(n.strong,{children:"Configuraci\xf3n del proyecto"})," > pesta\xf1a ",(0,s.jsx)(n.strong,{children:"Tus apps"})," (haz clic en la aplicaci\xf3n Android). Esto puede requerirse para que la autenticaci\xf3n con Google funcione correctamente."]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"2-agregar-huellas-digitales-a-tu-proyecto",children:["2. ",(0,s.jsx)(n.strong,{children:"Agregar huellas digitales a tu proyecto"})]}),"\n",(0,s.jsxs)(n.p,{children:["En el contexto de ",(0,s.jsx)(n.strong,{children:"Firebase"})," (y, en general, de cualquier servicio de Google que requiera OAuth 2.0), las ",(0,s.jsx)(n.strong,{children:"\u201chuellas digitales\u201d"})," (o ",(0,s.jsx)(n.strong,{children:"App Signatures"}),") se refieren a los ",(0,s.jsx)(n.strong,{children:"c\xf3digos hash"})," (SHA-1, SHA-256, etc.) que identifican la clave con la que ",(0,s.jsx)(n.strong,{children:"est\xe1s firmando"})," tu app Android. Firebase (y Google) usan estas huellas para verificar que la app que env\xeda solicitudes o que solicita un inicio de sesi\xf3n OAuth (por ejemplo, con Google Sign-In) sea realmente ",(0,s.jsx)(n.strong,{children:"tu"})," aplicaci\xf3n y no otra."]}),"\n",(0,s.jsx)(n.h3,{id:"por-qu\xe9-son-necesarias-las-huellas-digitales",children:"\xbfPor qu\xe9 son necesarias las huellas digitales?"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Seguridad"}),": Permiten a Firebase (o Google) ",(0,s.jsx)(n.strong,{children:"asegurarse"})," de que el paquete y la firma de la app coinciden con lo que has configurado en tu proyecto."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Autorizaci\xf3n"}),": Para algunos servicios de Google (como Google Sign-In, Google Maps, etc.), se requiere que la ",(0,s.jsx)(n.strong,{children:"clave SHA"})," de tu app coincida con la clave almacenada en la consola, de modo que tus usuarios puedan iniciar sesi\xf3n o utilizar esas APIs con \xe9xito."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"tipos-de-huellas-digitales",children:"Tipos de huellas digitales"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Debug"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Cuando ejecutas tu app desde Android Studio en modo debug, se usa una keystore ",(0,s.jsx)(n.strong,{children:"autom\xe1tica"})," (debug keystore)."]}),"\n",(0,s.jsxs)(n.li,{children:["Tiene una ",(0,s.jsx)(n.strong,{children:"SHA-1"})," y ",(0,s.jsx)(n.strong,{children:"SHA-256"})," espec\xedficas."]}),"\n",(0,s.jsx)(n.li,{children:"Se regeneran al reinstalar Android Studio, por lo que es normal compartir una sola huella con tu equipo si todos usan la misma debug keystore."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Release"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Cuando compilas la versi\xf3n final de la app para subirla a Play Store, usas ",(0,s.jsx)(n.strong,{children:"tu propia keystore"})," (release keystore) con su ",(0,s.jsx)(n.strong,{children:"contrase\xf1a"})," y alias \xfanico."]}),"\n",(0,s.jsxs)(n.li,{children:["Esta keystore tendr\xe1 su propia huella digital ",(0,s.jsx)(n.strong,{children:"SHA-1"})," y ",(0,s.jsx)(n.strong,{children:"SHA-256"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Es fundamental guardar esta keystore en un lugar seguro, ya que te identifica de manera ",(0,s.jsx)(n.strong,{children:"\xfanica"})," como desarrollador de esa app."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["En ",(0,s.jsx)(n.strong,{children:"Firebase"})," generalmente la m\xe1s relevante es la ",(0,s.jsx)(n.strong,{children:"SHA-1"}),", aunque muchos servicios tambi\xe9n requieren la ",(0,s.jsx)(n.strong,{children:"SHA-256"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"c\xf3mo-obtener-tus-huellas-digitales",children:"\xbfC\xf3mo obtener tus huellas digitales?"}),"\n",(0,s.jsxs)(n.p,{children:["Para obtener la keystore ",(0,s.jsx)(n.strong,{children:"autom\xe1tica"})," de tu proyecto (debug keystore) deber\xe1s emplear el comanfo Java ",(0,s.jsx)(n.code,{children:"keytool"})," en tu terminal:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"keytool -list -v -alias androiddebugkey -keystore %USERPROFILE%\\.android\\debug.keystore\n"})}),"\n",(0,s.jsxs)(n.p,{children:["El resultado mostrar\xe1 la ",(0,s.jsx)(n.strong,{children:"SHA1"}),", ",(0,s.jsx)(n.strong,{children:"SHA-256"})," y otras.",(0,s.jsx)(n.br,{}),"\n","Este comando tambi\xe9n te sirve para la ",(0,s.jsx)(n.strong,{children:"debug keystore"})," ubicada en:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Windows: ",(0,s.jsx)(n.code,{children:"C:\\Users\\<username>\\.android\\debug.keystore"})]}),"\n",(0,s.jsxs)(n.li,{children:["macOS/Linux: ",(0,s.jsx)(n.code,{children:"~/.android/debug.keystore"}),(0,s.jsx)(n.br,{}),"\n","La contrase\xf1a por defecto de la debug keystore suele ser ",(0,s.jsx)(n.code,{children:"android"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"por ejemplo..."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"keytool -list -v -alias androiddebugkey -keystore c:\\users\\josea\\.android\\debug.keystore\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["En caso de que quieras usar ",(0,s.jsx)(n.strong,{children:"tu propia keystore"})," (release keystore) con su ",(0,s.jsx)(n.strong,{children:"contrase\xf1a"})," y alias \xfanico para poder subir tu App al PlayStore consulta las instrucciones en la ",(0,s.jsx)(n.a,{href:"https://developers.google.com/android/guides/client-auth?hl=es-419",children:"Documentaci\xf3n de Firebase"}),"."]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"c\xf3mo-se-agregan-a-firebase",children:"\xbfC\xf3mo se agregan a Firebase?"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Ve a la ",(0,s.jsx)(n.a,{href:"https://console.firebase.google.com/",children:"Consola de Firebase"})," y selecciona tu proyecto."]}),"\n",(0,s.jsxs)(n.li,{children:["En la ",(0,s.jsx)(n.strong,{children:"Configuraci\xf3n del proyecto"})," (icono de engranaje, parte superior izquierda), elige la pesta\xf1a ",(0,s.jsx)(n.strong,{children:"Tus apps"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Selecciona tu ",(0,s.jsx)(n.strong,{children:"app Android"})," (generalmente un recuadro con tu packageName)."]}),"\n",(0,s.jsxs)(n.li,{children:["En ",(0,s.jsx)(n.strong,{children:"Certificados de firma SHA"}),", haz clic en ",(0,s.jsx)(n.strong,{children:"Agregar huella digital"})," (o ",(0,s.jsx)(n.strong,{children:"Add Fingerprint"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Pega tu ",(0,s.jsx)(n.strong,{children:"SHA-1"})," (y/o ",(0,s.jsx)(n.strong,{children:"SHA-256"}),") en el campo correspondiente."]}),"\n",(0,s.jsx)(n.li,{children:"Guarda los cambios."}),"\n"]}),"\n",(0,s.jsx)("div",{style:{margin:"0 auto",width:"1000px"},children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Selecciona Google como nuevo proveedor de autenticaci\xf3n",src:i(4970).A+"",title:"Selecciona Google como nuevo proveedor de autenticaci\xf3n",width:"957",height:"714"})})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Si cambias de debug keystore, o creas una nueva release keystore, tendr\xe1s que ",(0,s.jsx)(n.strong,{children:"actualizar"})," los valores en la consola de Firebase."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"No te olvides...",type:"warning",children:(0,s.jsxs)(n.p,{children:["No te olvides de volver a descargar el archivo ",(0,s.jsx)(n.code,{children:"google-services.json"})," y sustituir el de tu proyecto por el nuevo."]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"3-agregar-las-dependencias",children:["3. ",(0,s.jsx)(n.strong,{children:"Agregar las dependencias"})]}),"\n",(0,s.jsxs)(n.p,{children:["En tu ",(0,s.jsx)(n.strong,{children:"m\xf3dulo app"}),"  ",(0,s.jsx)(n.code,{children:"build.gradle.kts"}),", aseg\xfarate de tener:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotin",children:'dependencies {\r\n    // Firebase Authentication (ya lo tendr\xe1s si has implementado correo/contrase\xf1a)\r\n    implementation ("com.google.firebase:firebase-auth:21.3.0")\r\n\r\n    // Google Sign In\r\n    implementation ("com.google.android.gms:play-services-auth:20.6.0")\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Ajusta las versiones seg\xfan sea necesario. Despu\xe9s, sincroniza el proyecto."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"4-configurar-googlesigninclient",children:["4. ",(0,s.jsx)(n.strong,{children:"Configurar GoogleSignInClient"})]}),"\n",(0,s.jsxs)(n.p,{children:["En la ",(0,s.jsx)(n.strong,{children:"Activity"})," donde quieras gestionar la autenticaci\xf3n con Google (por ejemplo, tu ",(0,s.jsx)(n.code,{children:"RegistroActivity"})," o una actividad dedicada al login), configura el ",(0,s.jsx)(n.strong,{children:"cliente"})," de Google para obtener el token de ID necesario para autenticarte con Firebase."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Obtener el ID de cliente web"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ve a la ",(0,s.jsx)(n.a,{href:"https://console.firebase.google.com/",children:"Consola de Firebase"}),", en la opci\xf3n de ",(0,s.jsx)(n.strong,{children:"M\xe9todos de acceso"})," selecciona editar m\xe9todo Google."]}),"\n",(0,s.jsxs)(n.li,{children:["Ubica el ",(0,s.jsx)(n.strong,{children:"Web client (auto-created)"}),", copia la ",(0,s.jsx)(n.strong,{children:"Client ID"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Gu\xe1rdala en ",(0,s.jsx)(n.code,{children:"strings.xml"})," o en una constante."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("div",{style:{margin:"0 auto",width:"1000px"},children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ubica Web Client",src:i(2165).A+"",title:"Ubica Web Client",width:"1838",height:"898"})})}),"\n",(0,s.jsxs)(n.p,{children:["Por ejemplo, en tu archivo ",(0,s.jsx)(n.code,{children:"res/values/strings.xml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<resources>\r\n    <string name="default_web_client_id">693313429676-gsj0il1smgqigts57v6qms39a704gakk.apps.googleusercontent.com</string>\r\n</resources>\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"5-a\xf1adir-un-bot\xf3n-para-iniciar-sesi\xf3n-con-google",children:["5. ",(0,s.jsx)(n.strong,{children:"A\xf1adir un bot\xf3n para Iniciar sesi\xf3n con Google"})]}),"\n",(0,s.jsxs)(n.p,{children:["Agrega un bot\xf3n en tu layout (puede ser un ",(0,s.jsx)(n.strong,{children:"Button"})," normal o el ",(0,s.jsx)(n.strong,{children:"SignInButton"})," de Google). Por ejemplo, en tu ",(0,s.jsx)(n.code,{children:"activity_register.xml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'    <com.google.android.gms.common.SignInButton\r\n        android:id="@+id/btnGoogleSignIn"\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:layout_marginTop="16dp"\r\n        android:text="Iniciar con Google"\r\n        app:layout_constraintEnd_toEndOf="parent"\r\n        app:layout_constraintStart_toStartOf="parent"\r\n        app:layout_constraintTop_toBottomOf="@+id/btnRegistro" />\n'})}),"\n",(0,s.jsxs)(n.p,{children:["En tu Activity, obt\xe9n la referencia del bot\xf3n y asigna un ",(0,s.jsx)(n.code,{children:"setOnClickListener"})," que llame a un m\xe9todo para iniciar el flujo:"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"6-modificar-la-registroactivity",children:["6. ",(0,s.jsxs)(n.strong,{children:["Modificar la ",(0,s.jsx)(n.code,{children:"RegistroActivity"})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Ahora, procederemos a modificar tu ",(0,s.jsx)(n.code,{children:"RegistroActivity.java"})," para incluir la funcionalidad de Google Sign-In utilizando la nueva API de resultados de actividad (",(0,s.jsx)(n.code,{children:"ActivityResultLauncher"}),")."]}),"\n",(0,s.jsx)(n.h3,{id:"c\xf3digo-completo",children:"C\xf3digo completo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="RegistroActivity.java"',children:'package com.agora.autenticaciondemo;\r\n\r\nimport androidx.activity.result.ActivityResult;\r\nimport androidx.activity.result.ActivityResultCallback;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport com.agora.autenticaciondemo.databinding.ActivityRegistroBinding;\r\nimport com.google.android.gms.auth.api.signin.*;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.*;\r\nimport com.google.firebase.FirebaseApp;\r\nimport com.google.firebase.auth.*;\r\n\r\n/**\r\n * RegistroActivity maneja el registro e inicio de sesi\xf3n con Firebase Authentication,\r\n * incluyendo la opci\xf3n de iniciar sesi\xf3n con Google.\r\n */\r\npublic class RegistroActivity extends AppCompatActivity {\r\n\r\n    private ActivityRegistroBinding binding;\r\n    private FirebaseAuth mAuth;\r\n\r\n    // Cliente de Google Sign-In\r\n      // highlight-next-line\r\n    private GoogleSignInClient mGoogleSignInClient;\r\n\r\n    // Launcher para manejar el resultado de la Intent de Google Sign-In\r\n      // highlight-next-line\r\n    private ActivityResultLauncher<Intent> googleSignInLauncher;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Inicializar View Binding\r\n        binding = ActivityRegistroBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        // Inicializar Firebase\r\n        FirebaseApp.initializeApp(this);\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        // Configurar Google Sign-In\r\n           // highlight-next-line\r\n        configurarGoogleSignIn();\r\n\r\n        // Registrar el launcher para manejar el resultado de Google Sign-In\r\n          // highlight-next-line\r\n        registrarLauncherGoogleSignIn();\r\n\r\n        // Click en "Iniciar Sesi\xf3n" (Correo/Contrase\xf1a)\r\n        binding.btnLogin.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                logarUsuario();\r\n            }\r\n        });\r\n\r\n        // Click en "Registrarse" (Correo/Contrase\xf1a)\r\n        binding.btnRegistro.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                crearUsuario();\r\n            }\r\n        });\r\n\r\n        // Click en "Iniciar con Google"\r\n           // highlight-start\r\n        binding.btnGoogleSignIn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iniciarSignInConGoogle();\r\n            }\r\n        });\r\n           // highlight-end\r\n    }\r\n\r\n    /**\r\n     * Configura las opciones de Google Sign-In.\r\n     */\r\n       // highlight-start\r\n    private void configurarGoogleSignIn() {\r\n        // Configurar las opciones de inicio de sesi\xf3n de Google\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id)) // ID del cliente web de Firebase\r\n                .requestEmail() // Solicitar el email del usuario\r\n                .build();\r\n\r\n        // Crear el cliente de Google Sign-In con las opciones configuradas\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\r\n    }\r\n       // highlight-end\r\n\r\n    /**\r\n     * Registra el launcher para manejar el resultado de Google Sign-In.\r\n     */\r\n       // highlight-start\r\n    private void registrarLauncherGoogleSignIn() {\r\n        googleSignInLauncher = registerForActivityResult(\r\n                new ActivityResultContracts.StartActivityForResult(),\r\n                new ActivityResultCallback<ActivityResult>() {\r\n                    @Override\r\n                    public void onActivityResult(ActivityResult result) {\r\n                        // Verificar si el resultado es exitoso\r\n                        if (result.getResultCode() == Activity.RESULT_OK) {\r\n                            Intent data = result.getData();\r\n                            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n                            try {\r\n                                // Obtener la cuenta de Google del resultado\r\n                                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n                                if (account != null) {\r\n                                    // Autenticar con Firebase usando el token de Google\r\n                                    autenticarConFirebaseGoogle(account.getIdToken());\r\n                                }\r\n                            } catch (ApiException e) {\r\n                                // Manejar error en Google Sign-In\r\n                                Toast.makeText(RegistroActivity.this,\r\n                                        "Error al iniciar con Google: " + e.getMessage(),\r\n                                        Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        } else {\r\n                            // El usuario cancel\xf3 el inicio de sesi\xf3n con Google\r\n                            Toast.makeText(RegistroActivity.this,\r\n                                    "Inicio de sesi\xf3n con Google cancelado.",\r\n                                    Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                }\r\n        );\r\n    }\r\n       // highlight-end\r\n\r\n    /**\r\n     * Inicia el flujo de inicio de sesi\xf3n con Google.\r\n     */\r\n       // highlight-start\r\n    private void iniciarSignInConGoogle() {\r\n        // Crear la Intent de Google Sign-In\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        // Lanzar la Intent utilizando el launcher registrado\r\n        googleSignInLauncher.launch(signInIntent);\r\n    }\r\n       // highlight-end\r\n\r\n    /**\r\n     * Maneja la autenticaci\xf3n con Firebase usando el token de Google.\r\n     * @param idToken El token de ID obtenido de Google Sign-In.\r\n     */\r\n       // highlight-start\r\n    private void autenticarConFirebaseGoogle(String idToken) {\r\n        // Crear credenciales de Firebase con el token de Google\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);\r\n        // Iniciar sesi\xf3n con las credenciales\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Inicio de sesi\xf3n exitoso\r\n                            FirebaseUser usuario = mAuth.getCurrentUser();\r\n                            if (usuario != null) {\r\n                                Toast.makeText(RegistroActivity.this,\r\n                                        "Bienvenido con Google: " + usuario.getEmail(),\r\n                                        Toast.LENGTH_SHORT).show();\r\n                            }\r\n                            // Navegar a MainActivity\r\n                            iniciarMainActivity();\r\n                        } else {\r\n                            // Error al autenticar con Firebase\r\n                            Toast.makeText(RegistroActivity.this,\r\n                                    "Error al autenticar con Firebase: " + task.getException().getMessage(),\r\n                                    Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n        // highlight-end\r\n\r\n    /**\r\n     * Crea un nuevo usuario en Firebase (Email/Password).\r\n     */\r\n    private void crearUsuario() {\r\n        String email = binding.textoMail.getText().toString().trim();\r\n        String password = binding.textoPassword.getText().toString().trim();\r\n        String password2 = binding.textoPassword2.getText().toString().trim();\r\n\r\n        if (email.isEmpty() || password.isEmpty() || password2.isEmpty()) {\r\n            Toast.makeText(this, "Por favor, completa todos los campos", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        } else if (!password.equals(password2)) {\r\n            Toast.makeText(this, "Las contrase\xf1as no coinciden", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        mAuth.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Usuario creado por primera vez\r\n                            FirebaseUser usuario = mAuth.getCurrentUser();\r\n                            if (usuario != null) {\r\n                                Toast.makeText(RegistroActivity.this,\r\n                                        "Bienvenido, nuevo usuario: " + usuario.getEmail(),\r\n                                        Toast.LENGTH_SHORT).show();\r\n                            }\r\n                            // Pasamos a la actividad principal\r\n                            iniciarMainActivity();\r\n                        } else {\r\n                            // Falla en la creaci\xf3n de usuario (e.g., email ya en uso)\r\n                            Toast.makeText(RegistroActivity.this,\r\n                                    "Error al crear usuario: " + task.getException().getMessage(),\r\n                                    Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    /**\r\n     * Inicia sesi\xf3n con un usuario existente.\r\n     */\r\n    private void logarUsuario() {\r\n        String email = binding.textoMail.getText().toString().trim();\r\n        String password = binding.textoPassword.getText().toString().trim();\r\n\r\n        if (email.isEmpty() || password.isEmpty()) {\r\n            Toast.makeText(this, "Por favor, completa todos los campos", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Usuario existente\r\n                            FirebaseUser usuario = mAuth.getCurrentUser();\r\n                            if (usuario != null) {\r\n                                Toast.makeText(RegistroActivity.this,\r\n                                        "Bienvenido de nuevo: " + usuario.getEmail(),\r\n                                        Toast.LENGTH_SHORT).show();\r\n                            }\r\n                            // Pasamos a la actividad principal\r\n                            iniciarMainActivity();\r\n                        } else {\r\n                            // Error al iniciar sesi\xf3n\r\n                            Toast.makeText(RegistroActivity.this,\r\n                                    "Error al iniciar sesi\xf3n: " + task.getException().getMessage(),\r\n                                    Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    /**\r\n     * Navega a la MainActivity\r\n     */\r\n    private void iniciarMainActivity() {\r\n        Intent intent = new Intent(RegistroActivity.this, MainActivity.class);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    /**\r\n     * Comprueba si ya hay un usuario autenticado y navega directamente a MainActivity si es as\xed.\r\n     * Este m\xe9todo se llama en onStart para mantener la sesi\xf3n iniciada.\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        FirebaseUser usuarioActual = mAuth.getCurrentUser();\r\n        if (usuarioActual != null) {\r\n            // Usuario ya est\xe1 autenticado, navegar a MainActivity\r\n            iniciarMainActivity();\r\n        }\r\n    }\r\n}\r\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"explicaci\xf3n-detallada",children:"Explicaci\xf3n detallada"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["A continuaci\xf3n, se desarrolla una ",(0,s.jsx)(n.strong,{children:"explicaci\xf3n detallada"})," de las ",(0,s.jsx)(n.strong,{children:"partes resaltadas"})," en el c\xf3digo ",(0,s.jsx)(n.code,{children:"RegistroActivity.java"}),". Estas secciones son fundamentales para integrar ",(0,s.jsx)(n.strong,{children:"Google Sign-In"})," en tu aplicaci\xf3n Android utilizando ",(0,s.jsx)(n.strong,{children:"Firebase Authentication"})," y la ",(0,s.jsx)(n.strong,{children:"nueva API de resultados de actividad"})," (",(0,s.jsx)(n.code,{children:"ActivityResultLauncher"}),")."]}),(0,s.jsx)(n.h4,{id:"declaraci\xf3n-de-variables-clave",children:"Declaraci\xf3n de Variables Clave"}),(0,s.jsxs)(n.p,{children:["En tu clase ",(0,s.jsx)(n.code,{children:"RegistroActivity"}),", has declarado dos variables clave que son esenciales para la integraci\xf3n de Google Sign-In:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleSignInClient mGoogleSignInClient"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\xbfQu\xe9 es?"}),": Es una instancia de ",(0,s.jsx)(n.code,{children:"GoogleSignInClient"})," que gestiona el flujo de autenticaci\xf3n de Google Sign-In."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Facilita la creaci\xf3n de la ",(0,s.jsx)(n.code,{children:"Intent"})," necesaria para iniciar el proceso de inicio de sesi\xf3n con Google y proporciona m\xe9todos para cerrar la sesi\xf3n de Google."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ActivityResultLauncher<Intent> googleSignInLauncher"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\xbfQu\xe9 es?"}),": Es un launcher que utiliza la ",(0,s.jsx)(n.strong,{children:"nueva API de resultados de actividad"})," (",(0,s.jsx)(n.code,{children:"ActivityResultLauncher"}),") para manejar los resultados de las actividades iniciadas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Reemplaza al m\xe9todo obsoleto ",(0,s.jsx)(n.code,{children:"startActivityForResult()"}),", proporcionando una forma m\xe1s limpia y modular de manejar los resultados de actividades, como el flujo de Google Sign-In."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsx)(n.h4,{id:"configuraci\xf3n-de-google-sign-in",children:"Configuraci\xf3n de Google Sign-In"}),(0,s.jsxs)(n.p,{children:["Dentro del m\xe9todo ",(0,s.jsx)(n.code,{children:"onCreate()"}),", llamas a dos m\xe9todos cruciales:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"configurarGoogleSignIn()"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop\xf3sito"}),": Configura las opciones necesarias para Google Sign-In, como solicitar el ID Token y el email del usuario."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Importancia"}),": Establece las configuraciones que permiten a tu aplicaci\xf3n comunicarse correctamente con los servicios de Google y Firebase para la autenticaci\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"registrarLauncherGoogleSignIn()"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop\xf3sito"}),": Registra el ",(0,s.jsx)(n.code,{children:"ActivityResultLauncher"})," que manejar\xe1 el resultado de la ",(0,s.jsx)(n.code,{children:"Intent"})," de Google Sign-In."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Importancia"}),": Define c\xf3mo manejar la respuesta de Google despu\xe9s de que el usuario intente iniciar sesi\xf3n, ya sea exitosamente o cancelando el proceso."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsx)(n.h4,{id:"registro-del-launcher-para-manejar-resultados-de-google-sign-in",children:"Registro del Launcher para Manejar Resultados de Google Sign-In"}),(0,s.jsxs)(n.p,{children:["En el m\xe9todo ",(0,s.jsx)(n.code,{children:"registrarLauncherGoogleSignIn()"}),", registras el launcher que manejar\xe1 el resultado de la ",(0,s.jsx)(n.code,{children:"Intent"})," de Google Sign-In:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"registerForActivityResult"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Registra un callback que se ejecutar\xe1 cuando se reciba un resultado de la actividad iniciada."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Par\xe1metros"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ActivityResultContracts.StartActivityForResult()"})}),": Define el tipo de contrato que especifica que se iniciar\xe1 una actividad esperando un resultado."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ActivityResultCallback<ActivityResult>()"})}),": Define c\xf3mo manejar el resultado una vez que la actividad finalice."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Callback ",(0,s.jsx)(n.code,{children:"onActivityResult(ActivityResult result)"})]}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Verificaci\xf3n del Resultado"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["\xc9xito (",(0,s.jsx)(n.code,{children:"RESULT_OK"}),")"]}),": Significa que el usuario complet\xf3 el flujo de Google Sign-In exitosamente.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Obtenci\xf3n de Datos"}),": Se extrae la ",(0,s.jsx)(n.code,{children:"Intent"})," que contiene la informaci\xf3n de la cuenta de Google."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extracci\xf3n de la Cuenta"}),": Utiliza ",(0,s.jsx)(n.code,{children:"GoogleSignIn.getSignedInAccountFromIntent(data)"})," para obtener la cuenta de Google del usuario."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Autenticaci\xf3n con Firebase"}),": Si la cuenta es v\xe1lida, se llama al m\xe9todo ",(0,s.jsx)(n.code,{children:"autenticarConFirebaseGoogle(account.getIdToken())"})," para autenticar al usuario en Firebase usando el token de Google."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cancelaci\xf3n o Error"}),": Si el usuario cancel\xf3 el inicio de sesi\xf3n o ocurri\xf3 un error, se muestra un mensaje adecuado."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsx)(n.h4,{id:"implementaci\xf3n-del-listener-para-el-bot\xf3n-de-google-sign-in",children:"Implementaci\xf3n del Listener para el Bot\xf3n de Google Sign-In"}),(0,s.jsxs)(n.p,{children:["A\xf1ades un ",(0,s.jsx)(n.strong,{children:"listener"})," para el bot\xf3n de Google Sign-In que inicia el flujo de autenticaci\xf3n:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"binding.btnGoogleSignIn.setOnClickListener"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Asigna una acci\xf3n al bot\xf3n de Google Sign-In."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Acci\xf3n"}),": Cuando el usuario hace clic en el bot\xf3n, se llama al m\xe9todo ",(0,s.jsx)(n.code,{children:"iniciarSignInConGoogle()"}),", que inicia el proceso de autenticaci\xf3n con Google."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsxs)(n.h4,{id:"m\xe9todo-configurargooglesignin",children:["M\xe9todo ",(0,s.jsx)(n.code,{children:"configurarGoogleSignIn()"})]}),(0,s.jsxs)(n.p,{children:["Este m\xe9todo configura las opciones de Google Sign-In y crea una instancia de ",(0,s.jsx)(n.code,{children:"GoogleSignInClient"}),":"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleSignInOptions.Builder"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleSignInOptions.DEFAULT_SIGN_IN"})}),": Configura el inicio de sesi\xf3n de Google con las opciones predeterminadas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"requestIdToken(getString(R.string.default_web_client_id))"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop\xf3sito"}),": Solicita un ",(0,s.jsx)(n.strong,{children:"ID Token"})," que es necesario para autenticar al usuario con Firebase."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"default_web_client_id"})}),": Es un string que contiene el ID de cliente web generado por Firebase. Este valor debe estar definido en tu archivo ",(0,s.jsx)(n.code,{children:"strings.xml"})," y se obtiene autom\xe1ticamente al configurar Google Sign-In en la consola de Firebase."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"requestEmail()"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop\xf3sito"}),": Solicita el email del usuario, que es necesario para identificar al usuario en Firebase."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"build()"})}),": Construye las opciones de Google Sign-In con las configuraciones especificadas."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleSignIn.getClient(this, gso)"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Crea una instancia de ",(0,s.jsx)(n.code,{children:"GoogleSignInClient"})," utilizando las opciones configuradas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Uso"}),": Esta instancia se utiliza para iniciar el flujo de inicio de sesi\xf3n de Google y para cerrar la sesi\xf3n de Google cuando sea necesario."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsxs)(n.h4,{id:"m\xe9todo-registrarlaunchergooglesignin",children:["M\xe9todo ",(0,s.jsx)(n.code,{children:"registrarLauncherGoogleSignIn()"})]}),(0,s.jsxs)(n.p,{children:["Este m\xe9todo registra el ",(0,s.jsx)(n.code,{children:"ActivityResultLauncher"})," que manejar\xe1 el resultado de la ",(0,s.jsx)(n.code,{children:"Intent"})," de Google Sign-In:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"registerForActivityResult"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Registra un callback que se ejecutar\xe1 cuando se reciba un resultado de la actividad iniciada (en este caso, el flujo de Google Sign-In)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Par\xe1metros"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ActivityResultContracts.StartActivityForResult()"})}),": Especifica que se iniciar\xe1 una actividad esperando un resultado."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ActivityResultCallback<ActivityResult>()"})}),": Define c\xf3mo manejar el resultado una vez que la actividad finalice."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Callback ",(0,s.jsx)(n.code,{children:"onActivityResult(ActivityResult result)"})]}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Verificaci\xf3n del Resultado"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["\xc9xito (",(0,s.jsx)(n.code,{children:"RESULT_OK"}),")"]}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Obtenci\xf3n de Datos"}),": Se extrae la ",(0,s.jsx)(n.code,{children:"Intent"})," que contiene la informaci\xf3n de la cuenta de Google."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extracci\xf3n de la Cuenta"}),": Utiliza ",(0,s.jsx)(n.code,{children:"GoogleSignIn.getSignedInAccountFromIntent(data)"})," para obtener la cuenta de Google del usuario."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Autenticaci\xf3n con Firebase"}),": Si la cuenta es v\xe1lida, se llama al m\xe9todo ",(0,s.jsx)(n.code,{children:"autenticarConFirebaseGoogle(account.getIdToken())"})," para autenticar al usuario en Firebase usando el token de Google."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cancelaci\xf3n o Error"}),": Si el usuario cancel\xf3 el inicio de sesi\xf3n o ocurri\xf3 un error, se muestra un mensaje adecuado."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsxs)(n.h4,{id:"m\xe9todo-iniciarsignincongoogle",children:["M\xe9todo ",(0,s.jsx)(n.code,{children:"iniciarSignInConGoogle()"})]}),(0,s.jsxs)(n.p,{children:["Este m\xe9todo inicia el flujo de inicio de sesi\xf3n con Google al lanzar la ",(0,s.jsx)(n.code,{children:"Intent"})," de Google Sign-In:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mGoogleSignInClient.getSignInIntent()"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Crea una ",(0,s.jsx)(n.code,{children:"Intent"})," que inicia el flujo de Google Sign-In."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Uso"}),": Esta ",(0,s.jsx)(n.code,{children:"Intent"})," se utiliza para mostrar la interfaz de inicio de sesi\xf3n de Google al usuario."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"googleSignInLauncher.launch(signInIntent)"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Inicia la ",(0,s.jsx)(n.code,{children:"Intent"})," de Google Sign-In utilizando el ",(0,s.jsx)(n.code,{children:"ActivityResultLauncher"})," previamente registrado."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Beneficio"}),": Permite manejar el resultado del inicio de sesi\xf3n de manera as\xedncrona y sin utilizar m\xe9todos obsoletos como ",(0,s.jsx)(n.code,{children:"startActivityForResult()"}),"."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsxs)(n.h4,{id:"m\xe9todo-autenticarconfirebasegooglestring-idtoken",children:["M\xe9todo ",(0,s.jsx)(n.code,{children:"autenticarConFirebaseGoogle(String idToken)"})]}),(0,s.jsx)(n.p,{children:"Este m\xe9todo autentica al usuario en Firebase utilizando el ID Token obtenido de Google Sign-In:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleAuthProvider.getCredential(idToken, null)"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Crea una instancia de ",(0,s.jsx)(n.code,{children:"AuthCredential"})," utilizando el ID Token obtenido de Google Sign-In."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Par\xe1metros"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"idToken"})}),": El token de ID obtenido despu\xe9s de que el usuario inicia sesi\xf3n con Google."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"null"})}),": El segundo par\xe1metro es para el access token, que no es necesario en este caso."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mAuth.signInWithCredential(credential)"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Inicia el proceso de autenticaci\xf3n en Firebase utilizando las credenciales de Google."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Proceso"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\xc9xito"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Obtenci\xf3n del Usuario"}),": Se obtiene el usuario actual autenticado en Firebase."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mensaje de Bienvenida"}),": Se muestra un ",(0,s.jsx)(n.code,{children:"Toast"})," con un mensaje de bienvenida."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Navegaci\xf3n"}),": Se llama al m\xe9todo ",(0,s.jsx)(n.code,{children:"iniciarMainActivity()"})," para navegar a la actividad principal de la aplicaci\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mensaje de Error"}),": Se muestra un ",(0,s.jsx)(n.code,{children:"Toast"})," con el mensaje de error detallado."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"7-modificar-la-mainactivity",children:["7. ",(0,s.jsxs)(n.strong,{children:["Modificar la ",(0,s.jsx)(n.code,{children:"MainActivity"})]})]}),"\n",(0,s.jsx)(n.p,{children:"Ser\xe1 necesario modificar la MainActivity para incluir la posibilidad del cierre de la sesi\xf3n con el usuario google ya que sigue un proceso diferente al usuario b\xe1sico:"}),"\n",(0,s.jsx)(n.h3,{id:"c\xf3digo-completo-1",children:"C\xf3digo Completo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="MainActivity.java"',children:'package com.agora.autenticaciondemo;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport com.agora.autenticaciondemo.databinding.ActivityMainBinding;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.FirebaseUserMetadata;\r\n\r\nimport java.util.Date;\r\n\r\n/**\r\n * MainActivity muestra informaci\xf3n del usuario y permite cerrar sesi\xf3n.\r\n */\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    // View Binding para activity_main.xml\r\n    private ActivityMainBinding binding;\r\n\r\n    // Referencia a FirebaseAuth\r\n    private FirebaseAuth mAuth;\r\n\r\n    // Referencia a usuario Google\r\n    // highlight-next-line\r\n    private GoogleSignInClient mGoogleSignInClient;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        // Inicializamos el binding\r\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\r\n        View view = binding.getRoot();\r\n        setContentView(view);\r\n\r\n        // Obtener instancia de FirebaseAuth\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        // Configurar Google Sign-In\r\n         // highlight-next-line\r\n        configurarGoogleSignIn();\r\n\r\n        // Verificar si hay un usuario logueado\r\n        FirebaseUser usuarioActual = mAuth.getCurrentUser();\r\n        if (usuarioActual == null) {\r\n            // Si no hay usuario, volvemos a RegistroActivity\r\n            volverRegistro();\r\n        } else {\r\n            //Mostramos email del usuario\r\n            binding.textViewUserInfo.setText(usuarioActual.getEmail());\r\n            // Obtener la metadata del usuario\r\n            FirebaseUserMetadata metadata = usuarioActual.getMetadata();\r\n            if (metadata != null) {\r\n                // Obtener la fecha de creaci\xf3n y \xfaltimo inicio de sesi\xf3n\r\n                    long creationTime = metadata.getCreationTimestamp();      // Milisegundos desde la \xe9poca Unix\r\n                    long lastSignInTime = metadata.getLastSignInTimestamp();  // Milisegundos desde la \xe9poca Unix\r\n                    // Para mostrarlo de forma legible, podemos convertirlo a Date:\r\n                    Date creationDate = new Date(creationTime);\r\n                    Date lastSignInDate = new Date(lastSignInTime);\r\n                //Mostramos informaci\xf3n del usuario\r\n                    binding.textViewUserInfo2.setText("Cuenta creada: " + creationDate.toString());\r\n                    binding.textViewUserInfo3.setText("\xdaltima sesi\xf3n: " + lastSignInDate.toString());\r\n              }\r\n        }\r\n\r\n        // Evento para bot\xf3n "Cerrar Sesi\xf3n"\r\n        binding.buttonLogout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                signOutUsuario();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Configura las opciones de Google Sign-In.\r\n     */\r\n   // highlight-start\r\n    private void configurarGoogleSignIn() {\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id)) // ID del cliente web de Firebase\r\n                .requestEmail() // Solicitar el email del usuario\r\n                .build();\r\n\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\r\n    }\r\n     // highlight-end\r\n\r\n    /**\r\n     * Cierra la sesi\xf3n del usuario.\r\n     */\r\n    private void signOutUsuario() {\r\n        mAuth.signOut();\r\n         // highlight-start\r\n        mGoogleSignInClient.signOut().addOnCompleteListener(this, task -> {\r\n            if (task.isSuccessful()) {\r\n                Toast.makeText(MainActivity.this, "Sesi\xf3n cerrada correctamente", Toast.LENGTH_SHORT).show();\r\n                // Navegar a RegistroActivity\r\n                Intent intent = new Intent(MainActivity.this, RegistroActivity.class);\r\n                startActivity(intent);\r\n                finish(); // Finalizar MainActivity\r\n            } else {\r\n                Toast.makeText(MainActivity.this, "Error al cerrar sesi\xf3n de Google", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n         // highlight-end\r\n\r\n\r\n        // Volver a la pantalla de registro/inicio\r\n        volverRegistro();\r\n    }\r\n\r\n    /**\r\n     * Navegar a RegisterActivity.\r\n     */\r\n    private void volverRegistro() {\r\n        Intent intent = new Intent(MainActivity.this, RegistroActivity.class);\r\n        startActivity(intent);\r\n        finish(); // Cerramos la actividad actual\r\n    }\r\n\r\n    /**\r\n     * Cuando el usuario sale de la app (onDestroy se llama cuando la Activity se destruye),\r\n     * cerramos sesi\xf3n autom\xe1ticamente seg\xfan la solicitud.\r\n     */\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        // Cerrar sesi\xf3n autom\xe1ticamente al destruir la Activity (salir de la app)\r\n        mAuth.signOut();\r\n        // Cerrar sesi\xf3n en Google\r\n         // highlight-next-line\r\n        mGoogleSignInClient.signOut();\r\n    }\r\n}\r\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"explicaci\xf3n-detallada-1",children:"Explicaci\xf3n detallada"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["A continuaci\xf3n, se desarrolla una ",(0,s.jsx)(n.strong,{children:"explicaci\xf3n detallada"})," de las ",(0,s.jsx)(n.strong,{children:"partes resaltadas"})," en tu c\xf3digo ",(0,s.jsx)(n.code,{children:"MainActivity.java"}),". Estas secciones son fundamentales para implementar correctamente la ",(0,s.jsx)(n.strong,{children:"cerrar sesi\xf3n"})," tanto para usuarios b\xe1sicos como para usuarios que han iniciado sesi\xf3n con ",(0,s.jsx)(n.strong,{children:"Google Sign-In"}),"."]}),(0,s.jsx)(n.h4,{id:"declaraci\xf3n-de-variables-clave-1",children:"Declaraci\xf3n de Variables Clave"}),(0,s.jsxs)(n.p,{children:["En tu clase ",(0,s.jsx)(n.code,{children:"MainActivity"}),", has declarado dos variables clave que son esenciales para manejar el ",(0,s.jsx)(n.strong,{children:"cierre de sesi\xf3n"})," de usuarios que han iniciado sesi\xf3n con ",(0,s.jsx)(n.strong,{children:"Google"}),":"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleSignInClient mGoogleSignInClient"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\xbfQu\xe9 es?"}),": Es una instancia de ",(0,s.jsx)(n.code,{children:"GoogleSignInClient"})," que gestiona las interacciones con los servicios de ",(0,s.jsx)(n.strong,{children:"Google Sign-In"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Permite iniciar y cerrar sesiones de ",(0,s.jsx)(n.strong,{children:"Google Sign-In"}),". En este contexto, se utiliza principalmente para cerrar la sesi\xf3n del usuario cuando este decide hacerlo desde la aplicaci\xf3n."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Importancia"}),": Es necesario mantener una referencia a ",(0,s.jsx)(n.code,{children:"GoogleSignInClient"})," para poder invocar m\xe9todos como ",(0,s.jsx)(n.code,{children:"signOut()"})," y ",(0,s.jsx)(n.code,{children:"revokeAccess()"}),", que gestionan la autenticaci\xf3n con Google."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsx)(n.h4,{id:"configuraci\xf3n-de-google-sign-in-1",children:"Configuraci\xf3n de Google Sign-In"}),(0,s.jsxs)(n.p,{children:["Dentro del m\xe9todo ",(0,s.jsx)(n.code,{children:"onCreate()"}),", llamas al m\xe9todo ",(0,s.jsx)(n.code,{children:"configurarGoogleSignIn()"})," para establecer las opciones de ",(0,s.jsx)(n.strong,{children:"Google Sign-In"}),":"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"configurarGoogleSignIn()"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop\xf3sito"}),": Configura las opciones necesarias para ",(0,s.jsx)(n.strong,{children:"Google Sign-In"}),", tales como solicitar el ",(0,s.jsx)(n.strong,{children:"ID Token"})," y el ",(0,s.jsx)(n.strong,{children:"email"})," del usuario."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Importancia"}),": Establece las configuraciones que permiten a tu aplicaci\xf3n comunicarse correctamente con los servicios de Google y Firebase para la autenticaci\xf3n."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ubicaci\xf3n"}),": Este m\xe9todo se llama en el ",(0,s.jsx)(n.code,{children:"onCreate()"})," para asegurarse de que la configuraci\xf3n se realice al iniciar la actividad."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsxs)(n.h4,{id:"m\xe9todo-configurargooglesignin-1",children:["M\xe9todo ",(0,s.jsx)(n.code,{children:"configurarGoogleSignIn()"})]}),(0,s.jsxs)(n.p,{children:["Este m\xe9todo configura las opciones de ",(0,s.jsx)(n.strong,{children:"Google Sign-In"})," y crea una instancia de ",(0,s.jsx)(n.code,{children:"GoogleSignInClient"})," con dichas opciones:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleSignInOptions.Builder"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleSignInOptions.DEFAULT_SIGN_IN"})}),": Configura el inicio de sesi\xf3n de Google con las opciones predeterminadas, que incluyen solicitar el ",(0,s.jsx)(n.strong,{children:"ID Token"})," y el ",(0,s.jsx)(n.strong,{children:"email"})," del usuario."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"requestIdToken(getString(R.string.default_web_client_id))"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop\xf3sito"}),": Solicita un ",(0,s.jsx)(n.strong,{children:"ID Token"})," que es necesario para autenticar al usuario con ",(0,s.jsx)(n.strong,{children:"Firebase Authentication"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"default_web_client_id"})}),": Es un string que contiene el ID del cliente web generado por Firebase. Este valor debe estar definido en tu archivo ",(0,s.jsx)(n.code,{children:"res/values/strings.xml"})," y se obtiene autom\xe1ticamente al configurar ",(0,s.jsx)(n.strong,{children:"Google Sign-In"})," en la consola de Firebase."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"requestEmail()"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop\xf3sito"}),": Solicita el email del usuario, que es necesario para identificar al usuario en ",(0,s.jsx)(n.strong,{children:"Firebase"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"build()"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Construye las opciones de ",(0,s.jsx)(n.strong,{children:"Google Sign-In"})," con las configuraciones especificadas."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"GoogleSignIn.getClient(this, gso)"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Crea una instancia de ",(0,s.jsx)(n.code,{children:"GoogleSignInClient"})," utilizando las opciones configuradas (",(0,s.jsx)(n.code,{children:"gso"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Uso"}),": Esta instancia se utiliza para iniciar y cerrar el flujo de ",(0,s.jsx)(n.strong,{children:"Google Sign-In"}),"."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsxs)(n.h4,{id:"m\xe9todo-signoutusuario",children:["M\xe9todo ",(0,s.jsx)(n.code,{children:"signOutUsuario()"})]}),(0,s.jsxs)(n.p,{children:["Este m\xe9todo maneja el ",(0,s.jsx)(n.strong,{children:"cierre de sesi\xf3n"})," del usuario, tanto en ",(0,s.jsx)(n.strong,{children:"Firebase Authentication"})," como en ",(0,s.jsx)(n.strong,{children:"Google Sign-In"}),":"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mAuth.signOut()"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Cierra la sesi\xf3n del usuario en ",(0,s.jsx)(n.strong,{children:"Firebase Authentication"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Importancia"}),": Es esencial para asegurarse de que el usuario ya no tenga acceso a los recursos protegidos de la aplicaci\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mGoogleSignInClient.signOut().addOnCompleteListener(this, task -> { ... })"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Cierra la sesi\xf3n del usuario en ",(0,s.jsx)(n.strong,{children:"Google Sign-In"})," de manera as\xedncrona."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"addOnCompleteListener"})}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop\xf3sito"}),": Permite manejar el resultado de la operaci\xf3n de cierre de sesi\xf3n."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["\xc9xito (",(0,s.jsx)(n.code,{children:"task.isSuccessful()"}),")"]}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Acciones"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Muestra un mensaje ",(0,s.jsx)(n.code,{children:"Toast"})," indicando que la sesi\xf3n se cerr\xf3 correctamente."]}),"\n",(0,s.jsxs)(n.li,{children:["Navega a ",(0,s.jsx)(n.code,{children:"RegistroActivity"})," para que el usuario pueda iniciar sesi\xf3n nuevamente si lo desea."]}),"\n",(0,s.jsxs)(n.li,{children:["Finaliza ",(0,s.jsx)(n.code,{children:"MainActivity"})," con ",(0,s.jsx)(n.code,{children:"finish()"}),' para evitar que el usuario pueda regresar a esta actividad mediante el bot\xf3n "Atr\xe1s".']}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Muestra un mensaje ",(0,s.jsx)(n.code,{children:"Toast"})," indicando que hubo un error al cerrar la sesi\xf3n de Google."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"volverRegistro()"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": M\xe9todo adicional que navega a ",(0,s.jsx)(n.code,{children:"RegistroActivity"}),". Aunque ya navegas a ",(0,s.jsx)(n.code,{children:"RegistroActivity"})," dentro del ",(0,s.jsx)(n.code,{children:"addOnCompleteListener"}),", esta llamada podr\xeda ser redundante o depender de la l\xf3gica espec\xedfica de tu aplicaci\xf3n."]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Nota Importante"}),": Aseg\xfarate de manejar adecuadamente la navegaci\xf3n para evitar que la actividad se cierre dos veces o que el usuario quede en un estado inconsistente."]}),"\n"]}),(0,s.jsx)(n.hr,{}),(0,s.jsxs)(n.h4,{id:"m\xe9todo-ondestroy",children:["M\xe9todo ",(0,s.jsx)(n.code,{children:"onDestroy()"})]}),(0,s.jsxs)(n.p,{children:["Este m\xe9todo maneja el ",(0,s.jsx)(n.strong,{children:"cierre de sesi\xf3n autom\xe1tico"})," cuando la actividad es destruida (por ejemplo, al cerrar la aplicaci\xf3n):"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mAuth.signOut()"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Cierra la sesi\xf3n del usuario en ",(0,s.jsx)(n.strong,{children:"Firebase Authentication"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Importancia"}),": Garantiza que el usuario no permanezca autenticado despu\xe9s de que la actividad haya sido destruida."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mGoogleSignInClient.signOut()"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Funci\xf3n"}),": Cierra la sesi\xf3n del usuario en ",(0,s.jsx)(n.strong,{children:"Google Sign-In"})," de manera s\xedncrona."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Importancia"}),": Asegura que el usuario ya no est\xe9 autenticado con su cuenta de Google en la aplicaci\xf3n."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consideraci\xf3n"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Impacto en la Experiencia del Usuario"}),": Implementar el cierre de sesi\xf3n autom\xe1tico en ",(0,s.jsx)(n.code,{children:"onDestroy()"})," significa que cada vez que la actividad sea destruida (incluyendo rotaciones de pantalla, cambios de configuraci\xf3n, o al cerrar la aplicaci\xf3n), la sesi\xf3n del usuario ser\xe1 cerrada. Esto podr\xeda resultar molesto para el usuario, ya que tendr\xeda que iniciar sesi\xf3n cada vez que abre la aplicaci\xf3n."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Recomendaci\xf3n"}),": Eval\xfaa si realmente deseas cerrar la sesi\xf3n autom\xe1ticamente al destruir la actividad. Generalmente, las sesiones se mantienen activas hasta que el usuario decide cerrarlas manualmente para proporcionar una mejor experiencia de usuario."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prueba-la-aplicaci\xf3n",children:(0,s.jsx)(n.strong,{children:"Prueba la aplicaci\xf3n"})}),"\n",(0,s.jsx)(n.p,{children:"Felicidades \ud83d\udc4f\ud83c\udffd\ud83d\udc4f\ud83c\udffd. En este punto deber\xedas tener una App que permita el login y registro de usuarios mediante dos m\xe9todos distintos. \ud83d\ude80"})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1822:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/Autenticacion_v2-bca386f129eea008f4faf13b835f45c3.gif"},6588:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/agregarGoogle-254a5d2ced5bb64fb2030a97b953f8b4.png"},4970:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/agregarHuella-1560cf59436da3128b3701dd06a90e13.png"},2165:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/webClient-9ee5bb3a37bcb26663bfe8e4d889746a.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(6540);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);