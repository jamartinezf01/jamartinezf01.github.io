"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[4935],{9098:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"salva/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/bienFormado","title":"XSD bien formado","description":"Un XSD bien formado es aquel que cumple con las reglas de sintaxis y estructura propias de XML y que, adem\xe1s, sigue los lineamientos de la especificaci\xf3n XML Schema. Esto garantiza que el documento XSD sea legible, f\xe1cil de mantener y que las herramientas (validadores, editores, etc.) puedan interpretarlo correctamente.","source":"@site/docs/salva/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/bienFormado.md","sourceDirName":"salva/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS","slug":"/salva/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/bienFormado","permalink":"/docs/salva/lenguajes-de-marcas/5 Validaci\xf3n XML/XDS/bienFormado","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2}}');var i=s(4848),a=s(8453);const o={sidebar_position:2},c="XSD bien formado",l={},d=[{value:"1. <strong>Requisitos para un XSD bien formado</strong>",id:"1-requisitos-para-un-xsd-bien-formado",level:2},{value:"2. <strong>Estructura principal de un XSD</strong>",id:"2-estructura-principal-de-un-xsd",level:2},{value:"3. <strong>Ejemplo de XSD bien formado</strong>",id:"3-ejemplo-de-xsd-bien-formado",level:2},{value:"An\xe1lisis del ejemplo",id:"an\xe1lisis-del-ejemplo",level:4},{value:"4. <strong>Validaci\xf3n de la estructura</strong>",id:"4-validaci\xf3n-de-la-estructura",level:2}];function t(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"xsd-bien-formado",children:"XSD bien formado"})}),"\n",(0,i.jsxs)(n.p,{children:["Un ",(0,i.jsx)(n.strong,{children:"XSD bien formado"})," es aquel que cumple con las reglas de sintaxis y estructura propias de XML y que, adem\xe1s, sigue los lineamientos de la especificaci\xf3n ",(0,i.jsx)(n.strong,{children:"XML Schema"}),". Esto garantiza que el documento XSD sea legible, f\xe1cil de mantener y que las herramientas (validadores, editores, etc.) puedan interpretarlo correctamente."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"1-requisitos-para-un-xsd-bien-formado",children:["1. ",(0,i.jsx)(n.strong,{children:"Requisitos para un XSD bien formado"})]}),"\n",(0,i.jsxs)(n.p,{children:["I. ",(0,i.jsx)(n.strong,{children:"Cumplir con la sintaxis b\xe1sica de XML"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Todo elemento debe tener su etiqueta de apertura y cierre correspondientes."}),"\n",(0,i.jsxs)(n.li,{children:["Debe existir un \xfanico elemento ra\xedz (en este caso, ",(0,i.jsx)(n.code,{children:"<xs:schema>"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Las entidades especiales (",(0,i.jsx)(n.code,{children:"<"}),", ",(0,i.jsx)(n.code,{children:">"}),", ",(0,i.jsx)(n.code,{children:"&"}),") deben escaparse adecuadamente dentro del contenido cuando sea necesario."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["II. ",(0,i.jsx)(n.strong,{children:"Incluir la declaraci\xf3n del namespace de XML Schema"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Generalmente se indica con ",(0,i.jsx)(n.code,{children:'xmlns:xs="http://www.w3.org/2001/XMLSchema"'}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Todas las construcciones de XSD (ej. ",(0,i.jsx)(n.code,{children:"<xs:element>"}),", ",(0,i.jsx)(n.code,{children:"<xs:complexType>"}),", ",(0,i.jsx)(n.code,{children:"<xs:simpleType>"}),", etc.) deben usar ese prefijo ",(0,i.jsx)(n.code,{children:"xs"})," o cualquier otro que hayamos definido para el namespace de XML Schema."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["III. ",(0,i.jsxs)(n.strong,{children:["Declarar el ",(0,i.jsx)(n.code,{children:"targetNamespace"})," (si corresponde)"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Si el esquema define elementos y tipos para un espacio de nombres concreto, usar ",(0,i.jsx)(n.code,{children:'targetNamespace="..."'}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["De no requerirse un namespace espec\xedfico (caso poco frecuente en entornos reales), no se utiliza ",(0,i.jsx)(n.code,{children:"targetNamespace"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["IV. ",(0,i.jsx)(n.strong,{children:"Opciones de configuraci\xf3n adicionales"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'elementFormDefault="qualified"'}),": Para que los elementos declarados en el esquema pertenezcan al namespace."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'attributeFormDefault="unqualified"'})," (opcional): Suele usarse para que los atributos no est\xe9n obligados a tener namespace."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["V. ",(0,i.jsx)(n.strong,{children:"Estructura interna clara"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Incluir comentarios (opcional, pero recomendable) para describir secciones, elementos o tipos."}),"\n",(0,i.jsx)(n.li,{children:"Separar la declaraci\xf3n de tipos, elementos y grupos de atributos si el XSD es extenso."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"2-estructura-principal-de-un-xsd",children:["2. ",(0,i.jsx)(n.strong,{children:"Estructura principal de un XSD"})]}),"\n",(0,i.jsxs)(n.p,{children:["La ",(0,i.jsx)(n.strong,{children:"estructura general"})," de un XSD suele ser la siguiente:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<xs:schema \r\n    xmlns:xs="http://www.w3.org/2001/XMLSchema"\r\n    targetNamespace="http://www.ejemplo.org/miesquema"\r\n    xmlns="http://www.ejemplo.org/miesquema"\r\n    elementFormDefault="qualified"\r\n    attributeFormDefault="unqualified">\r\n\r\n    \x3c!-- Secci\xf3n de import o include (si aplica) --\x3e\r\n    \x3c!-- xs:import namespace="..." schemaLocation="..." --\x3e\r\n    \x3c!-- xs:include schemaLocation="..." --\x3e\r\n\r\n    \x3c!-- Definiciones de tipos simples --\x3e\r\n    \x3c!-- <xs:simpleType name="..."> ... </xs:simpleType> --\x3e\r\n\r\n    \x3c!-- Definiciones de tipos complejos --\x3e\r\n    \x3c!-- <xs:complexType name="..."> ... </xs:complexType> --\x3e\r\n\r\n    \x3c!-- Definiciones de grupos de elementos o atributos (opcional) --\x3e\r\n    \x3c!-- <xs:group name="..."> ... </xs:group> --\x3e\r\n    \x3c!-- <xs:attributeGroup name="..."> ... </xs:attributeGroup> --\x3e\r\n\r\n    \x3c!-- Declaraciones de elementos ra\xedz u otros elementos --\x3e\r\n    \x3c!-- <xs:element name="..."> ... </xs:element> --\x3e\r\n\r\n</xs:schema>\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"En este esquema:",type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<xs:schema>"}),": Elemento ra\xedz que indica que se trata de un XSD."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'xmlns:xs="..."'}),": Namespace oficial de la W3C para las construcciones del lenguaje de esquemas."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"targetNamespace"}),": URL que define el espacio de nombres al cual pertenecen los elementos y tipos definidos en este XSD."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'xmlns="..."'}),": Hace que, por defecto, los elementos que se definan se vinculen a ese namespace (sin necesidad de usar prefijos)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"elementFormDefault"})," y ",(0,i.jsx)(n.code,{children:"attributeFormDefault"}),": Especifican c\xf3mo se aplican los namespaces a los elementos y atributos."]}),"\n"]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"3-ejemplo-de-xsd-bien-formado",children:["3. ",(0,i.jsx)(n.strong,{children:"Ejemplo de XSD bien formado"})]}),"\n",(0,i.jsxs)(n.p,{children:["A continuaci\xf3n, un ejemplo que define esquem\xe1ticamente una lista de ",(0,i.jsx)(n.strong,{children:"productos tecnol\xf3gicos"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<xs:schema \r\n    xmlns:xs="http://www.w3.org/2001/XMLSchema"\r\n    targetNamespace="http://www.ejemplo.org/productos"\r\n    xmlns="http://www.ejemplo.org/productos"\r\n    elementFormDefault="qualified"\r\n    attributeFormDefault="unqualified">\r\n\r\n    \x3c!-- Tipo simple para restringir el nombre del producto --\x3e\r\n    <xs:simpleType name="tipoNombreProducto">\r\n        <xs:restriction base="xs:string">\r\n            <xs:minLength value="1"/>\r\n            <xs:maxLength value="50"/>\r\n        </xs:restriction>\r\n    </xs:simpleType>\r\n\r\n    \x3c!-- Tipo complejo para un producto --\x3e\r\n    <xs:complexType name="tipoProducto">\r\n        <xs:sequence>\r\n            <xs:element name="Nombre" type="tipoNombreProducto"/>\r\n            <xs:element name="Categoria" type="xs:string"/>\r\n            <xs:element name="Precio" type="xs:decimal"/>\r\n        </xs:sequence>\r\n        <xs:attribute name="id" type="xs:int" use="required"/>\r\n    </xs:complexType>\r\n\r\n    \x3c!-- Elemento ra\xedz: Lista de productos --\x3e\r\n    <xs:element name="CatalogoProductos">\r\n        <xs:complexType>\r\n            <xs:sequence>\r\n                <xs:element name="Producto" type="tipoProducto" maxOccurs="unbounded"/>\r\n            </xs:sequence>\r\n        </xs:complexType>\r\n    </xs:element>\r\n\r\n</xs:schema>\n'})}),"\n",(0,i.jsx)(n.h4,{id:"an\xe1lisis-del-ejemplo",children:"An\xe1lisis del ejemplo"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"<xs:simpleType>"})})," (tipoNombreProducto):",(0,i.jsx)(n.br,{}),"\n","Un tipo restringido basado en ",(0,i.jsx)(n.code,{children:"xs:string"})," con longitud m\xednima de 1 y m\xe1xima de 50."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"<xs:complexType>"})})," (tipoProducto):","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Contiene tres elementos (",(0,i.jsx)(n.code,{children:"Nombre"}),", ",(0,i.jsx)(n.code,{children:"Categoria"}),", ",(0,i.jsx)(n.code,{children:"Precio"}),") y un atributo ",(0,i.jsx)(n.code,{children:"id"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["El atributo ",(0,i.jsx)(n.code,{children:"id"})," es obligatorio (",(0,i.jsx)(n.code,{children:'use="required"'}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Elemento ra\xedz"})," (",(0,i.jsx)(n.code,{children:"CatalogoProductos"}),"):","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Define un contenedor de varios productos (",(0,i.jsx)(n.code,{children:'maxOccurs="unbounded"'})," indica que puede haber muchos)."]}),"\n",(0,i.jsxs)(n.li,{children:["Para validar un XML usando este XSD, el documento deber\xeda tener un elemento ",(0,i.jsx)(n.code,{children:"<CatalogoProductos>"})," que incluya m\xfaltiples ",(0,i.jsx)(n.code,{children:"<Producto>"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Este XSD es ",(0,i.jsx)(n.strong,{children:"bien formado"})," porque:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Sigue la sintaxis XML adecuadamente."}),"\n",(0,i.jsxs)(n.li,{children:["Usa correctamente el namespace de XML Schema (",(0,i.jsx)(n.code,{children:"xmlns:xs"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Declara de forma clara el ",(0,i.jsx)(n.code,{children:"targetNamespace"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Incluye las definiciones de tipos simples y complejos, adem\xe1s de un elemento ra\xedz."}),"\n",(0,i.jsx)(n.li,{children:"Respeta la apertura y cierre correcto de cada etiqueta."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"4-validaci\xf3n-de-la-estructura",children:["4. ",(0,i.jsx)(n.strong,{children:"Validaci\xf3n de la estructura"})]}),"\n",(0,i.jsx)(n.p,{children:"Para confirmar que un XSD est\xe1 correctamente escrito, podemos:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Utilizar un editor o IDE"})," que soporte validaci\xf3n de XSD (por ejemplo, Visual Studio Code con extensiones espec\xedficas, XMLSpy, Oxygen XML Editor, etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usar herramientas en l\xednea"})," (W3C XML Schema Validator, por ejemplo) que permitan subir el ",(0,i.jsx)(n.code,{children:".xsd"})," y verifiquen la estructura."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Adem\xe1s de estar ",(0,i.jsx)(n.strong,{children:"bien formado"})," (a nivel de sintaxis XML), se puede comprobar que las definiciones dentro del XSD sean ",(0,i.jsx)(n.strong,{children:"v\xe1lidas"})," a nivel de esquema: que no haya duplicaci\xf3n de nombres, referencias inv\xe1lidas, etc."]}),"\n",(0,i.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(6540);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);