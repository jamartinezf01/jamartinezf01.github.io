"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[2462],{2484:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"python/UT4 - estructuras de datos/4.1_listas","title":"4.1 Listas (list)","description":"1\ufe0f\u20e3 \xbfQu\xe9 es una lista y para qu\xe9 sirve?","source":"@site/docs/python/UT4 - estructuras de datos/4.1_listas.md","sourceDirName":"python/UT4 - estructuras de datos","slug":"/python/UT4 - estructuras de datos/4.1_listas","permalink":"/docs/python/UT4 - estructuras de datos/4.1_listas","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"pythonSidebar","previous":{"title":"UT4 \u2013 Estructuras de datos Complejas","permalink":"/docs/python/UT4 - estructuras de datos/"},"next":{"title":"4.2 Tuplas (tuple)","permalink":"/docs/python/UT4 - estructuras de datos/4.2_tuplas"}}');var i=r(4848),a=r(8453);r(1470),r(9365);const o={sidebar_position:1},l="4.1 Listas (list)",d={},c=[{value:"1\ufe0f\u20e3 <strong>\xbfQu\xe9 es una lista y para qu\xe9 sirve?</strong>",id:"1\ufe0f\u20e3-qu\xe9-es-una-lista-y-para-qu\xe9-sirve",level:2},{value:"2\ufe0f\u20e3 <strong>C\xf3mo crear una lista</strong>",id:"2\ufe0f\u20e3-c\xf3mo-crear-una-lista",level:2},{value:"\ud83d\udfe9 Creaci\xf3n literal",id:"-creaci\xf3n-literal",level:3},{value:"\ud83d\udfe6 A partir de otro iterable",id:"-a-partir-de-otro-iterable",level:3},{value:"3\ufe0f\u20e3 <strong>Acceso a los elementos de una lista</strong>",id:"3\ufe0f\u20e3-acceso-a-los-elementos-de-una-lista",level:2},{value:"\ud83d\udfe9 \xcdndices negativos",id:"-\xedndices-negativos",level:3},{value:"4\ufe0f\u20e3 <strong>Rebanado o <em>slicing</em></strong>",id:"4\ufe0f\u20e3-rebanado-o-slicing",level:2},{value:"5\ufe0f\u20e3 <strong>Modificaci\xf3n de listas</strong>",id:"5\ufe0f\u20e3-modificaci\xf3n-de-listas",level:2},{value:"6\ufe0f\u20e3 <strong>Operaciones b\xe1sicas con listas</strong>",id:"6\ufe0f\u20e3-operaciones-b\xe1sicas-con-listas",level:2},{value:"7\ufe0f\u20e3 <strong>M\xe9todos m\xe1s comunes de las listas</strong>",id:"7\ufe0f\u20e3-m\xe9todos-m\xe1s-comunes-de-las-listas",level:2},{value:"\ud83d\udfe9 <code>append()</code>",id:"-append",level:3},{value:"\ud83d\udfe6 <code>extend()</code>",id:"-extend",level:3},{value:"\ud83d\udfe8 <code>insert(posicion, elemento)</code>",id:"-insertposicion-elemento",level:3},{value:"\ud83d\udfe7 <code>remove(elemento)</code>",id:"-removeelemento",level:3},{value:"\ud83d\udfe5 <code>pop([\xedndice])</code>",id:"-pop\xedndice",level:3},{value:"\ud83d\udfea <code>clear()</code>",id:"-clear",level:3},{value:"\ud83d\udfeb <code>index(elemento[, inicio[, fin]])</code>",id:"-indexelemento-inicio-fin",level:3},{value:"\ud83d\udfe9 <code>count(elemento)</code>",id:"-countelemento",level:3},{value:"8\ufe0f\u20e3 <strong>Copia de listas</strong>",id:"8\ufe0f\u20e3-copia-de-listas",level:2},{value:"\ud83d\udfe9  Asignaci\xf3n simple (sin copia)",id:"--asignaci\xf3n-simple-sin-copia",level:3},{value:"\ud83d\udfe6 Copia superficial (<code>copy()</code>)",id:"-copia-superficial-copy",level:3},{value:"\ud83d\udfe8 Copia profunda (<code>deepcopy()</code>)",id:"-copia-profunda-deepcopy",level:3},{value:"\ud83d\udcca Comparativa r\xe1pida",id:"-comparativa-r\xe1pida",level:3},{value:"9\ufe0f\u20e3 <strong>Recorrido de listas</strong>",id:"9\ufe0f\u20e3-recorrido-de-listas",level:2},{value:"\ud83d\udfe9 Recorrido b\xe1sico con el bucle <code>for</code>",id:"-recorrido-b\xe1sico-con-el-bucle-for",level:3},{value:"\ud83d\udfe6 Recorrido por \xedndice con <code>range()</code> y <code>len()</code>",id:"-recorrido-por-\xedndice-con-range-y-len",level:3},{value:"\ud83d\udfe8 Recorrido con <code>enumerate()</code>",id:"-recorrido-con-enumerate",level:3},{value:"\ud83d\udfe7 Recorrido en paralelo con <code>zip()</code>",id:"-recorrido-en-paralelo-con-zip",level:3},{value:"\ud83d\udfe5 Recorrido inverso",id:"-recorrido-inverso",level:3},{value:"\ud83d\udfea Modificar los elementos durante la iteraci\xf3n",id:"-modificar-los-elementos-durante-la-iteraci\xf3n",level:3},{value:"\ud83d\udfeb Errores comunes al iterar listas",id:"-errores-comunes-al-iterar-listas",level:3},{value:"\ud83d\udcca Tabla resumen",id:"-tabla-resumen",level:3},{value:"\ud83d\udd1f <strong>Ordenaci\xf3n de listas</strong>",id:"-ordenaci\xf3n-de-listas",level:2},{value:"\ud83d\udfe9 <code>sort(key=None, reverse=False)</code>",id:"-sortkeynone-reversefalse",level:3},{value:"\ud83d\udfe6 <code>reverse()</code>",id:"-reverse",level:3},{value:"\ud83d\udfe8 <code>sorted()</code>",id:"-sorted",level:3},{value:"\ud83d\udfe7 Criterios de ordenaci\xf3n con <code>key</code>",id:"-criterios-de-ordenaci\xf3n-con-key",level:3},{value:"\ud83d\udd39 <code>str.lower</code> \u2014 Ignorar may\xfasculas y min\xfasculas",id:"-strlower--ignorar-may\xfasculas-y-min\xfasculas",level:4},{value:"\ud83d\udd39 <code>abs</code> \u2014 Ordenar por valor absoluto",id:"-abs--ordenar-por-valor-absoluto",level:4},{value:"\ud83d\udd39 <code>len</code> \u2014 Ordenar por longitud de cadenas o listas",id:"-len--ordenar-por-longitud-de-cadenas-o-listas",level:4},{value:"\ud83d\udd39 <code>str</code> \u2014 Convertir a cadena antes de ordenar",id:"-str--convertir-a-cadena-antes-de-ordenar",level:4},{value:"\ud83d\udd39 <code>int</code> \u2014 Convertir cadenas a n\xfameros",id:"-int--convertir-cadenas-a-n\xfameros",level:4},{value:"\ud83d\udd39 <code>float</code> \u2014 Ordenar textos con n\xfameros decimales",id:"-float--ordenar-textos-con-n\xfameros-decimales",level:4},{value:"1\ufe0f\u20e31\ufe0f\u20e3 <strong>Listas anidadas</strong>",id:"1\ufe0f\u20e31\ufe0f\u20e3-listas-anidadas",level:2},{value:"1\ufe0f\u20e32\ufe0f\u20e3 <strong>Comprensi\xf3n de listas</strong>",id:"1\ufe0f\u20e32\ufe0f\u20e3-comprensi\xf3n-de-listas",level:2},{value:"\ud83d\udfe9 Qu\xe9 es una comprensi\xf3n de lista",id:"-qu\xe9-es-una-comprensi\xf3n-de-lista",level:3},{value:"\ud83d\udfe6 Ejemplo b\xe1sico",id:"-ejemplo-b\xe1sico",level:3},{value:"\ud83d\udfe8 A\xf1adir una condici\xf3n (<code>if</code>)",id:"-a\xf1adir-una-condici\xf3n-if",level:3},{value:"\ud83d\udfe7 Usar una transformaci\xf3n y un filtro juntos",id:"-usar-una-transformaci\xf3n-y-un-filtro-juntos",level:3},{value:"\ud83d\udfe5 Comprensiones con cadenas de texto",id:"-comprensiones-con-cadenas-de-texto",level:3},{value:"\ud83d\udfea Comprensiones anidadas (dobles bucles)",id:"-comprensiones-anidadas-dobles-bucles",level:3},{value:"\ud83d\udfeb Cu\xe1ndo evitar las comprensiones",id:"-cu\xe1ndo-evitar-las-comprensiones",level:3},{value:"\ud83e\udde9 Practica las compresiones",id:"-practica-las-compresiones",level:3}];function t(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"41-listas-list",children:["4.1 Listas (",(0,i.jsx)(n.code,{children:"list"}),")"]})}),"\n",(0,i.jsxs)(n.h2,{id:"1\ufe0f\u20e3-qu\xe9-es-una-lista-y-para-qu\xe9-sirve",children:["1\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"\xbfQu\xe9 es una lista y para qu\xe9 sirve?"})]}),"\n",(0,i.jsxs)(n.p,{children:["En Python, una ",(0,i.jsx)(n.strong,{children:"lista"})," es un tipo de dato complejo que permite almacenar ",(0,i.jsx)(n.strong,{children:"varios valores en una sola variable"}),". A diferencia de los tipos simples (como un n\xfamero o una cadena), una lista puede contener ",(0,i.jsx)(n.strong,{children:"una colecci\xf3n ordenada de elementos"}),", y cada uno de ellos ",(0,i.jsx)(n.strong,{children:"puede ser de un tipo diferente"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Las listas se utilizan constantemente en programaci\xf3n: para guardar nombres de usuarios, n\xfameros de una secuencia, resultados de una operaci\xf3n o incluso otras listas dentro de ellas. Constituyen una herramienta b\xe1sica para trabajar con ",(0,i.jsx)(n.strong,{children:"grupos de datos din\xe1micos"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Las caracter\xedsticas principales de una lista son:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ordenadas:"})," mantienen el orden en que se introducen los elementos."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mutables:"})," se pueden modificar (a\xf1adir, eliminar o cambiar elementos)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Heterog\xe9neas:"})," pueden incluir datos de distintos tipos (n\xfameros, cadenas, booleanos, etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Permiten duplicados:"})," se pueden repetir valores sin problema."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de declaraci\xf3n de una lista"',children:"mi_lista = [25, \"hola\", 3.14, True]\r\nprint(mi_lista)\r\n\r\n# [25, 'hola', 3.14, True]\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"explicacion",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.p,{children:["En este caso, la lista ",(0,i.jsx)(n.code,{children:"mi_lista"})," contiene cuatro elementos de distintos tipos. Python no exige que todos los elementos sean del mismo tipo, lo que hace que las listas sean muy flexibles."]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"2\ufe0f\u20e3-c\xf3mo-crear-una-lista",children:["2\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"C\xf3mo crear una lista"})]}),"\n",(0,i.jsxs)(n.p,{children:["Existen varias formas de crear listas en Python. La m\xe1s habitual es ",(0,i.jsxs)(n.strong,{children:["usando corchetes ",(0,i.jsx)(n.code,{children:"[]"})]})," y separando los elementos por comas."]}),"\n",(0,i.jsx)(n.h3,{id:"-creaci\xf3n-literal",children:"\ud83d\udfe9 Creaci\xf3n literal"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Declaraci\xf3n literal de una lista"',children:'frutas = ["manzana", "pera", "uva"]\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsx)(n.p,{children:"Se crea una lista con tres cadenas de texto. El orden en el que se escriben ser\xe1 el orden que mantendr\xe1 la lista."})}),"\n",(0,i.jsxs)(n.p,{children:["Tambi\xe9n se pueden crear listas ",(0,i.jsx)(n.strong,{children:"vac\xedas"}),", para rellenarlas despu\xe9s:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Creaci\xf3n de una lista vac\xeda"',children:"vacia = []\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-a-partir-de-otro-iterable",children:"\ud83d\udfe6 A partir de otro iterable"}),"\n",(0,i.jsx)(n.p,{children:"Tambi\xe9n podemos construir una lista a partir de otros tipos de datos que sean \u201crecorribles\u201d (iterables), como cadenas o rangos."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Declaraci\xf3n de una lista a partir de una cadena"',children:"letras = list(\"Python\")\r\nprint(letras)     # ['P', 'y', 't', 'h', 'o', 'n']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["La funci\xf3n ",(0,i.jsx)(n.code,{children:"list()"})," convierte una cadena en una lista, separando cada car\xe1cter."]})}),"\n",(0,i.jsx)(n.p,{children:"Otro ejemplo, a partir de un rango num\xe9rico:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Declaraci\xf3n de una lista a partir de un rango num\xe9rico"',children:"numeros = list(range(3, 8))\r\nprint(numeros)    # [3, 4, 5, 6, 7]\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"3\ufe0f\u20e3-acceso-a-los-elementos-de-una-lista",children:["3\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"Acceso a los elementos de una lista"})]}),"\n",(0,i.jsxs)(n.p,{children:["Cada elemento de una lista tiene una ",(0,i.jsx)(n.strong,{children:"posici\xf3n num\xe9rica"}),", llamada ",(0,i.jsx)(n.strong,{children:"\xedndice"}),", que comienza en 0."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Acceso a los elementos de una lista por medio de su \xedndice"',children:'colores = ["rojo", "verde", "azul"]\r\nprint(colores[0])   # rojo\r\nprint(colores[1])   # verde\r\nprint(colores[2])   # azul\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["El \xedndice permite acceder directamente a un elemento. ",(0,i.jsx)(n.code,{children:"colores[0]"})," devuelve el primer valor. Si intentamos acceder a un \xedndice inexistente, Python mostrar\xe1 un error."]})}),"\n",(0,i.jsx)(n.h3,{id:"-\xedndices-negativos",children:"\ud83d\udfe9 \xcdndices negativos"}),"\n",(0,i.jsx)(n.p,{children:"Python permite contar desde el final usando \xedndices negativos."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Acceso a los elementos de una lista por medio de \xedndice negativo"',children:"print(colores[-1])  # azul\r\nprint(colores[-2])  # verde\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["El \xedndice ",(0,i.jsx)(n.code,{children:"-1"})," se refiere al \xfaltimo elemento, ",(0,i.jsx)(n.code,{children:"-2"})," al pen\xfaltimo, y as\xed sucesivamente."]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"4\ufe0f\u20e3-rebanado-o-slicing",children:["4\ufe0f\u20e3 ",(0,i.jsxs)(n.strong,{children:["Rebanado o ",(0,i.jsx)(n.em,{children:"slicing"})]})]}),"\n",(0,i.jsxs)(n.p,{children:["El ",(0,i.jsx)(n.strong,{children:"slicing"})," permite obtener una porci\xf3n de la lista, es decir, una ",(0,i.jsx)(n.strong,{children:"sublista"})," formada por los elementos que se encuentran entre dos posiciones. Esto nos permite, por ejemplo, imprimirla o crear una copia de una secci\xf3n de la lista."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="slicing de una lista"',children:"numeros = [10, 20, 30, 40, 50, 60]\r\nprint(numeros[1:4])   # [20, 30, 40]\r\nprint(numeros[:3])    # [10, 20, 30]\r\nprint(numeros[3:])    # [40, 50, 60]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["El primer n\xfamero es el ",(0,i.jsx)(n.strong,{children:"inicio"})," (incluido)."]}),"\n",(0,i.jsxs)(n.li,{children:["El segundo es el ",(0,i.jsx)(n.strong,{children:"final"})," (excluido)."]}),"\n",(0,i.jsx)(n.li,{children:"Si se omite el primero, se empieza desde el principio; si se omite el segundo, se llega hasta el final."}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:"Tambi\xe9n se puede modificar valores en bloque mediante slicing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Asignaci\xf3n de valores mediante slicing"',children:"nums = [1, 2, 3, 4, 5]\r\nnums[1:4] = [20, 30]     # reemplaza 2,3,4 por dos elementos\r\nprint(nums)              # [1, 20, 30, 5]\r\n\r\nnums[2:2] = [100, 200]   # inserta sin eliminar\r\nprint(nums)              # [1, 20, 100, 200, 30, 5]\r\n\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"5\ufe0f\u20e3-modificaci\xf3n-de-listas",children:["5\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"Modificaci\xf3n de listas"})]}),"\n",(0,i.jsxs)(n.p,{children:["A diferencia de otros tipos de datos, las listas pueden ",(0,i.jsx)(n.strong,{children:"modificarse despu\xe9s de crearse"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'frutas = ["manzana", "pera", "uva"]\r\nfrutas[1] = "pl\xe1tano"\r\nprint(frutas)    # [\'manzana\', \'pl\xe1tano\', \'uva\']\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsx)(n.p,{children:"Se reemplaza el valor en la posici\xf3n 1. Las listas son mutables, por lo que se pueden alterar sin crear una nueva."})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"6\ufe0f\u20e3-operaciones-b\xe1sicas-con-listas",children:["6\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"Operaciones b\xe1sicas con listas"})]}),"\n",(0,i.jsx)(n.p,{children:"Python permite realizar operaciones comunes con las listas. Este tipo de operaciones las hemos estudiado previamente con el empleo de cadenas de texto que, en cierto modo, se comportan como listas de caracteres."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Operaciones de longitud, pertenencia, concatenaci\xf3n y producto"',children:"numeros = [1, 2, 3]\r\nprint(len(numeros))       # longitud -> 3\r\nprint(2 in numeros)       # True (est\xe1 en la lista)\r\nprint([1, 2] + [3, 4])    # concatenaci\xf3n -> [1, 2, 3, 4]\r\nprint([\"a\"] * 3)          # repetici\xf3n -> ['a', 'a', 'a']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"len()"})})," devuelve cu\xe1ntos elementos contiene la lista."]}),"\n",(0,i.jsxs)(n.li,{children:["El operador ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"in"})})," comprueba si un valor est\xe1 dentro."]}),"\n",(0,i.jsxs)(n.li,{children:["El operador ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"+"})})," une dos listas."]}),"\n",(0,i.jsxs)(n.li,{children:["El operador ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"*"})})," repite la lista varias veces."]}),"\n"]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"7\ufe0f\u20e3-m\xe9todos-m\xe1s-comunes-de-las-listas",children:["7\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"M\xe9todos m\xe1s comunes de las listas"})]}),"\n",(0,i.jsxs)(n.p,{children:["Adem\xe1s de permitir almacenar y acceder a elementos, las listas de Python incluyen una serie de ",(0,i.jsx)(n.strong,{children:"m\xe9todos incorporados"})," que facilitan enormemente su manipulaci\xf3n.\r\nEstos m\xe9todos permiten ",(0,i.jsx)(n.strong,{children:"a\xf1adir, eliminar, buscar, ordenar o copiar"})," elementos sin necesidad de escribir mucho c\xf3digo."]}),"\n",(0,i.jsx)(n.p,{children:"A continuaci\xf3n se estudian uno a uno los m\xe9todos m\xe1s importantes..."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"M\xe9todo"}),(0,i.jsx)(n.th,{children:"Descripci\xf3n"}),(0,i.jsx)(n.th,{children:"Modifica la lista"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"append(x)"})}),(0,i.jsx)(n.td,{children:"A\xf1ade un elemento al final"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"extend(iterable)"})}),(0,i.jsx)(n.td,{children:"A\xf1ade varios elementos"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"insert(i, x)"})}),(0,i.jsxs)(n.td,{children:["Inserta en la posici\xf3n ",(0,i.jsx)(n.code,{children:"i"})]}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"remove(x)"})}),(0,i.jsxs)(n.td,{children:["Elimina la primera aparici\xf3n de ",(0,i.jsx)(n.code,{children:"x"})]}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pop([i])"})}),(0,i.jsxs)(n.td,{children:["Elimina y devuelve el elemento en ",(0,i.jsx)(n.code,{children:"i"})," o el \xfaltimo"]}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clear()"})}),(0,i.jsx)(n.td,{children:"Vac\xeda la lista"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index(x)"})}),(0,i.jsxs)(n.td,{children:["Devuelve la posici\xf3n del primer ",(0,i.jsx)(n.code,{children:"x"})]}),(0,i.jsx)(n.td,{children:"\u274c"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"count(x)"})}),(0,i.jsxs)(n.td,{children:["Cuenta cu\xe1ntas veces aparece ",(0,i.jsx)(n.code,{children:"x"})]}),(0,i.jsx)(n.td,{children:"\u274c"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sort()"})}),(0,i.jsx)(n.td,{children:"Ordena los elementos"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"reverse()"})}),(0,i.jsx)(n.td,{children:"Invierte el orden de los elementos"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"copy()"})}),(0,i.jsx)(n.td,{children:"Devuelve una copia superficial"}),(0,i.jsx)(n.td,{children:"\u274c"})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"-append",children:["\ud83d\udfe9 ",(0,i.jsx)(n.code,{children:"append()"})]}),"\n",(0,i.jsxs)(n.p,{children:["El m\xe9todo ",(0,i.jsx)(n.code,{children:"append()"})," se utiliza para ",(0,i.jsx)(n.strong,{children:"a\xf1adir un solo elemento al final"})," de la lista.\r\nEste m\xe9todo modifica la lista original y no devuelve ning\xfan valor (su resultado es ",(0,i.jsx)(n.code,{children:"None"}),")."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de append()"',children:"frutas = [\"manzana\", \"pera\"]\r\nfrutas.append(\"uva\")\r\nprint(frutas)\r\n\r\n# ['manzana', 'pera', 'uva']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Se a\xf1ade el nuevo elemento ",(0,i.jsx)(n.code,{children:'"uva"'})," al final de la lista.\r\nEl resultado es ",(0,i.jsx)(n.code,{children:"['manzana', 'pera', 'uva']"}),"."]})}),"\n",(0,i.jsxs)(n.h3,{id:"-extend",children:["\ud83d\udfe6 ",(0,i.jsx)(n.code,{children:"extend()"})]}),"\n",(0,i.jsxs)(n.p,{children:["Mientras que ",(0,i.jsx)(n.code,{children:"append()"})," a\xf1ade un solo elemento, ",(0,i.jsx)(n.code,{children:"extend()"})," sirve para ",(0,i.jsx)(n.strong,{children:"a\xf1adir varios elementos de otra colecci\xf3n"})," (como otra lista, tupla o conjunto)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de extend()"',children:"numeros = [1, 2, 3]\r\nnumeros.extend([4, 5, 6])\r\nprint(numeros)      \r\n\r\n# [1, 2, 3, 4, 5, 6]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Cada elemento de la lista ",(0,i.jsx)(n.code,{children:"[4, 5, 6]"})," se a\xf1ade individualmente al final de ",(0,i.jsx)(n.code,{children:"numeros"}),".\r\nEl resultado es ",(0,i.jsx)(n.code,{children:"[1, 2, 3, 4, 5, 6]"}),"."]})}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{children:(0,i.jsx)(n.strong,{children:"Error com\xfan:"})}),(0,i.jsxs)(n.p,{children:["Si usamos ",(0,i.jsx)(n.code,{children:"append([4,5,6])"})," en lugar de ",(0,i.jsx)(n.code,{children:"extend([4,5,6])"}),", se a\xf1ade ",(0,i.jsx)(n.strong,{children:"una lista dentro de la lista"}),", no sus elementos:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"numeros = [1, 2, 3]\r\nnumeros.append([4, 5, 6])\r\nprint(numeros)  \r\n\r\n# [1, 2, 3, [4, 5, 6]]\n"})})]}),"\n",(0,i.jsxs)(n.h3,{id:"-insertposicion-elemento",children:["\ud83d\udfe8 ",(0,i.jsx)(n.code,{children:"insert(posicion, elemento)"})]}),"\n",(0,i.jsxs)(n.p,{children:["Permite ",(0,i.jsx)(n.strong,{children:"insertar un nuevo elemento en una posici\xf3n concreta"})," de la lista.\r\nEl primer par\xe1metro indica el \xedndice donde se colocar\xe1 el elemento, desplazando el resto hacia la derecha."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de insert()"',children:"colores = [\"rojo\", \"verde\", \"azul\"]\r\ncolores.insert(1, \"amarillo\")\r\nprint(colores)\r\n\r\n# ['rojo', 'amarillo', 'verde', 'azul']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["El elemento ",(0,i.jsx)(n.code,{children:'"amarillo"'})," se inserta en la posici\xf3n 1.\r\nEl resultado es ",(0,i.jsx)(n.code,{children:"['rojo', 'amarillo', 'verde', 'azul']"}),"."]})}),"\n",(0,i.jsxs)(n.h3,{id:"-removeelemento",children:["\ud83d\udfe7 ",(0,i.jsx)(n.code,{children:"remove(elemento)"})]}),"\n",(0,i.jsxs)(n.p,{children:["El m\xe9todo ",(0,i.jsx)(n.code,{children:"remove()"})," busca el ",(0,i.jsx)(n.strong,{children:"primer elemento que coincida con el valor indicado"})," y lo elimina.\r\nSi el elemento no existe, se produce un error (",(0,i.jsx)(n.code,{children:"ValueError"}),")."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de remove()"',children:'nombres = ["Ana", "Luis", "Mar\xeda", "Luis"]\r\nnombres.remove("Luis")\r\nprint(nombres)\r\n\r\n# [\'Ana\', \'Mar\xeda\', \'Luis\']\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Solo se elimina la ",(0,i.jsx)(n.strong,{children:"primera aparici\xf3n"})," de ",(0,i.jsx)(n.code,{children:'"Luis"'}),"."]})}),"\n",(0,i.jsxs)(n.admonition,{title:"Consejo",type:"tip",children:[(0,i.jsxs)(n.p,{children:["Antes de usar ",(0,i.jsx)(n.code,{children:"remove()"}),", es recomendable comprobar si el elemento existe:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'if "Pedro" in nombres:\r\n    nombres.remove("Pedro")\n'})})]}),"\n",(0,i.jsxs)(n.h3,{id:"-pop\xedndice",children:["\ud83d\udfe5 ",(0,i.jsx)(n.code,{children:"pop([\xedndice])"})]}),"\n",(0,i.jsxs)(n.p,{children:["El m\xe9todo ",(0,i.jsx)(n.code,{children:"pop()"})," elimina un elemento ",(0,i.jsx)(n.strong,{children:"por su posici\xf3n"})," y adem\xe1s ",(0,i.jsx)(n.strong,{children:"lo devuelve"}),".\r\nSi no se especifica el \xedndice, elimina el ",(0,i.jsx)(n.strong,{children:"\xfaltimo elemento"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de pop() sin \xedndice"',children:'numeros = [10, 20, 30, 40]\r\nultimo = numeros.pop()\r\nprint("Elemento eliminado:", ultimo)\r\nprint("Lista actual:", numeros)\r\n\r\n# Elemento eliminado: 40\r\n# Lista actual: [10, 20, 30]\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"pop()"})," elimina el \xfaltimo valor (40) y lo devuelve."]})}),"\n",(0,i.jsx)(n.p,{children:"Tambi\xe9n se puede usar un \xedndice concreto:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de pop() con \xedndice"',children:"primero = numeros.pop(0)\r\nprint(primero)   # 10\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"-clear",children:["\ud83d\udfea ",(0,i.jsx)(n.code,{children:"clear()"})]}),"\n",(0,i.jsxs)(n.p,{children:["El m\xe9todo ",(0,i.jsx)(n.code,{children:"clear()"})," elimina ",(0,i.jsx)(n.strong,{children:"todos los elementos"})," de la lista, dej\xe1ndola vac\xeda."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de clear()"',children:"datos = [1, 2, 3]\r\ndatos.clear()\r\nprint(datos)   # []\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Despu\xe9s de ejecutar ",(0,i.jsx)(n.code,{children:"clear()"}),", la lista sigue existiendo, pero ya no contiene elementos."]})}),"\n",(0,i.jsxs)(n.h3,{id:"-indexelemento-inicio-fin",children:["\ud83d\udfeb ",(0,i.jsx)(n.code,{children:"index(elemento[, inicio[, fin]])"})]}),"\n",(0,i.jsxs)(n.p,{children:["El m\xe9todo ",(0,i.jsx)(n.code,{children:"index()"})," devuelve el ",(0,i.jsx)(n.strong,{children:"\xedndice del primer elemento"})," que coincida con el valor buscado.\r\nOpcionalmente se puede indicar un rango de b\xfasqueda con los par\xe1metros ",(0,i.jsx)(n.code,{children:"inicio"})," y ",(0,i.jsx)(n.code,{children:"fin"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de index()"',children:'letras = ["a", "b", "c", "a", "b"]\r\npos = letras.index("b")\r\nprint(pos)  # 1\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Devuelve la posici\xf3n del primer ",(0,i.jsx)(n.code,{children:'"b"'}),", que es el \xedndice 1."]})}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsx)(n.p,{children:"Si el valor no se encuentra, se genera un error:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# ValueError: 'x' is not in list\n"})}),(0,i.jsx)(n.p,{children:"Para evitarlo, se puede comprobar antes:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'if "x" in letras:\r\n    pos = letras.index("x")\n'})})]}),"\n",(0,i.jsxs)(n.h3,{id:"-countelemento",children:["\ud83d\udfe9 ",(0,i.jsx)(n.code,{children:"count(elemento)"})]}),"\n",(0,i.jsxs)(n.p,{children:["Este m\xe9todo cuenta ",(0,i.jsx)(n.strong,{children:"cu\xe1ntas veces aparece un elemento"})," dentro de la lista."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de uso de count()"',children:"numeros = [1, 2, 3, 2, 2, 4]\r\nprint(numeros.count(2))   # 3\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Devuelve ",(0,i.jsx)(n.code,{children:"3"})," porque el n\xfamero 2 aparece tres veces."]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"8\ufe0f\u20e3-copia-de-listas",children:["8\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"Copia de listas"})]}),"\n",(0,i.jsxs)(n.p,{children:["Cuando se trabaja con colecciones (listas, tuplas o diccionarios), es importante entender c\xf3mo funcionan las ",(0,i.jsx)(n.strong,{children:"copias"})," de los objetos.\r\nEn Python, ",(0,i.jsx)(n.strong,{children:"asignar una variable a otra no crea una copia"}),", sino que ambas apuntan al ",(0,i.jsx)(n.strong,{children:"mismo objeto en memoria"}),".\r\nPara evitar modificar datos por error, Python ofrece dos formas de copiar: ",(0,i.jsxs)(n.strong,{children:["copias superficiales (",(0,i.jsx)(n.code,{children:"copy"}),")"]})," y ",(0,i.jsxs)(n.strong,{children:["copias profundas (",(0,i.jsx)(n.code,{children:"deepcopy"}),")"]}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"--asignaci\xf3n-simple-sin-copia",children:"\ud83d\udfe9  Asignaci\xf3n simple (sin copia)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de asignaci\xf3n simple"',children:'a = [1, 2, 3]\r\nb = a        # b no es una copia, es la misma lista\r\nb.append(4)\r\nprint("a:", a)\r\nprint("b:", b)\r\n\r\n# a: [1, 2, 3, 4]\r\n# b: [1, 2, 3, 4]\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Tanto ",(0,i.jsx)(n.code,{children:"a"})," como ",(0,i.jsx)(n.code,{children:"b"})," apuntan al mismo objeto en memoria.\r\nModificar uno afecta al otro."]})}),"\n",(0,i.jsxs)(n.h3,{id:"-copia-superficial-copy",children:["\ud83d\udfe6 Copia superficial (",(0,i.jsx)(n.code,{children:"copy()"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Una ",(0,i.jsx)(n.strong,{children:"copia superficial"})," crea un ",(0,i.jsx)(n.strong,{children:"nuevo contenedor"}),", pero ",(0,i.jsx)(n.strong,{children:"no copia los objetos internos"})," (solo sus referencias).\r\nEsto significa que si la lista contiene otras listas u objetos, esos elementos seguir\xe1n comparti\xe9ndose."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de copia superficial con listas anidadas"',children:'\r\noriginal = [[1, 2], [3, 4]]\r\ncopia = original.copy()\r\n\r\ncopia[0][0] = 99\r\n\r\nprint("Original:", original)\r\nprint("Copia:", copia)\r\n\r\n# Original: [[99, 2], [3, 4]]\r\n# Copia: [[99, 2], [3, 4]]\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Aunque ",(0,i.jsx)(n.code,{children:"copia"})," es una lista distinta, ",(0,i.jsx)(n.strong,{children:"las sublistas internas son las mismas"}),".\r\nPor eso, cambiar un elemento interno tambi\xe9n afecta al original."]})}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{children:(0,i.jsx)(n.strong,{children:"Atenci\xf3n:"})}),(0,i.jsxs)(n.p,{children:["Si la lista contiene otras listas dentro, la copia no ser\xe1 totalmente independiente (para eso se necesita una ",(0,i.jsx)(n.strong,{children:"copia profunda"})," usando ",(0,i.jsx)(n.code,{children:"copy.deepcopy()"})," del m\xf3dulo ",(0,i.jsx)(n.code,{children:"copy"}),")."]})]}),"\n",(0,i.jsxs)(n.h3,{id:"-copia-profunda-deepcopy",children:["\ud83d\udfe8 Copia profunda (",(0,i.jsx)(n.code,{children:"deepcopy()"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Una ",(0,i.jsx)(n.strong,{children:"copia profunda"})," crea un nuevo contenedor ",(0,i.jsx)(n.strong,{children:"y tambi\xe9n copias independientes de todos los objetos internos"}),", de forma recursiva.\r\nEsto garantiza que los cambios en la copia no afecten al original."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de copia profunda con listas anidadas"',children:'import copy\r\n\r\noriginal = [[1, 2], [3, 4]]\r\ncopia_profunda = copy.deepcopy(original)\r\n\r\ncopia_profunda[0][0] = 99\r\n\r\nprint("Original:", original)\r\nprint("Copia profunda:", copia_profunda)\r\n\r\n# Original: [[1, 2], [3, 4]]\r\n# Copia profunda: [[99, 2], [3, 4]]\r\n\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"deepcopy()"})," ha creado ",(0,i.jsx)(n.strong,{children:"copias completamente nuevas"})," de las sublistas internas, por lo que los cambios en una no afectan a la otra."]})}),"\n",(0,i.jsx)(n.h3,{id:"-comparativa-r\xe1pida",children:"\ud83d\udcca Comparativa r\xe1pida"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tipo de copia"}),(0,i.jsx)(n.th,{children:"Crea nuevo objeto externo"}),(0,i.jsx)(n.th,{children:"Crea nuevos objetos internos"}),(0,i.jsx)(n.th,{children:"Independencia completa"}),(0,i.jsx)(n.th,{children:"Ejemplo t\xedpico"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["Asignaci\xf3n ",(0,i.jsx)(n.code,{children:"b = a"})]}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Referencia directa"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"copy.copy(a)"})}),(0,i.jsx)(n.td,{children:"\u2705 S\xed"}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Copia \u201csuperficial\u201d"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"copy.deepcopy(a)"})}),(0,i.jsx)(n.td,{children:"\u2705 S\xed"}),(0,i.jsx)(n.td,{children:"\u2705 S\xed"}),(0,i.jsx)(n.td,{children:"\u2705 S\xed"}),(0,i.jsx)(n.td,{children:"Copia totalmente independiente"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"9\ufe0f\u20e3-recorrido-de-listas",children:["9\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"Recorrido de listas"})]}),"\n",(0,i.jsxs)(n.p,{children:["Una de las operaciones m\xe1s comunes que se realizan con listas es ",(0,i.jsx)(n.strong,{children:"recorrer sus elementos uno a uno"}),", lo que se denomina ",(0,i.jsx)(n.strong,{children:"iterar"}),".\r\nIterar significa ejecutar una acci\xf3n repetida para cada elemento de la lista: mostrarlo, modificarlo, aplicar una operaci\xf3n o comprobar una condici\xf3n."]}),"\n",(0,i.jsx)(n.p,{children:"Python ofrece distintas formas de recorrer listas de manera clara y eficiente. En este apartado se estudian todas ellas."}),"\n",(0,i.jsxs)(n.h3,{id:"-recorrido-b\xe1sico-con-el-bucle-for",children:["\ud83d\udfe9 Recorrido b\xe1sico con el bucle ",(0,i.jsx)(n.code,{children:"for"})]}),"\n",(0,i.jsxs)(n.p,{children:["La forma m\xe1s directa de recorrer una lista es utilizando un ",(0,i.jsxs)(n.strong,{children:["bucle ",(0,i.jsx)(n.code,{children:"for"})]}),", que permite acceder ",(0,i.jsx)(n.strong,{children:"a cada elemento directamente"})," sin preocuparse por su posici\xf3n."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"title=\"Ejemplo de uso de 'for' para recorrer listas\"",children:'frutas = ["manzana", "pera", "naranja"]\r\n\r\nfor fruta in frutas:\r\n    print(fruta)\r\n\r\n# manzana\r\n# pera\r\n# naranja\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["El bucle recorre toda la lista ",(0,i.jsx)(n.code,{children:"frutas"})," y, en cada repetici\xf3n, la variable ",(0,i.jsx)(n.code,{children:"fruta"})," toma el valor de uno de los elementos.\r\nEn la primera vuelta vale ",(0,i.jsx)(n.code,{children:'"manzana"'}),", luego ",(0,i.jsx)(n.code,{children:'"pera"'}),", y finalmente ",(0,i.jsx)(n.code,{children:'"naranja"'}),".\r\nCuando ya no quedan m\xe1s elementos, el bucle termina autom\xe1ticamente."]})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Este tipo de recorrido es ideal cuando ",(0,i.jsx)(n.strong,{children:"solo necesitas el valor de cada elemento"})," y no te importa su posici\xf3n en la lista."]}),"\n",(0,i.jsxs)(n.h3,{id:"-recorrido-por-\xedndice-con-range-y-len",children:["\ud83d\udfe6 Recorrido por \xedndice con ",(0,i.jsx)(n.code,{children:"range()"})," y ",(0,i.jsx)(n.code,{children:"len()"})]}),"\n",(0,i.jsxs)(n.p,{children:["En algunas situaciones puede interesar acceder ",(0,i.jsx)(n.strong,{children:"al \xedndice (posici\xf3n)"})," de cada elemento adem\xe1s de su valor.\r\nPara ello, se puede usar la funci\xf3n ",(0,i.jsx)(n.code,{children:"range()"})," junto con ",(0,i.jsx)(n.code,{children:"len()"}),", que devuelve la longitud de la lista."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Recorrido de lista mediante \xedndice"',children:'numeros = [10, 20, 30, 40]\r\n\r\nfor i in range(len(numeros)):\r\n    print(f"\xcdndice {i} -> Valor {numeros[i]}")\r\n\r\n# \xcdndice 0 -> Valor 10\r\n# \xcdndice 1 -> Valor 20\r\n# \xcdndice 2 -> Valor 30\r\n# \xcdndice 3 -> Valor 40\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"len(numeros)"})," devuelve 4, porque la lista tiene cuatro elementos."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"range(len(numeros))"})," genera la secuencia ",(0,i.jsx)(n.code,{children:"[0, 1, 2, 3]"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["En cada iteraci\xf3n, la variable ",(0,i.jsx)(n.code,{children:"i"})," representa el \xedndice actual, y ",(0,i.jsx)(n.code,{children:"numeros[i]"})," el valor correspondiente."]}),"\n"]})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Este m\xe9todo es \xfatil cuando se necesita ",(0,i.jsx)(n.strong,{children:"modificar los valores"})," de la lista mientras se recorren, ya que permite acceder a ellos mediante su posici\xf3n."]}),"\n",(0,i.jsxs)(n.h3,{id:"-recorrido-con-enumerate",children:["\ud83d\udfe8 Recorrido con ",(0,i.jsx)(n.code,{children:"enumerate()"})]}),"\n",(0,i.jsxs)(n.p,{children:["Python ofrece una forma m\xe1s c\xf3moda y legible de obtener ",(0,i.jsx)(n.strong,{children:"\xedndices y valores a la vez"})," mediante la funci\xf3n integrada ",(0,i.jsx)(n.code,{children:"enumerate()"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Uso de enumerate() para recorrer una lista"',children:'animales = ["gato", "perro", "loro"]\r\n\r\nfor indice, animal in enumerate(animales):\r\n    print(f"{indice}: {animal}")\r\n\r\n# 0: gato\r\n# 1: perro\r\n# 2: loro\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enumerate(animales)"})," devuelve pares ",(0,i.jsx)(n.code,{children:"(\xedndice, valor)"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["En la primera iteraci\xf3n, ",(0,i.jsx)(n.code,{children:"indice = 0"})," y ",(0,i.jsx)(n.code,{children:'animal = "gato"'}),", luego ",(0,i.jsx)(n.code,{children:'(1, "perro")'}),", etc."]}),"\n",(0,i.jsxs)(n.li,{children:["Este m\xe9todo es m\xe1s legible y evita errores comunes con ",(0,i.jsx)(n.code,{children:"range(len(...))"}),"."]}),"\n"]})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{children:(0,i.jsx)(n.strong,{children:"Consejo:"})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"enumerate()"})," permite adem\xe1s especificar el n\xfamero desde el que se quiere empezar a contar:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'for i, animal in enumerate(animales, start=1):\r\n    print(f"{i}. {animal}")\n'})}),(0,i.jsx)(n.p,{children:"En este caso, los \xedndices comienzan en 1."})]}),"\n",(0,i.jsxs)(n.h3,{id:"-recorrido-en-paralelo-con-zip",children:["\ud83d\udfe7 Recorrido en paralelo con ",(0,i.jsx)(n.code,{children:"zip()"})]}),"\n",(0,i.jsxs)(n.p,{children:["En ocasiones se necesitan ",(0,i.jsx)(n.strong,{children:"recorrer varias listas al mismo tiempo"}),", tomando un elemento de cada una en cada vuelta del bucle.\r\nPara esto se utiliza la funci\xf3n ",(0,i.jsx)(n.code,{children:"zip()"}),", que \u201cempareja\u201d los elementos de las listas seg\xfan su posici\xf3n."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Uso de zip() para recorrer varias listas"',children:'nombres = ["Ana", "Luis", "Marta"]\r\nedades = [20, 22, 21]\r\n\r\nfor nombre, edad in zip(nombres, edades):\r\n    print(f"{nombre} tiene {edad} a\xf1os")\r\n\r\n# Ana tiene 20 a\xf1os\r\n# Luis tiene 22 a\xf1os\r\n# Marta tiene 21 a\xf1os\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"zip()"})," crea tuplas con un elemento de cada lista.\r\nEn este caso, produce:\r\n",(0,i.jsx)(n.code,{children:'("Ana", 20)'}),", ",(0,i.jsx)(n.code,{children:'("Luis", 22)'})," y ",(0,i.jsx)(n.code,{children:'("Marta", 21)'}),"."]})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Si las listas no tienen la misma longitud, ",(0,i.jsx)(n.code,{children:"zip()"})," se detiene cuando la m\xe1s corta termina."]})}),"\n",(0,i.jsx)(n.h3,{id:"-recorrido-inverso",children:"\ud83d\udfe5 Recorrido inverso"}),"\n",(0,i.jsxs)(n.p,{children:["Tambi\xe9n es posible recorrer una lista ",(0,i.jsx)(n.strong,{children:"desde el \xfaltimo elemento hasta el primero"}),".\r\nPara ello se puede usar slicing inverso ",(0,i.jsx)(n.code,{children:"[::-1]"})," o la funci\xf3n ",(0,i.jsx)(n.code,{children:"reversed()"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Uso de reversed() para recorrido inverso"',children:'dias = ["lunes", "martes", "mi\xe9rcoles"]\r\n\r\nfor dia in reversed(dias):\r\n    print(dia)\r\n\r\n# mi\xe9rcoles\r\n# martes\r\n# lunes\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"reversed(dias)"})," devuelve un iterador que recorre la lista en sentido contrario sin modificarla."]})}),"\n",(0,i.jsx)(n.h3,{id:"-modificar-los-elementos-durante-la-iteraci\xf3n",children:"\ud83d\udfea Modificar los elementos durante la iteraci\xf3n"}),"\n",(0,i.jsxs)(n.p,{children:["Cuando se necesita ",(0,i.jsx)(n.strong,{children:"actualizar los valores"})," de una lista, se debe recorrer por \xedndices, no directamente por los elementos.\r\nDe este modo se puede acceder y reemplazar cada posici\xf3n."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Actualizando valores mediante \xedndice"',children:"numeros = [1, 2, 3, 4, 5]\r\n\r\nfor i in range(len(numeros)):\r\n    numeros[i] = numeros[i] * 2\r\n\r\nprint(numeros) #[2, 4, 6, 8, 10]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsx)(n.p,{children:"Cada elemento se multiplica por 2 y se guarda de nuevo en su posici\xf3n."})}),"\n",(0,i.jsx)(n.h3,{id:"-errores-comunes-al-iterar-listas",children:"\ud83d\udfeb Errores comunes al iterar listas"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Modificar la lista mientras se recorre directamente."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"for n in numeros:\r\n    if n < 0:\r\n        numeros.remove(n)  # \u26a0\ufe0f Puede saltar elementos\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,i.jsx)(n.strong,{children:"Soluci\xf3n:"})," Recorrer una copia (",(0,i.jsx)(n.code,{children:"for n in numeros[:]"}),") o crear una nueva lista con los valores filtrados."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Confundir \xedndices y valores."}),"\r\nRecordar que ",(0,i.jsx)(n.code,{children:"for n in lista"})," itera por los ",(0,i.jsx)(n.strong,{children:"valores"}),", no por las posiciones."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Olvidar que ",(0,i.jsx)(n.code,{children:"zip()"})," se detiene en la lista m\xe1s corta."]})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-tabla-resumen",children:"\ud83d\udcca Tabla resumen"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"M\xe9todo de recorrido"}),(0,i.jsx)(n.th,{children:"Qu\xe9 ofrece"}),(0,i.jsx)(n.th,{children:"Sintaxis b\xe1sica"}),(0,i.jsx)(n.th,{children:"Modifica la lista"}),(0,i.jsx)(n.th,{children:"Ideal cuando\u2026"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"for elemento in lista"})}),(0,i.jsx)(n.td,{children:"Valor de cada elemento"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"for x in lista:"})}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Solo interesa el contenido"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"for i in range(len(lista))"})}),(0,i.jsx)(n.td,{children:"\xcdndices y valores"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"lista[i]"})}),(0,i.jsx)(n.td,{children:"\u2705 Posible"}),(0,i.jsx)(n.td,{children:"Necesitas modificar elementos"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"for i, x in enumerate(lista)"})}),(0,i.jsx)(n.td,{children:"\xcdndice y valor simult\xe1neo"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"enumerate(lista)"})}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Quieres numerar o mostrar posiciones"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"for a, b in zip(lista1, lista2)"})}),(0,i.jsx)(n.td,{children:"Elementos de varias listas en paralelo"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"zip(lista1, lista2)"})}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Combinas datos de varias listas"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"for x in reversed(lista)"})}),(0,i.jsx)(n.td,{children:"Recorre en sentido inverso"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"reversed(lista)"})}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Quieres procesar del final al principio"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["Doble bucle ",(0,i.jsx)(n.code,{children:"for"})]}),(0,i.jsx)(n.td,{children:"Recorre listas anidadas"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"for fila in matriz:"})}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Trabajas con matrices o tablas"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"-ordenaci\xf3n-de-listas",children:["\ud83d\udd1f ",(0,i.jsx)(n.strong,{children:"Ordenaci\xf3n de listas"})]}),"\n",(0,i.jsxs)(n.p,{children:["En Python, las listas pueden ",(0,i.jsx)(n.strong,{children:"reorganizarse"})," gracias a m\xe9todos y funciones integradas como ",(0,i.jsx)(n.code,{children:"sort()"}),", ",(0,i.jsx)(n.code,{children:"sorted()"})," y ",(0,i.jsx)(n.code,{children:"reverse()"}),".\r\nEstos permiten controlar el orden de los elementos y seleccionar solo aquellos que cumplan ciertas condiciones."]}),"\n",(0,i.jsxs)(n.h3,{id:"-sortkeynone-reversefalse",children:["\ud83d\udfe9 ",(0,i.jsx)(n.code,{children:"sort(key=None, reverse=False)"})]}),"\n",(0,i.jsxs)(n.p,{children:["El m\xe9todo ",(0,i.jsx)(n.code,{children:"sort()"})," ordena los elementos ",(0,i.jsx)(n.strong,{children:"en orden ascendente por defecto"}),".\r\nModifica la lista original y no devuelve una nueva lista."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo b\xe1sico de sort()"',children:"notas = [7.5, 3.2, 9.0, 5.8]\r\nnotas.sort()\r\nprint(notas)  # [3.2, 5.8, 7.5, 9.0]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Se puede invertir el orden con el par\xe1metro ",(0,i.jsx)(n.code,{children:"reverse=True"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Orden descendente"',children:"notas.sort(reverse=True)\r\nprint(notas)  # [9.0, 7.5, 5.8, 3.2]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Y se puede usar el par\xe1metro ",(0,i.jsx)(n.code,{children:"key"})," para indicar ",(0,i.jsx)(n.strong,{children:"c\xf3mo comparar"})," los elementos."]}),"\n",(0,i.jsxs)(n.h3,{id:"-reverse",children:["\ud83d\udfe6 ",(0,i.jsx)(n.code,{children:"reverse()"})]}),"\n",(0,i.jsxs)(n.p,{children:["El m\xe9todo ",(0,i.jsx)(n.code,{children:"reverse()"})," invierte los elementos ",(0,i.jsx)(n.strong,{children:"sin realizar una comparaci\xf3n de valores"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de reverse()"',children:"dias = [\"lunes\", \"martes\", \"mi\xe9rcoles\"]\r\ndias.reverse()\r\nprint(dias)  # ['mi\xe9rcoles', 'martes', 'lunes']\n"})}),"\n",(0,i.jsxs)(n.admonition,{title:"reverse con slicing",type:"info",children:[(0,i.jsx)(n.p,{children:"Tambi\xe9n puede obtenerse el mismo efecto usando slicing:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"invertida = dias[::-1]\n"})})]}),"\n",(0,i.jsxs)(n.h3,{id:"-sorted",children:["\ud83d\udfe8 ",(0,i.jsx)(n.code,{children:"sorted()"})]}),"\n",(0,i.jsxs)(n.p,{children:["Si se desea mantener la lista original, puede usarse la funci\xf3n integrada ",(0,i.jsx)(n.code,{children:"sorted()"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Uso de sorted()"',children:'nombres = ["Carlos", "Ana", "Bea"]\r\nordenados = sorted(nombres)\r\nprint("Original:", nombres)\r\nprint("Ordenados:", ordenados)\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"sorted()"})," devuelve una ",(0,i.jsx)(n.strong,{children:"nueva lista ordenada"}),", mientras que sort() modifica la existente."]})}),"\n",(0,i.jsxs)(n.h3,{id:"-criterios-de-ordenaci\xf3n-con-key",children:["\ud83d\udfe7 Criterios de ordenaci\xf3n con ",(0,i.jsx)(n.code,{children:"key"})]}),"\n",(0,i.jsxs)(n.p,{children:["El par\xe1metro ",(0,i.jsx)(n.code,{children:"key"})," del m\xe9todo ",(0,i.jsx)(n.code,{children:"sort()"})," (y tambi\xe9n de ",(0,i.jsx)(n.code,{children:"sorted()"}),") permite ",(0,i.jsx)(n.strong,{children:"indicar una funci\xf3n integrada"})," que transforme cada elemento antes de compararlo.\r\nDe esta forma se pueden aplicar ",(0,i.jsx)(n.strong,{children:"criterios de ordenaci\xf3n personalizados"})," sin necesidad de definir funciones propias."]}),"\n",(0,i.jsxs)(n.h4,{id:"-strlower--ignorar-may\xfasculas-y-min\xfasculas",children:["\ud83d\udd39 ",(0,i.jsx)(n.code,{children:"str.lower"})," \u2014 Ignorar may\xfasculas y min\xfasculas"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ordenar cadenas ignorando may\xfasculas"',children:"palabras = [\"Sol\", \"luna\", \"Estrella\", \"mar\"]\r\npalabras.sort(key=str.lower)\r\nprint(palabras)  # ['Estrella', 'luna', 'mar', 'Sol']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["La funci\xf3n integrada ",(0,i.jsx)(n.code,{children:"str.lower"})," convierte todas las cadenas a min\xfasculas antes de compararlas, evitando que las letras may\xfasculas aparezcan antes en el orden ASCII."]})}),"\n",(0,i.jsxs)(n.h4,{id:"-abs--ordenar-por-valor-absoluto",children:["\ud83d\udd39 ",(0,i.jsx)(n.code,{children:"abs"})," \u2014 Ordenar por valor absoluto"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ordenar n\xfameros por valor absoluto"',children:"numeros = [-5, 3, -2, 8, -1]\r\nnumeros.sort(key=abs)\r\nprint(numeros)  # [-1, -2, 3, -5, 8]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"abs()"})," devuelve el valor absoluto. As\xed, los n\xfameros se ordenan seg\xfan su magnitud, sin importar el signo."]})}),"\n",(0,i.jsxs)(n.h4,{id:"-len--ordenar-por-longitud-de-cadenas-o-listas",children:["\ud83d\udd39 ",(0,i.jsx)(n.code,{children:"len"})," \u2014 Ordenar por longitud de cadenas o listas"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ordenar por longitud"',children:"palabras = [\"luz\", \"estrella\", \"sol\", \"planeta\"]\r\npalabras.sort(key=len)\r\nprint(palabras)  # ['sol', 'luz', 'planeta', 'estrella']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"len()"})," devuelve la longitud de cada elemento. ",(0,i.jsx)(n.strong,{children:"Los m\xe1s cortos aparecen primero"}),"."]})}),"\n",(0,i.jsxs)(n.h4,{id:"-str--convertir-a-cadena-antes-de-ordenar",children:["\ud83d\udd39 ",(0,i.jsx)(n.code,{children:"str"})," \u2014 Convertir a cadena antes de ordenar"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ordenar elementos convertidos a cadena"',children:"valores = [10, 2, 33, 21, 5]\r\nvalores.sort(key=str)\r\nprint(valores)  # [10, 2, 21, 33, 5]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Los n\xfameros se convierten en texto antes de compararse, por lo que se ordenan ",(0,i.jsx)(n.strong,{children:"alfab\xe9ticamente"})," en lugar de num\xe9ricamente."]})}),"\n",(0,i.jsxs)(n.h4,{id:"-int--convertir-cadenas-a-n\xfameros",children:["\ud83d\udd39 ",(0,i.jsx)(n.code,{children:"int"})," \u2014 Convertir cadenas a n\xfameros"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ordenar n\xfameros almacenados como texto"',children:"valores = [\"20\", \"3\", \"100\", \"45\"]\r\nvalores.sort(key=int)\r\nprint(valores)  # ['3', '20', '45', '100']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["La funci\xf3n ",(0,i.jsx)(n.code,{children:"int()"})," transforma las cadenas en enteros antes de compararlas, obteniendo un orden num\xe9rico correcto."]})}),"\n",(0,i.jsxs)(n.h4,{id:"-float--ordenar-textos-con-n\xfameros-decimales",children:["\ud83d\udd39 ",(0,i.jsx)(n.code,{children:"float"})," \u2014 Ordenar textos con n\xfameros decimales"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ordenar n\xfameros decimales en texto"',children:"valores = [\"3.14\", \"2.5\", \"10.0\", \"0.9\"]\r\nvalores.sort(key=float)\r\nprint(valores)  # ['0.9', '2.5', '3.14', '10.0']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsx)(n.p,{children:"Convierte cada cadena a n\xfamero decimal antes de ordenar, garantizando un orden correcto por valor num\xe9rico."})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["El par\xe1metro ",(0,i.jsx)(n.code,{children:"key"})," adquiere una ",(0,i.jsx)(n.strong,{children:"gran utilidad"})," cuando se combina con ",(0,i.jsxs)(n.strong,{children:["funciones ",(0,i.jsx)(n.code,{children:"lambda"})," o funciones personalizadas definidas por el desarrollador"]}),", ya que permiten crear criterios de ordenaci\xf3n m\xe1s complejos.\r\nEstos casos, junto con el ",(0,i.jsx)(n.strong,{children:"filtrado de elementos de secuencias o iterables"}),", se estudiar\xe1n con detalle en la ",(0,i.jsx)(n.strong,{children:"unidad dedicada a las funciones"})," m\xe1s adelante en el curso."]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"1\ufe0f\u20e31\ufe0f\u20e3-listas-anidadas",children:["1\ufe0f\u20e31\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"Listas anidadas"})]}),"\n",(0,i.jsxs)(n.p,{children:["Una lista puede contener otras listas, lo que permite representar ",(0,i.jsx)(n.strong,{children:"estructuras m\xe1s complejas"}),", como tablas o matrices."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de lista bidimensional"',children:"matriz = [[1, 2, 3],\r\n          [4, 5, 6],\r\n          [7, 8, 9]]\r\n\r\nprint(matriz[1][2])  # 6\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsx)(n.p,{children:"Cada fila de la matriz es una lista. El primer \xedndice selecciona la fila y el segundo el elemento dentro de ella."})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"1\ufe0f\u20e32\ufe0f\u20e3-comprensi\xf3n-de-listas",children:["1\ufe0f\u20e32\ufe0f\u20e3 ",(0,i.jsx)(n.strong,{children:"Comprensi\xf3n de listas"})]}),"\n",(0,i.jsxs)(n.p,{children:["Hasta ahora hemos visto c\xf3mo crear y recorrer listas utilizando bucles ",(0,i.jsx)(n.code,{children:"for"}),".\r\nPython, sin embargo, ofrece una forma mucho m\xe1s ",(0,i.jsx)(n.strong,{children:"concisa, r\xe1pida y expresiva"})," de construir listas a partir de otras secuencias: las ",(0,i.jsx)(n.strong,{children:"comprensiones de listas"})," (",(0,i.jsx)(n.em,{children:"list comprehensions"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["Este mecanismo permite generar nuevas listas aplicando ",(0,i.jsx)(n.strong,{children:"transformaciones o filtros"})," sobre los elementos de una secuencia existente, ",(0,i.jsx)(n.strong,{children:"en una sola l\xednea de c\xf3digo"}),", sin renunciar a la claridad."]}),"\n",(0,i.jsx)(n.h3,{id:"-qu\xe9-es-una-comprensi\xf3n-de-lista",children:"\ud83d\udfe9 Qu\xe9 es una comprensi\xf3n de lista"}),"\n",(0,i.jsxs)(n.p,{children:["Una comprensi\xf3n de lista es una ",(0,i.jsx)(n.strong,{children:"expresi\xf3n compacta"})," que combina un bucle ",(0,i.jsx)(n.code,{children:"for"})," (y, opcionalmente, un ",(0,i.jsx)(n.code,{children:"if"}),") dentro de corchetes ",(0,i.jsx)(n.code,{children:"[]"})," para crear listas de manera m\xe1s directa."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="\u270d\ufe0f sintaxis general"',children:"[expresion for elemento in iterable if condicion]\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"expresion"})})," \u2192 indica qu\xe9 valor se a\xf1adir\xe1 a la lista resultante."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"elemento"})})," \u2192 es la variable que toma los valores del iterable (lista, cadena, rango\u2026)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"iterable"})})," \u2192 es la secuencia de datos que se recorre."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"if condicion"})})," \u2192 es opcional; sirve para ",(0,i.jsx)(n.strong,{children:"filtrar"})," los elementos que cumplan cierta condici\xf3n."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-ejemplo-b\xe1sico",children:"\ud83d\udfe6 Ejemplo b\xe1sico"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Creaci\xf3n de un alista mediante list comprehension"',children:"numeros = [1, 2, 3, 4, 5]\r\ncuadrados = [n**2 for n in numeros]\r\nprint(cuadrados)   # [1, 4, 9, 16, 25]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["El bucle recorre la lista ",(0,i.jsx)(n.code,{children:"numeros"})," y eleva al cuadrado cada elemento.\r\nCada resultado se a\xf1ade autom\xe1ticamente a una nueva lista."]})}),"\n",(0,i.jsx)(n.p,{children:"Este c\xf3digo produce el mismo resultado que:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"cuadrados = []\r\nfor n in numeros:\r\n    cuadrados.append(n**2)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Pero en una sola l\xednea, mucho m\xe1s legible."}),"\n",(0,i.jsxs)(n.h3,{id:"-a\xf1adir-una-condici\xf3n-if",children:["\ud83d\udfe8 A\xf1adir una condici\xf3n (",(0,i.jsx)(n.code,{children:"if"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Podemos incluir un filtro para que ",(0,i.jsx)(n.strong,{children:"solo algunos elementos"})," se a\xf1adan a la nueva lista."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Compresi\xf3n de lista con condici\xf3n"',children:"numeros = [3, 8, 1, 6, 5, 2]\r\npares = [n for n in numeros if n % 2 == 0]\r\nprint(pares)\r\n\r\n# [8, 6, 2]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["El ",(0,i.jsx)(n.code,{children:"if"})," hace que solo se a\xf1adan los n\xfameros pares.\r\nEl resto se ignoran, sin necesidad de escribir un ",(0,i.jsx)(n.code,{children:"if"})," completo dentro de un bucle."]})}),"\n",(0,i.jsx)(n.h3,{id:"-usar-una-transformaci\xf3n-y-un-filtro-juntos",children:"\ud83d\udfe7 Usar una transformaci\xf3n y un filtro juntos"}),"\n",(0,i.jsxs)(n.p,{children:["La comprensi\xf3n puede ",(0,i.jsx)(n.strong,{children:"transformar los valores"})," y ",(0,i.jsx)(n.strong,{children:"filtrarlos"})," al mismo tiempo."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="compresi\xf3n de lista mediante transformaci\xf3n y filtrado"',children:"temperaturas = [15, 22, 19, 30, 12, 25]\r\naltas = [t + 1 for t in temperaturas if t >= 20]\r\nprint(altas)\r\n\r\n# [23, 31, 26]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsx)(n.p,{children:"De la lista original se toman solo los valores mayores o iguales que 20, y se les suma 1 antes de a\xf1adirlos a la nueva lista."})}),"\n",(0,i.jsx)(n.h3,{id:"-comprensiones-con-cadenas-de-texto",children:"\ud83d\udfe5 Comprensiones con cadenas de texto"}),"\n",(0,i.jsxs)(n.p,{children:["Las comprensiones no solo sirven para n\xfameros: tambi\xe9n son muy \xfatiles con ",(0,i.jsx)(n.strong,{children:"cadenas de texto"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Compresi\xf3n de una cadena de texto"',children:"palabras = [\"sol\", \"luna\", \"estrella\", \"mar\"]\r\nmayusculas = [p.upper() for p in palabras]\r\nprint(mayusculas)\r\n\r\n# ['SOL', 'LUNA', 'ESTRELLA', 'MAR']\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["Cada palabra se convierte en may\xfasculas mediante el m\xe9todo ",(0,i.jsx)(n.code,{children:".upper()"})," antes de a\xf1adirse a la nueva lista."]})}),"\n",(0,i.jsx)(n.h3,{id:"-comprensiones-anidadas-dobles-bucles",children:"\ud83d\udfea Comprensiones anidadas (dobles bucles)"}),"\n",(0,i.jsxs)(n.p,{children:["Tambi\xe9n es posible incluir ",(0,i.jsxs)(n.strong,{children:["m\xe1s de un bucle ",(0,i.jsx)(n.code,{children:"for"})]})," dentro de una comprensi\xf3n, para combinar elementos de varias secuencias o recorrer estructuras anidadas."]}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,i.jsx)(n.strong,{children:"Ejemplo 1: Producto cartesiano"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"colores = [\"rojo\", \"verde\"]\r\ntallas = [\"S\", \"M\", \"L\"]\r\ncombinaciones = [(c, t) for c in colores for t in tallas]\r\nprint(combinaciones)\r\n\r\n# [('rojo', 'S'), ('rojo', 'M'), ('rojo', 'L'), ('verde', 'S'), ('verde', 'M'), ('verde', 'L')]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsx)(n.p,{children:"Se generan todas las combinaciones posibles entre los colores y las tallas."})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,i.jsx)(n.strong,{children:"Ejemplo 2: Aplanar una lista de listas"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"matriz = [[1, 2, 3], [4, 5], [6]]\r\nplana = [x for fila in matriz for x in fila]\r\nprint(plana)\r\n\r\n# [1, 2, 3, 4, 5, 6]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"explicacion",children:(0,i.jsxs)(n.p,{children:["El primer ",(0,i.jsx)(n.code,{children:"for"})," recorre las filas y el segundo los elementos dentro de cada fila, generando una lista \u201cplana\u201d."]})}),"\n",(0,i.jsx)(n.h3,{id:"-cu\xe1ndo-evitar-las-comprensiones",children:"\ud83d\udfeb Cu\xe1ndo evitar las comprensiones"}),"\n",(0,i.jsx)(n.p,{children:"Aunque son muy \xfatiles, las comprensiones deben usarse con moderaci\xf3n:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u274c Si la expresi\xf3n es muy larga o compleja, es preferible usar un bucle tradicional."}),"\n",(0,i.jsxs)(n.li,{children:["\u274c Si la l\xf3gica requiere varias condiciones anidadas o pasos intermedios, un bucle ",(0,i.jsx)(n.code,{children:"for"})," es m\xe1s legible."]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Utiliza comprensiones para ",(0,i.jsx)(n.strong,{children:"operaciones simples y directas"}),", donde la intenci\xf3n sea clara."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-practica-las-compresiones",children:"\ud83e\udde9 Practica las compresiones"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["La conpresi\xf3n de listas es un recurso muy util pero ",(0,i.jsx)(n.strong,{children:"requiere pr\xe1ctica"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Prueba a realizar estas compresiones y mejora tu habilidad ... ",(0,i.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(4437).A+"",children:(0,i.jsx)(n.strong,{children:"Descarga el archivo para practicar"})})]}),"\n",(0,i.jsxs)(n.p,{children:["Puedes consultar las ",(0,i.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(9252).A+"",children:(0,i.jsx)(n.strong,{children:"soluciones aqu\xed"})})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>o});r(6540);var s=r(4164);const i={tabItem:"tabItem_Ymn6"};var a=r(4848);function o({children:e,hidden:n,className:r}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(i.tabItem,r),hidden:n,children:e})}},1470:(e,n,r)=>{r.d(n,{A:()=>E});var s=r(6540),i=r(4164),a=r(3104),o=r(6347),l=r(205),d=r(7485),c=r(1682),t=r(679);function p(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return p(e).map((({props:{value:e,label:n,attributes:r,default:s}})=>({value:e,label:n,attributes:r,default:s})))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function h({value:e,tabValues:n}){return n.some((n=>n.value===e))}function m({queryString:e=!1,groupId:n}){const r=(0,o.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(i),(0,s.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,a=u(e),[o,d]=(0,s.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[c,p]=m({queryString:r,groupId:i}),[x,j]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,i]=(0,t.Dv)(n);return[r,(0,s.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:i}),g=(()=>{const e=c??x;return h({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{g&&d(g)}),[g]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);d(e),p(e),j(e)}),[p,j,a]),tabValues:a}}var j=r(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(4848);function f({className:e,block:n,selectedValue:r,selectValue:s,tabValues:o}){const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.a_)(),c=e=>{const n=e.currentTarget,i=l.indexOf(n),a=o[i].value;a!==r&&(d(n),s(a))},t=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:o.map((({value:e,label:n,attributes:s})=>(0,v.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{l.push(e)},onKeyDown:t,onClick:c,...s,className:(0,i.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function y({lazy:e,children:n,selectedValue:r}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function b(e){const n=x(e);return(0,v.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,v.jsx)(f,{...n,...e}),(0,v.jsx)(y,{...n,...e})]})}function E(e){const n=(0,j.A)();return(0,v.jsx)(b,{...e,children:p(e.children)},String(n))}},4437:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/files/compresion_listas-ff01b52ec332033bf1ed4fa08d6e1c34.py"},9252:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/files/compresion_listas_solucion-5911ca731c3c0182908577094a0eb834.py"},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);