"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[9435],{4561:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"python/UT5- Funciones y Modularidad/5.2_argumentos_arbitrarios","title":"5.2 Argumentos Arbitrarios","description":"En muchas situaciones no se conoce de antemano cu\xe1ntos valores recibir\xe1 una funci\xf3n.","source":"@site/docs/python/UT5- Funciones y Modularidad/5.2_argumentos_arbitrarios.md","sourceDirName":"python/UT5- Funciones y Modularidad","slug":"/python/UT5- Funciones y Modularidad/5.2_argumentos_arbitrarios","permalink":"/docs/python/UT5- Funciones y Modularidad/5.2_argumentos_arbitrarios","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"pythonSidebar","previous":{"title":"5.1 Funciones y par\xe1metros","permalink":"/docs/python/UT5- Funciones y Modularidad/5.1_funciones"},"next":{"title":"5.3 Funciones An\xf3nimas","permalink":"/docs/python/UT5- Funciones y Modularidad/5.3_lambdas"}}');var s=r(4848),o=r(8453);const i={sidebar_position:2},c="5.2 Argumentos Arbitrarios",d={},l=[{value:"1\ufe0f\u20e3 <strong>Argumentos posicionales arbitrarios (<code>*args</code>)</strong>",id:"1\ufe0f\u20e3-argumentos-posicionales-arbitrarios-args",level:2},{value:"Sintaxis general",id:"sintaxis-general",level:4},{value:"Ejemplo pr\xe1ctico: concatenar cadenas",id:"ejemplo-pr\xe1ctico-concatenar-cadenas",level:4},{value:"2\ufe0f\u20e3 <strong>Argumentos con nombre arbitrarios (<code>**kwargs</code>)</strong>",id:"2\ufe0f\u20e3-argumentos-con-nombre-arbitrarios-kwargs",level:2},{value:"Sintaxis general",id:"sintaxis-general-1",level:4},{value:"Ejemplo pr\xe1ctico",id:"ejemplo-pr\xe1ctico",level:4},{value:"3\ufe0f\u20e3 <strong>Combinaci\xf3n de <code>*args</code> y <code>**kwargs</code></strong>",id:"3\ufe0f\u20e3-combinaci\xf3n-de-args-y-kwargs",level:2},{value:"Ejemplo general",id:"ejemplo-general",level:4},{value:"Ejemplo pr\xe1ctico",id:"ejemplo-pr\xe1ctico-1",level:4},{value:"4\ufe0f\u20e3 Desempaquetado de colecciones",id:"4\ufe0f\u20e3-desempaquetado-de-colecciones",level:2},{value:"\ud83d\udfe9 Desempaquetado de listas o tuplas",id:"-desempaquetado-de-listas-o-tuplas",level:3},{value:"\ud83d\udfe6 Desempaquetado de diccionarios",id:"-desempaquetado-de-diccionarios",level:3},{value:"5\ufe0f\u20e3 <strong>Aplicaciones pr\xe1cticas</strong>",id:"5\ufe0f\u20e3-aplicaciones-pr\xe1cticas",level:2},{value:"\ud83d\udfe9 Procesamiento de operaciones variables",id:"-procesamiento-de-operaciones-variables",level:3},{value:"\ud83d\udfe6 Construcci\xf3n din\xe1mica de mensajes",id:"-construcci\xf3n-din\xe1mica-de-mensajes",level:3},{value:"\ud83d\udcca <strong>Tabla resumen</strong>",id:"-tabla-resumen",level:2}];function t(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"52-argumentos-arbitrarios",children:"5.2 Argumentos Arbitrarios"})}),"\n",(0,s.jsxs)(n.p,{children:["En muchas situaciones no se conoce de antemano cu\xe1ntos valores recibir\xe1 una funci\xf3n.",(0,s.jsx)(n.br,{}),"\n","Para estos casos, Python permite definir funciones que acepten un n\xfamero ",(0,s.jsx)(n.strong,{children:"variable"})," de argumentos, tanto ",(0,s.jsx)(n.strong,{children:"posicionales"})," como ",(0,s.jsx)(n.strong,{children:"con nombre"}),".",(0,s.jsx)(n.br,{}),"\n","Esto se logra mediante los operadores ",(0,s.jsx)(n.code,{children:"*"})," y ",(0,s.jsx)(n.code,{children:"**"}),", conocidos respectivamente como ",(0,s.jsx)(n.code,{children:"*args"})," y ",(0,s.jsx)(n.code,{children:"**kwargs"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Gracias a ellos, una funci\xf3n puede adaptarse a diferentes contextos sin necesidad de definir cada par\xe1metro de forma expl\xedcita."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"1\ufe0f\u20e3-argumentos-posicionales-arbitrarios-args",children:["1\ufe0f\u20e3 ",(0,s.jsxs)(n.strong,{children:["Argumentos posicionales arbitrarios (",(0,s.jsx)(n.code,{children:"*args"}),")"]})]}),"\n",(0,s.jsxs)(n.p,{children:["Cuando se antepone un asterisco ",(0,s.jsx)(n.code,{children:"*"})," a un par\xe1metro, Python agrupa todos los argumentos posicionales recibidos en una ",(0,s.jsx)(n.strong,{children:"tupla"}),".",(0,s.jsx)(n.br,{}),"\n","Esto permite que la funci\xf3n acepte una cantidad indefinida de valores."]}),"\n",(0,s.jsx)(n.h4,{id:"sintaxis-general",children:"Sintaxis general"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="\u270d\ufe0f Definici\xf3n de una funci\xf3n con *args"',children:'def sumar_todo(*numeros):\r\n    """Suma todos los valores pasados como argumentos."""\r\n    total = 0\r\n    for n in numeros:\r\n        total += n\r\n    return total\r\n\r\nprint(sumar_todo(3, 5, 9))\r\nprint(sumar_todo(10, 20, 30, 40))\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"explicacion",children:[(0,s.jsxs)(n.p,{children:["El par\xe1metro ",(0,s.jsx)(n.code,{children:"*numeros"})," recoge todos los argumentos que se pasen al llamar la funci\xf3n.\r\nEstos se almacenan en una tupla."]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["En el primer ejemplo, ",(0,s.jsx)(n.code,{children:"numeros = (3, 5, 9)"})," y el resultado ser\xe1 la suma de esos tres valores (",(0,s.jsx)(n.code,{children:"17"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["En el segundo, ",(0,s.jsx)(n.code,{children:"numeros = (10, 20, 30, 40)"})," y el resultado es ",(0,s.jsx)(n.code,{children:"100"}),"."]}),"\n"]})]}),"\n",(0,s.jsx)(n.h4,{id:"ejemplo-pr\xe1ctico-concatenar-cadenas",children:"Ejemplo pr\xe1ctico: concatenar cadenas"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Uso de *args para concatenar cadenas"',children:'def concatenar(*palabras):\r\n    """Une todas las palabras en una sola cadena separada por espacios."""\r\n    resultado = " ".join(palabras)\r\n    return resultado\r\n\r\nprint(concatenar("Hola", "mundo"))\r\nprint(concatenar("Python", "es", "genial"))\n'})}),"\n",(0,s.jsxs)(n.admonition,{title:"Uso combinado con par\xe1metros fijos",type:"info",children:[(0,s.jsxs)(n.p,{children:["Una funci\xf3n puede tener par\xe1metros fijos y adem\xe1s un conjunto de argumentos arbitrarios.\r\nLos par\xe1metros definidos al principio se asignan primero, y los restantes se agrupan en la tupla ",(0,s.jsx)(n.code,{children:"*args"}),"."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Combinaci\xf3n de par\xe1metros fijos y *args"',children:'def mostrar_info(nombre, *hobbies):\r\n    """Muestra el nombre y la lista de aficiones de una persona."""\r\n    print(f"Nombre: {nombre}")\r\n    for h in hobbies:\r\n        print(f" - {h}")\r\n\r\nmostrar_info("Laura", "leer", "correr", "viajar")\n'})}),(0,s.jsx)(n.admonition,{type:"explicacion",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["El primer argumento (",(0,s.jsx)(n.code,{children:'"Laura"'}),") se asigna al par\xe1metro fijo ",(0,s.jsx)(n.code,{children:"nombre"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Los dem\xe1s (",(0,s.jsx)(n.code,{children:'"leer"'}),", ",(0,s.jsx)(n.code,{children:'"correr"'}),", ",(0,s.jsx)(n.code,{children:'"viajar"'}),") se agrupan en la tupla ",(0,s.jsx)(n.code,{children:"hobbies"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["La funci\xf3n recorre esa tupla con un bucle ",(0,s.jsx)(n.code,{children:"for"})," y muestra cada afici\xf3n."]}),"\n"]})})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"2\ufe0f\u20e3-argumentos-con-nombre-arbitrarios-kwargs",children:["2\ufe0f\u20e3 ",(0,s.jsxs)(n.strong,{children:["Argumentos con nombre arbitrarios (",(0,s.jsx)(n.code,{children:"**kwargs"}),")"]})]}),"\n",(0,s.jsxs)(n.p,{children:["Cuando se anteponen dos asteriscos ",(0,s.jsx)(n.code,{children:"**"})," a un par\xe1metro, Python agrupa todos los ",(0,s.jsx)(n.strong,{children:"argumentos con nombre"})," en un ",(0,s.jsx)(n.strong,{children:"diccionario"}),".\r\nCada par clave-valor representa el nombre del argumento y su valor asociado."]}),"\n",(0,s.jsx)(n.h4,{id:"sintaxis-general-1",children:"Sintaxis general"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="\u270d\ufe0f Definici\xf3n de una funci\xf3n con **kwargs"',children:'def mostrar_datos(**info):\r\n    """Muestra los pares clave:valor recibidos."""\r\n    for clave, valor in info.items():\r\n        print(f"{clave}: {valor}")\r\n\r\nmostrar_datos(nombre="Ana", edad=25, ciudad="Madrid")\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"explicacion",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Todos los argumentos con nombre (",(0,s.jsx)(n.code,{children:"nombre"}),", ",(0,s.jsx)(n.code,{children:"edad"}),", ",(0,s.jsx)(n.code,{children:"ciudad"}),") se almacenan dentro del diccionario ",(0,s.jsx)(n.code,{children:"info"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Por tanto, ",(0,s.jsx)(n.code,{children:"info = {'nombre': 'Ana', 'edad': 25, 'ciudad': 'Madrid'}"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["El m\xe9todo ",(0,s.jsx)(n.code,{children:".items()"})," permite recorrer las claves y sus valores para mostrarlos uno a uno."]}),"\n"]})}),"\n",(0,s.jsx)(n.h4,{id:"ejemplo-pr\xe1ctico",children:"Ejemplo pr\xe1ctico"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Uso de **kwargs para formatear texto"',children:'def perfil_usuario(**datos):\r\n    """Devuelve una descripci\xf3n a partir de la informaci\xf3n del usuario."""\r\n    nombre = datos["nombre"]\r\n    edad = datos["edad"]\r\n    ciudad = datos.get("ciudad", "Ciudad no especificada")\r\n    return f"{nombre} ({edad} a\xf1os) - {ciudad}"\r\n\r\nprint(perfil_usuario(nombre="Carlos", edad=30))\r\nprint(perfil_usuario(nombre="Luc\xeda", edad=22, ciudad="Sevilla"))\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"explicacion",children:[(0,s.jsxs)(n.p,{children:["La funci\xf3n ",(0,s.jsx)(n.code,{children:"perfil_usuario()"})," toma cualquier conjunto de datos con nombre."]}),(0,s.jsxs)(n.p,{children:["Usa las claves ",(0,s.jsx)(n.code,{children:"nombre"})," y ",(0,s.jsx)(n.code,{children:"edad"}),", y accede a ",(0,s.jsx)(n.code,{children:"ciudad"})," con ",(0,s.jsx)(n.code,{children:".get()"})," para ofrecer un valor alternativo si no existe."]}),(0,s.jsx)(n.p,{children:"De esta manera se genera una descripci\xf3n flexible del usuario."})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"3\ufe0f\u20e3-combinaci\xf3n-de-args-y-kwargs",children:["3\ufe0f\u20e3 ",(0,s.jsxs)(n.strong,{children:["Combinaci\xf3n de ",(0,s.jsx)(n.code,{children:"*args"})," y ",(0,s.jsx)(n.code,{children:"**kwargs"})]})]}),"\n",(0,s.jsx)(n.p,{children:"Ambos mecanismos pueden combinarse en una misma funci\xf3n.\r\nEsto permite recibir simult\xe1neamente argumentos posicionales arbitrarios y con nombre."}),"\n",(0,s.jsx)(n.h4,{id:"ejemplo-general",children:"Ejemplo general"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Combinaci\xf3n de *args y **kwargs"',children:'def resumen(*args, **kwargs):\r\n    """Muestra todos los argumentos recibidos, tanto posicionales como con nombre."""\r\n    print("Argumentos posicionales:", args)\r\n    print("Argumentos con nombre:", kwargs)\r\n\r\nresumen(10, 20, 30, nombre="Ana", edad=25)\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"explicacion",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"args"})," almacena los valores posicionales en una tupla: ",(0,s.jsx)(n.code,{children:"(10, 20, 30)"}),".\r\n",(0,s.jsx)(n.code,{children:"kwargs"})," almacena los pares con nombre en un diccionario: ",(0,s.jsx)(n.code,{children:"{'nombre': 'Ana', 'edad': 25}"}),".\r\nEsta t\xe9cnica hace que la funci\xf3n sea muy flexible."]})}),"\n",(0,s.jsxs)(n.admonition,{title:"Orden correcto de los par\xe1metros",type:"info",children:[(0,s.jsx)(n.p,{children:"El orden de los distintos tipos de par\xe1metros en una definici\xf3n debe seguir una secuencia espec\xedfica."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Orden recomendado de par\xe1metros"',children:'def ejemplo(a, b, *args, clave1, clave2="X", **kwargs):\r\n    pass\n'})}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Par\xe1metros posicionales normales (",(0,s.jsx)(n.code,{children:"a"}),", ",(0,s.jsx)(n.code,{children:"b"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Argumentos posicionales arbitrarios (",(0,s.jsx)(n.code,{children:"*args"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Par\xe1metros con nombre obligatorios (",(0,s.jsx)(n.code,{children:"clave1"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Par\xe1metros con nombre con valor por defecto (",(0,s.jsx)(n.code,{children:'clave2="X"'}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Argumentos con nombre arbitrarios (",(0,s.jsx)(n.code,{children:"**kwargs"}),")"]}),"\n"]}),(0,s.jsx)(n.p,{children:"Este orden evita errores en la asignaci\xf3n de argumentos durante la llamada."})]}),"\n",(0,s.jsx)(n.h4,{id:"ejemplo-pr\xe1ctico-1",children:"Ejemplo pr\xe1ctico"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Funci\xf3n con todo tipo de par\xe1metros"',children:'def registrar_evento(usuario, *acciones, nivel="INFO", **detalles):\r\n    """Registra informaci\xf3n sobre una acci\xf3n realizada por un usuario."""\r\n    print(f"Usuario: {usuario}")\r\n    print(f"Nivel: {nivel}")\r\n    print("Acciones:")\r\n    for accion in acciones:\r\n        print(f" - {accion}")\r\n    print("Detalles adicionales:")\r\n    for clave, valor in detalles.items():\r\n        print(f"   {clave}: {valor}")\r\n\r\nregistrar_evento("admin", "login", "borrar_datos", nivel="ALERTA", ip="192.168.1.2", hora="12:45")\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"explicacion",children:[(0,s.jsx)(n.p,{children:"Esta funci\xf3n combina todos los tipos de argumentos posibles:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"usuario"})," es un par\xe1metro fijo."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"*acciones"})," agrupa las operaciones realizadas por el usuario."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nivel"})," tiene un valor por defecto."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"**detalles"})," almacena la informaci\xf3n adicional, como la IP o la hora."]}),"\n"]}),(0,s.jsx)(n.p,{children:"El resultado muestra toda la informaci\xf3n de manera ordenada."})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4\ufe0f\u20e3-desempaquetado-de-colecciones",children:"4\ufe0f\u20e3 Desempaquetado de colecciones"}),"\n",(0,s.jsxs)(n.p,{children:["Python permite utilizar los operadores ",(0,s.jsx)(n.code,{children:"*"})," y ",(0,s.jsx)(n.code,{children:"**"})," tambi\xe9n ",(0,s.jsx)(n.strong,{children:"al llamar"})," a una funci\xf3n.\r\nEn este caso, sirven para ",(0,s.jsx)(n.strong,{children:"desempaquetar"})," una lista, tupla o diccionario y pasar sus elementos como argumentos individuales."]}),"\n",(0,s.jsx)(n.h3,{id:"-desempaquetado-de-listas-o-tuplas",children:"\ud83d\udfe9 Desempaquetado de listas o tuplas"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Desempaquetado con * en la llamada"',children:'def multiplicar(a, b, c):\r\n    """Multiplica tres valores."""\r\n    return a * b * c\r\n\r\nvalores = (2, 3, 4)\r\nprint(multiplicar(*valores))  # 24\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"explicacion",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["El operador ",(0,s.jsx)(n.code,{children:"*"})," en la llamada expande la tupla ",(0,s.jsx)(n.code,{children:"(2, 3, 4)"})," en tres argumentos posicionales."]}),"\n",(0,s.jsxs)(n.li,{children:["La funci\xf3n recibe los valores como si se hubiera escrito directamente ",(0,s.jsx)(n.code,{children:"multiplicar(2, 3, 4)"}),"."]}),"\n"]})}),"\n",(0,s.jsx)(n.h3,{id:"-desempaquetado-de-diccionarios",children:"\ud83d\udfe6 Desempaquetado de diccionarios"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Desempaquetado con ** en la llamada"',children:'def mostrar_persona(nombre, edad, ciudad):\r\n    """Muestra los datos de una persona."""\r\n    print(f"{nombre} ({edad}) - {ciudad}")\r\n\r\ndatos = {"nombre": "Laura", "edad": 29, "ciudad": "Madrid"}\r\nmostrar_persona(**datos)\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"explicacion",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["El operador ",(0,s.jsx)(n.code,{children:"**"})," desempaqueta el diccionario ",(0,s.jsx)(n.code,{children:"datos"})," y pasa cada par clave",":valor"," como argumento con nombre."]}),"\n",(0,s.jsxs)(n.li,{children:["Esto equivale exactamente a escribir ",(0,s.jsx)(n.code,{children:'mostrar_persona(nombre="Laura", edad=29, ciudad="Madrid")'}),"."]}),"\n"]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"5\ufe0f\u20e3-aplicaciones-pr\xe1cticas",children:["5\ufe0f\u20e3 ",(0,s.jsx)(n.strong,{children:"Aplicaciones pr\xe1cticas"})]}),"\n",(0,s.jsx)(n.h3,{id:"-procesamiento-de-operaciones-variables",children:"\ud83d\udfe9 Procesamiento de operaciones variables"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de *args para c\xe1lculos"',children:'def producto_total(*numeros):\r\n    """Calcula el producto de todos los n\xfameros proporcionados."""\r\n    resultado = 1\r\n    for n in numeros:\r\n        resultado *= n\r\n    return resultado\r\n\r\nprint(producto_total(2, 3))\r\nprint(producto_total(1, 2, 3, 4, 5))\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"explicacion",children:(0,s.jsxs)(n.p,{children:["El par\xe1metro ",(0,s.jsx)(n.code,{children:"*numeros"})," permite multiplicar cualquier cantidad de valores.\r\nEn la primera llamada se calculan ",(0,s.jsx)(n.code,{children:"2 * 3 = 6"}),", y en la segunda ",(0,s.jsx)(n.code,{children:"1 * 2 * 3 * 4 * 5 = 120"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"-construcci\xf3n-din\xe1mica-de-mensajes",children:"\ud83d\udfe6 Construcci\xf3n din\xe1mica de mensajes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de construcci\xf3n de mensajes con **kwargs"',children:'def construir_mensaje(**partes):\r\n    """Construye un mensaje a partir de pares clave:valor."""\r\n    mensaje = []\r\n    for clave, valor in partes.items():\r\n        mensaje.append(f"{clave.upper()}: {valor}")\r\n    return " | ".join(mensaje)\r\n\r\nprint(construir_mensaje(usuario="admin", estado="activo", rol="supervisor"))\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"explicacion",children:(0,s.jsxs)(n.p,{children:["Cada par ",(0,s.jsx)(n.code,{children:"clave:valor"})," se convierte en texto, y luego se unen todos con ",(0,s.jsx)(n.code,{children:'" | "'}),".\r\nEs \xfatil para generar cadenas din\xe1micas y bien formateadas."]})}),"\n",(0,s.jsxs)(n.h2,{id:"-tabla-resumen",children:["\ud83d\udcca ",(0,s.jsx)(n.strong,{children:"Tabla resumen"})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Tipo de argumento"}),(0,s.jsx)(n.th,{children:"S\xedmbolo"}),(0,s.jsx)(n.th,{children:"Tipo de datos que recibe"}),(0,s.jsx)(n.th,{children:"Forma de acceso"}),(0,s.jsx)(n.th,{children:"Ejemplo"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Posicional arbitrario"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"*args"})}),(0,s.jsx)(n.td,{children:"Tupla de valores"}),(0,s.jsx)(n.td,{children:"Iteraci\xf3n directa"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"for n in args:"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Con nombre arbitrario"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"**kwargs"})}),(0,s.jsxs)(n.td,{children:["Diccionario clave",":valor"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:".items()"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"for k,v in kwargs.items():"})})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Los argumentos arbitrarios (",(0,s.jsx)(n.code,{children:"*args"}),", ",(0,s.jsx)(n.code,{children:"**kwargs"}),") permiten crear ",(0,s.jsx)(n.strong,{children:"funciones m\xe1s vers\xe1tiles y adaptables"}),", capaces de recibir cualquier n\xfamero y tipo de par\xe1metros sin perder legibilidad ni control."]}),"\n",(0,s.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var a=r(6540);const s={},o=a.createContext(s);function i(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);