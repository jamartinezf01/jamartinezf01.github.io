"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[1219],{5269:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"lenguajes-de-marcas/5 Validaci\xf3n XML/index","title":"UT5 - Validaci\xf3n XML","description":"Cuando hablamos de XML (eXtensible Markup Language), a menudo se recalca la necesidad de que los documentos sean \u201cbien formados\u201d. Sin embargo, para entornos donde es imprescindible que todos los ficheros sigan las mismas reglas (por ejemplo, un cat\xe1logo de videojuegos, una lista de canciones o una aplicaci\xf3n que maneje informaci\xf3n de redes sociales, un programa de n\xf3minas), no basta con que el XML est\xe9 \u201cbien formado\u201d; adem\xe1s, se necesita que sea v\xe1lido.","source":"@site/docs/lenguajes-de-marcas/5 Validaci\xf3n XML/index.md","sourceDirName":"lenguajes-de-marcas/5 Validaci\xf3n XML","slug":"/lenguajes-de-marcas/5 Validaci\xf3n XML/","permalink":"/docs/lenguajes-de-marcas/5 Validaci\xf3n XML/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"llmmSidebar","previous":{"title":"4.5 Ejemplo de Caso Pr\xe1ctico","permalink":"/docs/lenguajes-de-marcas/4 XML Conceptos B\xe1sicos/4.6 Ejemplo caso practico"},"next":{"title":"5.1 DTD","permalink":"/docs/lenguajes-de-marcas/5 Validaci\xf3n XML/DTD/"}}');var r=s(4848),i=s(8453);const o={},d="UT5 - Validaci\xf3n XML",l={},c=[{value:"<strong>Bien formados vs. V\xe1lidos</strong> \u2696\ufe0f",id:"bien-formados-vs-v\xe1lidos-\ufe0f",level:2},{value:"<strong>T\xe9cnicas de Validaci\xf3n M\xe1s Comunes</strong>",id:"t\xe9cnicas-de-validaci\xf3n-m\xe1s-comunes",level:2},{value:"DTD (Document Type Definition)",id:"dtd-document-type-definition",level:3},{value:"Ejemplo simple de DTD",id:"ejemplo-simple-de-dtd",level:4},{value:"XSD (XML Schema Definition)",id:"xsd-xml-schema-definition",level:3},{value:"Ejemplo simple de XSD",id:"ejemplo-simple-de-xsd",level:4}];function t(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ut5---validaci\xf3n-xml",children:"UT5 - Validaci\xf3n XML"})}),"\n",(0,r.jsxs)(n.p,{children:["Cuando hablamos de ",(0,r.jsx)(n.strong,{children:"XML"})," (eXtensible Markup Language), a menudo se recalca la necesidad de que los documentos sean \u201cbien formados\u201d. Sin embargo, para entornos donde es imprescindible que todos los ficheros sigan las mismas reglas (por ejemplo, un cat\xe1logo de videojuegos, una lista de canciones o una aplicaci\xf3n que maneje informaci\xf3n de redes sociales, un programa de n\xf3minas), no basta con que el XML est\xe9 \u201cbien formado\u201d; adem\xe1s, se necesita que sea ",(0,r.jsx)(n.strong,{children:"v\xe1lido"}),"."]}),"\n",(0,r.jsxs)(n.h2,{id:"bien-formados-vs-v\xe1lidos-\ufe0f",children:[(0,r.jsx)(n.strong,{children:"Bien formados vs. V\xe1lidos"})," \u2696\ufe0f"]}),"\n",(0,r.jsxs)(n.p,{children:["Un documento ",(0,r.jsx)(n.strong,{children:"XML bien formado"})," cumple las reglas b\xe1sicas de sintaxis de XML. Ya vimos estas normas en la anterior unidad, un solo elemento raiz, Cada elemento debe tener una etiqueta de apertura y su correspondiente etiqueta de cierre, Las etiquetas deben anidarse correctamente, etc..."]}),"\n",(0,r.jsxs)(n.p,{children:["Cumplir estos puntos garantiza que nuestro XML puede ser procesado por un ",(0,r.jsx)(n.strong,{children:"parser"})," est\xe1ndar sin errores de sintaxis. Por ejemplo, si dise\xf1amos un XML con nuestra lista de videojuegos favoritos, mientras cada etiqueta abra y cierre bien y no se solapen, el archivo se considerar\xe1 bien formado."]}),"\n",(0,r.jsxs)(n.p,{children:["Sin embargo, un documento ",(0,r.jsx)(n.strong,{children:"XML v\xe1lido"}),", adem\xe1s de estar bien formado, ",(0,r.jsx)(n.strong,{children:"sigue unas reglas de estructura y contenido"})," definidas en un documento externo (o interno) llamado \u201cdocumento de validaci\xf3n\u201d. Dicho documento de validaci\xf3n describe c\xf3mo deben ser los elementos y atributos, cu\xe1ntas veces deben aparecer, e incluso qu\xe9 tipo de datos puede llevar cada uno."]}),"\n",(0,r.jsxs)(n.p,{children:["Por ejemplo, si estamos intercambiando informaci\xf3n sobre torneos de e-sports y queremos asegurarnos de que cada partida incluya siempre un \u201cnombre de jugador\u201d y un \u201cpuntuaci\xf3n\u201d, podemos elaborar nuestras propias reglas. Un documento XML ser\xe1 v\xe1lido si ",(0,r.jsx)(n.strong,{children:"obedece"})," esas reglas al pie de la letra."]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:[(0,r.jsx)(n.strong,{children:"Ventajas clave de la validaci\xf3n"}),":"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistencia"}),": Hace que todos los documentos sigan el mismo \u201cformato l\xf3gico\u201d y sea m\xe1s f\xe1cil procesarlos o integrarlos en una base de datos."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Calidad de datos"}),": Se evitan errores, como olvidar un campo obligatorio o introducir un dato incorrecto."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interoperabilidad"}),": Si trabajas en equipo o interaccionas con otras aplicaciones, la validaci\xf3n asegura que todos entiendan y manejen el XML de igual modo."]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"t\xe9cnicas-de-validaci\xf3n-m\xe1s-comunes",children:(0,r.jsx)(n.strong,{children:"T\xe9cnicas de Validaci\xf3n M\xe1s Comunes"})}),"\n",(0,r.jsx)(n.p,{children:"Para definir el conjunto de reglas que debe cumplir un documento XML, existen diferentes t\xe9cnicas. Las dos m\xe1s populares (y las que ver\xe9is habitualmente) son:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"DTD (Document Type Definition)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"XSD (XML Schema Definition)"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Existen otras tecnolog\xedas para validar documentos XML como ",(0,r.jsx)(n.strong,{children:"Relax NG"})," o ",(0,r.jsx)(n.strong,{children:"Schematron"}),", pero nos nos centraremos en ",(0,r.jsx)(n.strong,{children:"DTD y XSD"})," ya que son las que cuentan con mayor soporte en herramientas actuales."]}),"\n",(0,r.jsx)(n.h3,{id:"dtd-document-type-definition",children:"DTD (Document Type Definition)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Origen"}),": Procede del est\xe1ndar SGML."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Caracter\xedsticas"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Define la estructura y los atributos de forma textual (pero con una sintaxis diferente a la de XML)."}),"\n",(0,r.jsx)(n.li,{children:"Es m\xe1s \u201cantiguo\u201d y no ofrece tipado de datos tan espec\xedfico como XSD (por ejemplo, no diferencia entre n\xfameros y texto)."}),"\n",(0,r.jsx)(n.li,{children:"Aun as\xed, es muy \xfatil para definir la estructura b\xe1sica de un documento XML de manera r\xe1pida."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"ejemplo-simple-de-dtd",children:"Ejemplo simple de DTD"}),"\n",(0,r.jsxs)(n.p,{children:["Imaginemos un ",(0,r.jsx)(n.strong,{children:"DTD interno"})," para un XML que lista nuestros streamers favoritos de una plataforma de streaming:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\r\n<!DOCTYPE streamers [\r\n    <!ELEMENT streamers (streamer+)>\r\n    <!ELEMENT streamer (nickname, seguidores)>\r\n    <!ELEMENT nickname (#PCDATA)>\r\n    <!ELEMENT seguidores (#PCDATA)>\r\n]>\r\n<streamers>\r\n    <streamer>\r\n        <nickname>GamerPro</nickname>\r\n        <seguidores>50000</seguidores>\r\n    </streamer>\r\n    <streamer>\r\n        <nickname>MusicMania</nickname>\r\n        <seguidores>120000</seguidores>\r\n    </streamer>\r\n</streamers>\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<!ELEMENT streamers (streamer+)>"})," indica que el elemento ra\xedz ",(0,r.jsx)(n.code,{children:"streamers"})," contiene uno o m\xe1s elementos ",(0,r.jsx)(n.code,{children:"streamer"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"streamer"})," tendr\xe1 ",(0,r.jsx)(n.code,{children:"nickname"})," y ",(0,r.jsx)(n.code,{children:"seguidores"})," siempre en ese orden."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"xsd-xml-schema-definition",children:"XSD (XML Schema Definition)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Origen"}),": Desarrollado por el W3C para superar las limitaciones de DTD."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Caracter\xedsticas"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Utiliza la misma sintaxis de XML."}),"\n",(0,r.jsx)(n.li,{children:"Ofrece tipado de datos (n\xfameros, fechas, booleanos\u2026), lo que facilita la validaci\xf3n de campos."}),"\n",(0,r.jsx)(n.li,{children:"Es m\xe1s flexible y se considera la opci\xf3n recomendada en la mayor\xeda de proyectos actuales."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"ejemplo-simple-de-xsd",children:"Ejemplo simple de XSD"}),"\n",(0,r.jsx)(n.p,{children:"Si queremos controlar tipos de datos (por ejemplo, que el n\xfamero de seguidores sea un entero), podemos crear un XSD como:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">\r\n    <xs:element name="streamers">\r\n        <xs:complexType>\r\n            <xs:sequence>\r\n                <xs:element name="streamer" maxOccurs="unbounded">\r\n                    <xs:complexType>\r\n                        <xs:sequence>\r\n                            <xs:element name="nickname" type="xs:string"/>\r\n                            <xs:element name="seguidores" type="xs:integer"/>\r\n                        </xs:sequence>\r\n                    </xs:complexType>\r\n                </xs:element>\r\n            </xs:sequence>\r\n        </xs:complexType>\r\n    </xs:element>\r\n</xs:schema>\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Fijaos en ",(0,r.jsx)(n.code,{children:'type="xs:integer"'})," para el elemento ",(0,r.jsx)(n.code,{children:"seguidores"}),". Un documento XML que lo incumpla (por ejemplo, introduciendo ",(0,r.jsx)(n.code,{children:"50k"})," en lugar de un n\xfamero entero) no ser\xe1 v\xe1lido seg\xfan este XSD."]})}),"\n",(0,r.jsx)(n.hr,{})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var a=s(6540);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);