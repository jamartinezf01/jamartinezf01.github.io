"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[22],{3011:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"python/UT2 - estructuras basicas/2.5_trabajo_con_cadenas","title":"2.5 Trabajo con Cadenas","description":"Cadenas (clase str)","source":"@site/docs/python/UT2 - estructuras basicas/2.5_trabajo_con_cadenas.md","sourceDirName":"python/UT2 - estructuras basicas","slug":"/python/UT2 - estructuras basicas/2.5_trabajo_con_cadenas","permalink":"/docs/python/UT2 - estructuras basicas/2.5_trabajo_con_cadenas","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"pythonSidebar","previous":{"title":"2.4 Funciones integradas","permalink":"/docs/python/UT2 - estructuras basicas/2.4_funciones integradas"},"next":{"title":"2.6 Errores b\xe1sicos en python","permalink":"/docs/python/UT2 - estructuras basicas/2.6_errores b\xe1sicos"}}');var s=r(4848),i=r(8453);r(1470),r(9365);const c={sidebar_position:5},o="2.5 Trabajo con Cadenas",d={},l=[{value:"<strong>Cadenas</strong> (clase <code>str</code>)",id:"cadenas-clase-str",level:2},{value:"<strong>Acceso a los elementos de una cadena</strong>",id:"acceso-a-los-elementos-de-una-cadena",level:2},{value:"<strong>Secuencias de escape en cadenas</strong>",id:"secuencias-de-escape-en-cadenas",level:2},{value:"<strong>Subcadenas</strong> (slicing)",id:"subcadenas-slicing",level:2},{value:"<strong>Operaciones con cadenas</strong>",id:"operaciones-con-cadenas",level:2},{value:"Concatenaci\xf3n (unir)",id:"concatenaci\xf3n-unir",level:3},{value:"Repetici\xf3n",id:"repetici\xf3n",level:3},{value:"Comprobar pertenencia",id:"comprobar-pertenencia",level:3},{value:"<strong>Comparaci\xf3n de cadenas</strong>",id:"comparaci\xf3n-de-cadenas",level:2},{value:"Comparaci\xf3n con operadores relacionales",id:"comparaci\xf3n-con-operadores-relacionales",level:3},{value:"Operadores de pertenencia en cadenas",id:"operadores-de-pertenencia-en-cadenas",level:3},{value:"<strong>Funciones de cadenas</strong>",id:"funciones-de-cadenas",level:2},{value:"Cambio de formato y may\xfasculas/min\xfasculas",id:"cambio-de-formato-y-may\xfasculasmin\xfasculas",level:3},{value:"B\xfasqueda y conteo",id:"b\xfasqueda-y-conteo",level:3},{value:"Eliminaci\xf3n y reemplazo",id:"eliminaci\xf3n-y-reemplazo",level:3},{value:"Comprobaciones de contenido",id:"comprobaciones-de-contenido",level:3},{value:"Formato de cadenas",id:"formato-de-cadenas",level:3},{value:"<strong>Formato de cadenas y n\xfameros en Python</strong>",id:"formato-de-cadenas-y-n\xfameros-en-python",level:2},{value:"Concatenaci\xf3n simple",id:"concatenaci\xf3n-simple",level:3},{value:"M\xe9todo <code>.format()</code>",id:"m\xe9todo-format",level:3},{value:"F-strings (desde Python 3.6)",id:"f-strings-desde-python-36",level:3},{value:"<strong>Formato num\xe9rico con f-strings y <code>.format()</code></strong>",id:"formato-num\xe9rico-con-f-strings-y-format",level:2},{value:"Decimales con precisi\xf3n fija",id:"decimales-con-precisi\xf3n-fija",level:3},{value:"Parte entera con ceros a la izquierda",id:"parte-entera-con-ceros-a-la-izquierda",level:3},{value:"Alineaci\xf3n de texto y n\xfameros",id:"alineaci\xf3n-de-texto-y-n\xfameros",level:3},{value:"Separadores de miles",id:"separadores-de-miles",level:3},{value:"Porcentajes",id:"porcentajes",level:3},{value:"Tabla resumen de especificadores de formato",id:"tabla-resumen-de-especificadores-de-formato",level:3}];function t(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"25-trabajo-con-cadenas",children:"2.5 Trabajo con Cadenas"})}),"\n",(0,s.jsxs)(n.h2,{id:"cadenas-clase-str",children:[(0,s.jsx)(n.strong,{children:"Cadenas"})," (clase ",(0,s.jsx)(n.code,{children:"str"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["En Python, una cadena es una ",(0,s.jsx)(n.strong,{children:"secuencia inmutable de caracteres"}),", representada por la clase ",(0,s.jsx)(n.code,{children:"str"}),"."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Se pueden definir con ",(0,s.jsx)(n.strong,{children:"comillas simples"}),", ",(0,s.jsx)(n.strong,{children:"dobles"})," o ",(0,s.jsx)(n.strong,{children:"triples"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'texto1 = \'Hola\'\r\ntexto2 = "Mundo"\r\ntexto3 = """Esto es\r\nuna cadena\r\nmultil\xednea"""\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,s.jsx)(n.em,{children:"Inmutable"})," significa que no se pueden modificar los caracteres de una cadena ya creada; en su lugar, se generan nuevas cadenas al aplicar operaciones."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"acceso-a-los-elementos-de-una-cadena",children:(0,s.jsx)(n.strong,{children:"Acceso a los elementos de una cadena"})}),"\n",(0,s.jsxs)(n.p,{children:["Dado que una cadena es una secuencia, podemos acceder a sus caracteres mediante ",(0,s.jsx)(n.strong,{children:"\xedndices"}),". Cada car\xe1cter tiene asociado un \xedndice que permite acceder a \xe9l."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"El \xedndice comienza en 0 (primer car\xe1cter)."}),"\n",(0,s.jsx)(n.li,{children:"Se pueden usar \xedndices negativos para contar desde el final. El \xedndice del \xfaltimo caracter de la cadeba es -1."}),"\n"]}),"\n",(0,s.jsx)("div",{style:{display:"flex",justifyContent:"center",padding:"20px"},children:(0,s.jsx)("img",{src:"/img/python/UT2/indice_cadenas.jpg",alt:"indices en cadenas",title:"indices en cadenas"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'palabra = "Python"\r\nprint(palabra[0])   # P\r\nprint(palabra[2])   # t\r\nprint(palabra[-1])  # n\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"secuencias-de-escape-en-cadenas",children:(0,s.jsx)(n.strong,{children:"Secuencias de escape en cadenas"})}),"\n",(0,s.jsxs)(n.p,{children:["En Python, las cadenas de texto pueden incluir ",(0,s.jsx)(n.strong,{children:"secuencias de escape"}),", que son combinaciones especiales de caracteres precedidas por una barra invertida (",(0,s.jsx)(n.code,{children:"\\"}),").\r\nEstas secuencias permiten representar caracteres que no se pueden escribir directamente en la cadena (como saltos de l\xednea, tabulaciones o comillas) o que tendr\xedan un significado ambiguo."]}),"\n",(0,s.jsx)(n.p,{children:"Las secuencias de escape m\xe1s comunes son:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"\\n"}),"   salto de l\xednea"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"\\t"})," Tabulaci\xf3n (8 espacios)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"\\\\"})," Back slash"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"\\'"})," Comilla simple (')"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'\\"'}),' Comilla doble (")']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"\\uxxxx"})," Caracter unicode"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplos"',children:'# Comillas dentro de una cadena\r\nfrase = "Ella dijo: \\"Python es genial\\""\r\nprint(frase)  \r\n# Ella dijo: "Python es genial"\r\n\r\n# Saltos de l\xednea y tabulaci\xf3n\r\ntexto = "Linea 1\\nLinea 2\\n\\tCon tabulaci\xf3n"\r\nprint(texto)\r\n# Linea 1\r\n# Linea 2\r\n#     Con tabulaci\xf3n\r\n\r\n# Rutas de Windows\r\nruta = "C:\\\\Users\\\\Alumno\\\\Documentos"\r\nprint(ruta)  \r\n# C:\\Users\\Alumno\\Documentos\r\n\r\n# Unicode\r\nprint("\\u00F1")  # \xf1\r\nprint("\\U0001F602")  # \ud83d\ude02\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"subcadenas-slicing",children:[(0,s.jsx)(n.strong,{children:"Subcadenas"})," (slicing)"]}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.em,{children:"slicing"})," permite obtener partes de la cadena usando la notaci\xf3n ",(0,s.jsx)(n.code,{children:"[inicio:fin:paso]"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"texto = \"Programaci\xf3n\"\r\nprint(texto[0:7])   # 'Program'\r\nprint(texto[:7])    # 'Program'\r\nprint(texto[4:])    # 'ramaci\xf3n'\r\nprint(texto[::2])   # 'Pormc\xf3' (salta de 2 en 2)\r\nprint(texto[0:6:3]) # 'Pg' (salta de 3 en 3)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"operaciones-con-cadenas",children:(0,s.jsx)(n.strong,{children:"Operaciones con cadenas"})}),"\n",(0,s.jsx)(n.p,{children:"Python permite realizar distintas operaciones entre cadenas:"}),"\n",(0,s.jsx)(n.h3,{id:"concatenaci\xf3n-unir",children:"Concatenaci\xf3n (unir)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'a = "Hola"\r\nb = "Mundo"\r\nprint(a + " " + b)   # Hola Mundo\n'})}),"\n",(0,s.jsx)(n.h3,{id:"repetici\xf3n",children:"Repetici\xf3n"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'print("Ha" * 3)   # HaHaHa\n'})}),"\n",(0,s.jsx)(n.h3,{id:"comprobar-pertenencia",children:"Comprobar pertenencia"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'frase = "Aprender Python es divertido"\r\nprint("Python" in frase)      # True\r\nprint("Java" not in frase)    # True\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"comparaci\xf3n-de-cadenas",children:(0,s.jsx)(n.strong,{children:"Comparaci\xf3n de cadenas"})}),"\n",(0,s.jsx)(n.h3,{id:"comparaci\xf3n-con-operadores-relacionales",children:"Comparaci\xf3n con operadores relacionales"}),"\n",(0,s.jsxs)(n.p,{children:["Las cadenas se pueden comparar con los ",(0,s.jsx)(n.strong,{children:"operadores relacionales"})," (",(0,s.jsx)(n.code,{children:"=="}),", ",(0,s.jsx)(n.code,{children:"!="}),", ",(0,s.jsx)(n.code,{children:"<"}),", ",(0,s.jsx)(n.code,{children:">"}),", ",(0,s.jsx)(n.code,{children:"<="}),", ",(0,s.jsx)(n.code,{children:">="}),").\r\nLa comparaci\xf3n se hace ",(0,s.jsx)(n.strong,{children:"car\xe1cter por car\xe1cter"})," siguiendo el orden Unicode (lo que implica que las may\xfasculas y min\xfasculas tienen distinto valor)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'print("hola" == "hola")   # True\r\nprint("Hola" == "hola")   # False (may\xfasculas \u2260 min\xfasculas)\r\nprint("abc" < "abd")      # True (compara letra por letra)\r\nprint("zorro" > "avion")  # True ("z" > "a" en Unicode)\n'})}),"\n",(0,s.jsx)(n.p,{children:'\ud83d\udc49 Esto significa que "Hola" y "hola" no son iguales, aunque visualmente lo parezcan, porque el c\xf3digo Unicode de "H" (72) es distinto del de "h" (104).'}),"\n",(0,s.jsx)(n.h3,{id:"operadores-de-pertenencia-en-cadenas",children:"Operadores de pertenencia en cadenas"}),"\n",(0,s.jsx)(n.p,{children:"Los operadores in y not in permiten comprobar si una subcadena se encuentra dentro de otra cadena."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Operador"}),(0,s.jsx)(n.th,{children:"Descripci\xf3n"}),(0,s.jsx)(n.th,{children:"Ejemplo"}),(0,s.jsx)(n.th,{children:"Resultado"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"in"})}),(0,s.jsxs)(n.td,{children:["Devuelve ",(0,s.jsx)(n.code,{children:"True"})," si la subcadena est\xe1 presente."]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"py" in "python"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"True"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"not in"})}),(0,s.jsxs)(n.td,{children:["Devuelve ",(0,s.jsx)(n.code,{children:"True"})," si la subcadena no est\xe1 presente."]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"java" not in "python"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"True"})})]})]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplos"',children:'texto = "Python es genial"\r\n\r\nprint("Python" in texto)        # True (est\xe1 al inicio)\r\nprint("genial" in texto)        # True (est\xe1 al final)\r\nprint("Java" not in texto)      # True (no aparece en la cadena)\r\nprint("PYTHON" in texto)        # False (sensible a may\xfasculas)\n'})}),"\n",(0,s.jsx)(n.p,{children:"\ud83d\udc49 La comparaci\xf3n de pertenencia en cadenas tambi\xe9n es sensible a may\xfasculas y min\xfasculas, al igual que los operadores relacionales."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"funciones-de-cadenas",children:(0,s.jsx)(n.strong,{children:"Funciones de cadenas"})}),"\n",(0,s.jsxs)(n.p,{children:["Las cadenas de texto en Python (",(0,s.jsx)(n.code,{children:"str"}),") disponen de una gran variedad de ",(0,s.jsx)(n.strong,{children:"m\xe9todos integrados"})," que permiten transformarlas, analizarlas y darles formato. Estos m\xe9todos se aplican directamente sobre la cadena y devuelven un nuevo resultado, ya que las cadenas son ",(0,s.jsx)(n.strong,{children:"inmutables"})," (no se modifican en el lugar)."]}),"\n",(0,s.jsx)(n.p,{children:"A continuaci\xf3n se describen algunos de los m\xe9todos m\xe1s utilizados con ejemplos."}),"\n",(0,s.jsx)(n.h3,{id:"cambio-de-formato-y-may\xfasculasmin\xfasculas",children:"Cambio de formato y may\xfasculas/min\xfasculas"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"capitalize()"}),": convierte el primer car\xe1cter en may\xfascula y el resto en min\xfasculas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"title()"}),": convierte la primera letra de cada palabra en may\xfascula."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"upper()"}),": convierte todos los caracteres a may\xfasculas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"lower()"}),": convierte todos los caracteres a min\xfasculas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"swapcase()"}),": invierte may\xfasculas \u2194 min\xfasculas."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo"',children:'texto = "thirty days of python"\r\nprint(texto.capitalize())  # Thirty days of python\r\nprint(texto.title())       # Thirty Days Of Python\r\nprint(texto.upper())       # THIRTY DAYS OF PYTHON\r\nprint(texto.lower())       # thirty days of python\r\nprint("Hola Mundo".swapcase())  # hOLA mUNDO\n'})}),"\n",(0,s.jsx)(n.h3,{id:"b\xfasqueda-y-conteo",children:"B\xfasqueda y conteo"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"count(sub[, start, end])"}),": cuenta cu\xe1ntas veces aparece una subcadena."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"find(sub)"}),": devuelve el \xedndice de la primera aparici\xf3n o ",(0,s.jsx)(n.code,{children:"-1"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"rfind(sub)"}),": devuelve el \xedndice de la \xfaltima aparici\xf3n o ",(0,s.jsx)(n.code,{children:"-1"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"index(sub)"}),": como ",(0,s.jsx)(n.code,{children:"find"}),", pero lanza ",(0,s.jsx)(n.code,{children:"ValueError"})," si no encuentra."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"rindex(sub)"}),": como ",(0,s.jsx)(n.code,{children:"rfind"}),", pero lanza ",(0,s.jsx)(n.code,{children:"ValueError"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"startswith(prefijo)"}),": comprueba si la cadena empieza por un valor."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"endswith(sufijo)"}),": comprueba si la cadena termina en un valor."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo"',children:'challenge = "thirty days of python"\r\nprint(challenge.count("y"))        # 3\r\nprint(challenge.find("th"))        # 0\r\nprint(challenge.rfind("th"))       # 17\r\nprint(challenge.startswith("th"))  # True\r\nprint(challenge.endswith("on"))    # True\n'})}),"\n",(0,s.jsx)(n.h3,{id:"eliminaci\xf3n-y-reemplazo",children:"Eliminaci\xf3n y reemplazo"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"strip([chars])"}),": elimina caracteres al inicio y al final."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"replace(old, new)"}),": reemplaza subcadenas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"split([sep])"}),": divide en lista seg\xfan un separador."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"join(iterable)"}),": une una lista de cadenas en una sola, con un separador."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo"',children:'txt = "  hola python  "\r\nprint(txt.strip())  # "hola python"\r\n\r\nprint("python".replace("py", "co"))  # "cothon"\r\n\r\nprint("uno,dos,tres".split(","))     # [\'uno\', \'dos\', \'tres\']\r\n\r\nprint(", ".join(["manzana", "pera"]))  # "manzana, pera"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"comprobaciones-de-contenido",children:"Comprobaciones de contenido"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isalnum()"}),": True si son letras o n\xfameros."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isalpha()"}),": True si solo son letras."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isdecimal()"}),": True si son solo d\xedgitos decimales (0\u20139)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isdigit()"}),": True si son n\xfameros (incluye algunos unicode como \xb2)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isnumeric()"}),": True si son n\xfameros o relacionados (incluye fracciones)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isidentifier()"}),": True si es un identificador v\xe1lido en Python."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"islower()"}),": True si todos los caracteres alfab\xe9ticos est\xe1n en min\xfascula."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isupper()"}),": True si todos los caracteres alfab\xe9ticos est\xe1n en may\xfascula."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo"',children:'print("Python3".isalnum())     # True\r\nprint("Python".isalpha())      # True\r\nprint("123".isdecimal())       # True\r\nprint("\xb2".isdigit())           # True\r\nprint("\xbd".isnumeric())         # True\r\nprint("variable".isidentifier())  # True\r\nprint("python".islower())      # True\r\nprint("PYTHON".isupper())      # True\n'})}),"\n",(0,s.jsx)(n.h3,{id:"formato-de-cadenas",children:"Formato de cadenas"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"format()"}),": inserta valores dentro de una plantilla de texto."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo"',children:'nombre = "Ana"\r\nedad = 25\r\nmensaje = "Me llamo {} y tengo {} a\xf1os".format(nombre, edad)\r\nprint(mensaje)  # Me llamo Ana y tengo 25 a\xf1os\r\n\r\nradio = 10\r\npi = 3.14\r\narea = pi * radio ** 2\r\nprint("El \xe1rea del c\xedrculo de radio {} es {}".format(radio, area))\r\n# El \xe1rea del c\xedrculo de radio 10 es 314.0\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\xa1Genial! \ud83d\ude80 Este apartado lo podemos ampliar en el ",(0,s.jsx)(n.strong,{children:"manual"})," para que quede bien completo: explicamos ",(0,s.jsx)(n.strong,{children:"las distintas formas de formatear cadenas"})," y adem\xe1s c\xf3mo dar formato a ",(0,s.jsx)(n.strong,{children:"n\xfameros, decimales, parte entera, alineaci\xf3n y porcentaje"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"formato-de-cadenas-y-n\xfameros-en-python",children:(0,s.jsx)(n.strong,{children:"Formato de cadenas y n\xfameros en Python"})}),"\n",(0,s.jsxs)(n.p,{children:["En Python existen varias formas de ",(0,s.jsx)(n.strong,{children:"insertar valores dentro de cadenas de texto"}),". Esto es muy \xfatil cuando queremos mostrar resultados calculados, mensajes personalizados o informes con valores num\xe9ricos."]}),"\n",(0,s.jsx)(n.h3,{id:"concatenaci\xf3n-simple",children:"Concatenaci\xf3n simple"}),"\n",(0,s.jsxs)(n.p,{children:["La forma m\xe1s b\xe1sica es ",(0,s.jsxs)(n.strong,{children:["concatenar cadenas con el operador ",(0,s.jsx)(n.code,{children:"+"})]}),".\r\n\ud83d\udc49 Es necesario convertir a cadena con ",(0,s.jsx)(n.code,{children:"str()"})," cuando el valor no lo es."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'nombre = "Ana"\r\nedad = 20\r\nprint("Hola " + nombre + ", tienes " + str(edad) + " a\xf1os")\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"m\xe9todo-format",children:["M\xe9todo ",(0,s.jsx)(n.code,{children:".format()"})]}),"\n",(0,s.jsxs)(n.p,{children:["El m\xe9todo ",(0,s.jsx)(n.code,{children:".format()"})," permite insertar valores en posiciones marcadas por llaves ",(0,s.jsx)(n.code,{children:"{}"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'nombre = "Ana"\r\nedad = 20\r\nprint("Me llamo {} y tengo {} a\xf1os".format(nombre, edad))\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Tambi\xe9n se pueden ",(0,s.jsx)(n.strong,{children:"reordenar o repetir"})," los valores:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'print("Edad: {1}, Nombre: {0}".format(nombre, edad))  # Edad: 20, Nombre: Ana\n'})}),"\n",(0,s.jsx)(n.h3,{id:"f-strings-desde-python-36",children:"F-strings (desde Python 3.6)"}),"\n",(0,s.jsxs)(n.p,{children:["La forma m\xe1s recomendada es usar ",(0,s.jsx)(n.strong,{children:"f-strings"}),", que permiten incrustar variables y expresiones directamente entre llaves ",(0,s.jsx)(n.code,{children:"{}"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'nombre = "Ana"\r\nedad = 20\r\nprint(f"Me llamo {nombre} y tengo {edad} a\xf1os")\r\nprint(f"El doble de 5 es {5*2}")  # El doble de 5 es 10\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"formato-num\xe9rico-con-f-strings-y-format",children:(0,s.jsxs)(n.strong,{children:["Formato num\xe9rico con f-strings y ",(0,s.jsx)(n.code,{children:".format()"})]})}),"\n",(0,s.jsx)(n.p,{children:"Python ofrece gran flexibilidad para mostrar n\xfameros con el formato deseado:"}),"\n",(0,s.jsx)(n.h3,{id:"decimales-con-precisi\xf3n-fija",children:"Decimales con precisi\xf3n fija"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'pi = 3.14159265\r\nprint(f"Pi con 2 decimales: {pi:.2f}")        # 3.14\r\nprint("Pi con 4 decimales: {:.4f}".format(pi)) # 3.1416\n'})}),"\n",(0,s.jsx)(n.h3,{id:"parte-entera-con-ceros-a-la-izquierda",children:"Parte entera con ceros a la izquierda"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'numero = 42\r\nprint(f"N\xfamero con ceros: {numero:05d}")  # 00042\n'})}),"\n",(0,s.jsx)(n.h3,{id:"alineaci\xf3n-de-texto-y-n\xfameros",children:"Alineaci\xf3n de texto y n\xfameros"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"valor = 123\r\nprint(f\"Alineado a la derecha: {valor:>10}\")  # '       123'\r\nprint(f\"Alineado a la izquierda: {valor:<10}\") # '123       '\r\nprint(f\"Centrado: {valor:^10}\")                # '   123    '\n"})}),"\n",(0,s.jsx)(n.h3,{id:"separadores-de-miles",children:"Separadores de miles"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'grande = 1234567\r\nprint(f"Con separador de miles: {grande:,}")   # 1,234,567\r\nprint(f"Formato europeo: {grande:_}")          # 1_234_567\n'})}),"\n",(0,s.jsx)(n.h3,{id:"porcentajes",children:"Porcentajes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'tasa = 0.2567\r\nprint(f"Porcentaje: {tasa:.2%}")   # 25.67%\n'})}),"\n",(0,s.jsx)(n.h3,{id:"tabla-resumen-de-especificadores-de-formato",children:"Tabla resumen de especificadores de formato"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Especificador"}),(0,s.jsx)(n.th,{children:"Significado"}),(0,s.jsx)(n.th,{children:"Ejemplo"}),(0,s.jsx)(n.th,{children:"Resultado"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:":.2f"})}),(0,s.jsx)(n.td,{children:"N\xfamero con 2 decimales"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'f"{3.1415:.2f}"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"3.14"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:":05d"})}),(0,s.jsx)(n.td,{children:"Entero con 5 d\xedgitos, rellenado con ceros"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'f"{42:05d}"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"00042"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:":>10"})}),(0,s.jsx)(n.td,{children:"Alineado a la derecha en 10 espacios"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'f"{123:>10}"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"       123"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:":<10"})}),(0,s.jsx)(n.td,{children:"Alineado a la izquierda en 10 espacios"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'f"{123:<10}"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"123       "})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:":^10"})}),(0,s.jsx)(n.td,{children:"Centrado en 10 espacios"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'f"{123:^10}"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"  123   "})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:":,"})}),(0,s.jsx)(n.td,{children:"Separador de miles con coma"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'f"{1234567:,}"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"1,234,567"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:":.2%"})}),(0,s.jsx)(n.td,{children:"Porcentaje con 2 decimales"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'f"{0.2567:.2%}"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"25.67%"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>c});r(6540);var a=r(4164);const s={tabItem:"tabItem_Ymn6"};var i=r(4848);function c({children:e,hidden:n,className:r}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,r),hidden:n,children:e})}},1470:(e,n,r)=>{r.d(n,{A:()=>T});var a=r(6540),s=r(4164),i=r(3104),c=r(6347),o=r(205),d=r(7485),l=r(1682),t=r(679);function h(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:r,default:a}})=>({value:e,label:n,attributes:r,default:a})))}(r);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p({value:e,tabValues:n}){return n.some((n=>n.value===e))}function x({queryString:e=!1,groupId:n}){const r=(0,c.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function j(e){const{defaultValue:n,queryString:r=!1,groupId:s}=e,i=u(e),[c,d]=(0,a.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[l,h]=x({queryString:r,groupId:s}),[j,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,s]=(0,t.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:s}),g=(()=>{const e=l??j;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{g&&d(g)}),[g]);return{selectedValue:c,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),m(e)}),[h,m,i]),tabValues:i}}var m=r(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(4848);function b({className:e,block:n,selectedValue:r,selectValue:a,tabValues:c}){const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),l=e=>{const n=e.currentTarget,s=o.indexOf(n),i=c[s].value;i!==r&&(d(n),a(i))},t=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;n=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;n=o[r]??o[o.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:c.map((({value:e,label:n,attributes:a})=>(0,f.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{o.push(e)},onKeyDown:t,onClick:l,...a,className:(0,s.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function y({lazy:e,children:n,selectedValue:r}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=j(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(y,{...n,...e})]})}function T(e){const n=(0,m.A)();return(0,f.jsx)(v,{...e,children:h(e.children)},String(n))}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var a=r(6540);const s={},i=a.createContext(s);function c(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);