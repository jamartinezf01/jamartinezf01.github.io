"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[46],{3674:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"aplicaciones m\xf3viles/5 Persistencia/Room/5.3.2 DAO","title":"5.3.2 DAO (@Dao)","description":"Un DAO (Data Access Object) es una interfaz o clase abstracta que define c\xf3mo interactuar con los datos almacenados en una base de datos Room. Este componente act\xfaa como un puente \ud83c\udf09 entre las consultas SQL y la aplicaci\xf3n, proporcionando m\xe9todos que encapsulan las operaciones de inserci\xf3n, eliminaci\xf3n, actualizaci\xf3n y consulta.","source":"@site/docs/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.2 DAO.md","sourceDirName":"aplicaciones m\xf3viles/5 Persistencia/Room","slug":"/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.2 DAO","permalink":"/docs/aplicaciones m\xf3viles/5 Persistencia/Room/5.3.2 DAO","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2}}');var a=s(4848),o=s(8453);const i={sidebar_position:2},l="5.3.2 DAO (@Dao)",c={},d=[{value:"<strong>\xbfQu\xe9 hace un DAO?</strong> \ud83e\udd14",id:"qu\xe9-hace-un-dao-",level:2},{value:"<strong>C\xf3mo crear un DAO</strong> \ud83d\udee0\ufe0f",id:"c\xf3mo-crear-un-dao-\ufe0f",level:2},{value:"1. Anotar la interfaz o clase abstracta con <code>@Dao</code>",id:"1-anotar-la-interfaz-o-clase-abstracta-con-dao",level:3},{value:"2. Definir m\xe9todos para interactuar con los datos",id:"2-definir-m\xe9todos-para-interactuar-con-los-datos",level:3},{value:"<strong>Ejemplo b\xe1sico de un DAO</strong> \ud83d\udcd8",id:"ejemplo-b\xe1sico-de-un-dao-",level:2},{value:"<strong>Anotaciones de los m\xe9todos DAO</strong> \ud83d\udcdd",id:"anotaciones-de-los-m\xe9todos-dao-",level:2},{value:"1. <code>@Insert</code>",id:"1-insert",level:3},{value:"2. <code>@Update</code>",id:"2-update",level:3},{value:"3. <code>@Delete</code>",id:"3-delete",level:3},{value:"4. <code>@Query</code>",id:"4-query",level:3},{value:"<strong>Tipos de retorno admitidos</strong> \ud83e\uddfe",id:"tipos-de-retorno-admitidos-",level:2},{value:"<strong>Relaciones en los DAOs</strong> \ud83d\udd17",id:"relaciones-en-los-daos-",level:2},{value:"Ejemplo: Relaci\xf3n <code>1:N</code>",id:"ejemplo-relaci\xf3n-1n",level:3},{value:"<strong>Buenas pr\xe1cticas para DAOs</strong> \u2705",id:"buenas-pr\xe1cticas-para-daos-",level:2}];function t(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsxs)(n.h1,{id:"532-dao-dao",children:["5.3.2 DAO (",(0,a.jsx)(n.code,{children:"@Dao"}),")"]})}),"\n",(0,a.jsxs)(n.p,{children:["Un ",(0,a.jsx)(n.strong,{children:"DAO (Data Access Object)"})," es una interfaz o clase abstracta que define c\xf3mo interactuar con los datos almacenados en una base de datos Room. Este componente act\xfaa como un puente \ud83c\udf09 entre las consultas SQL y la aplicaci\xf3n, proporcionando m\xe9todos que encapsulan las operaciones de inserci\xf3n, eliminaci\xf3n, actualizaci\xf3n y consulta."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"qu\xe9-hace-un-dao-",children:[(0,a.jsx)(n.strong,{children:"\xbfQu\xe9 hace un DAO?"})," \ud83e\udd14"]}),"\n",(0,a.jsx)(n.p,{children:"Un DAO permite:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Acceso estructurado a los datos"})," mediante m\xe9todos bien definidos \ud83d\udccb\u2705."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Seguridad y validaci\xf3n en tiempo de compilaci\xf3n"})," \ud83d\udee1\ufe0f: Room verifica que las consultas SQL sean v\xe1lidas y coincidan con el esquema de la base de datos."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Integraci\xf3n con arquitecturas modernas"})," \ud83d\ude80: Puedes usar ",(0,a.jsx)(n.strong,{children:"LiveData"}),", ",(0,a.jsx)(n.strong,{children:"Flow"}),", o trabajar con ",(0,a.jsx)(n.strong,{children:"coroutines"})," en los m\xe9todos DAO."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"c\xf3mo-crear-un-dao-\ufe0f",children:[(0,a.jsx)(n.strong,{children:"C\xf3mo crear un DAO"})," \ud83d\udee0\ufe0f"]}),"\n",(0,a.jsxs)(n.h3,{id:"1-anotar-la-interfaz-o-clase-abstracta-con-dao",children:["1. Anotar la interfaz o clase abstracta con ",(0,a.jsx)(n.code,{children:"@Dao"})]}),"\n",(0,a.jsxs)(n.p,{children:["La anotaci\xf3n ",(0,a.jsx)(n.code,{children:"@Dao"})," identifica la clase o interfaz como un DAO. \ud83c\udff7\ufe0f"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"@Dao\r\npublic interface UserDao {\r\n    ...\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-definir-m\xe9todos-para-interactuar-con-los-datos",children:"2. Definir m\xe9todos para interactuar con los datos"}),"\n",(0,a.jsxs)(n.p,{children:["Los m\xe9todos en un DAO est\xe1n anotados con operaciones espec\xedficas como ",(0,a.jsx)(n.code,{children:"@Insert"})," \u2795, ",(0,a.jsx)(n.code,{children:"@Update"})," \u267b\ufe0f, ",(0,a.jsx)(n.code,{children:"@Delete"})," \u274c, y ",(0,a.jsx)(n.code,{children:"@Query"})," \ud83d\udd0d."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"ejemplo-b\xe1sico-de-un-dao-",children:[(0,a.jsx)(n.strong,{children:"Ejemplo b\xe1sico de un DAO"})," \ud83d\udcd8"]}),"\n",(0,a.jsxs)(n.p,{children:["A continuaci\xf3n, se muestra un ejemplo de un ",(0,a.jsx)(n.code,{children:"UserDao"})," que permite realizar operaciones comunes como insertar usuarios, consultar todos los usuarios y buscar un usuario por su ID:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'import androidx.room.Dao;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\n\r\nimport java.util.List;\r\n\r\n@Dao\r\npublic interface UserDao {\r\n\r\n    // Insertar un usuario\r\n    @Insert\r\n    void insertUser(User user);\r\n\r\n    // Consultar todos los usuarios\r\n    @Query("SELECT * FROM users")\r\n    List<User> getAllUsers();\r\n\r\n    // Consultar un usuario por su ID\r\n    @Query("SELECT * FROM users WHERE id = :userId")\r\n    User getUserById(int userId);\r\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"anotaciones-de-los-m\xe9todos-dao-",children:[(0,a.jsx)(n.strong,{children:"Anotaciones de los m\xe9todos DAO"})," \ud83d\udcdd"]}),"\n",(0,a.jsxs)(n.h3,{id:"1-insert",children:["1. ",(0,a.jsx)(n.code,{children:"@Insert"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Inserta una o varias filas en la base de datos."}),"\n",(0,a.jsxs)(n.li,{children:["Si el campo anotado con ",(0,a.jsx)(n.code,{children:"@PrimaryKey"})," ya existe, genera una excepci\xf3n."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"@Insert\r\nvoid insertUser(User user);\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"2-update",children:["2. ",(0,a.jsx)(n.code,{children:"@Update"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Actualiza una o varias filas bas\xe1ndose en su clave primaria."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"@Update\r\nvoid updateUser(User user);\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"3-delete",children:["3. ",(0,a.jsx)(n.code,{children:"@Delete"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Elimina una o varias filas bas\xe1ndose en su clave primaria."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"@Delete\r\nvoid deleteUser(User user);\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"4-query",children:["4. ",(0,a.jsx)(n.code,{children:"@Query"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Ejecuta consultas SQL personalizadas."}),"\n",(0,a.jsx)(n.li,{children:"Es compatible con operaciones SELECT, INSERT, UPDATE y DELETE."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Query("SELECT * FROM users WHERE first_name LIKE :name")\r\nList<User> findUsersByName(String name);\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"tipos-de-retorno-admitidos-",children:[(0,a.jsx)(n.strong,{children:"Tipos de retorno admitidos"})," \ud83e\uddfe"]}),"\n",(0,a.jsx)(n.p,{children:"Room permite diferentes tipos de retorno en los m\xe9todos DAO, incluyendo:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Listas"})," \ud83d\uddc2\ufe0f: Para devolver m\xfaltiples filas.","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Query("SELECT * FROM users")\r\nList<User> getAllUsers();\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Objetos individuales"})," \ud83e\uddd1\u200d\ud83d\udcbb: Para devolver una sola fila.","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Query("SELECT * FROM users WHERE id = :userId")\r\nUser getUserById(int userId);\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"LiveData"})," \ud83d\udce1: Para observar cambios en los datos.","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Query("SELECT * FROM users")\r\nLiveData<List<User>> getAllUsersLiveData();\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"relaciones-en-los-daos-",children:[(0,a.jsx)(n.strong,{children:"Relaciones en los DAOs"})," \ud83d\udd17"]}),"\n",(0,a.jsxs)(n.p,{children:["Si tienes tablas relacionadas, puedes usar la anotaci\xf3n ",(0,a.jsx)(n.code,{children:"@Transaction"})," para manejar consultas que incluyan m\xfaltiples tablas. Esto asegura que las operaciones se realicen de forma at\xf3mica. \ud83d\udca1"]}),"\n",(0,a.jsxs)(n.h3,{id:"ejemplo-relaci\xf3n-1n",children:["Ejemplo: Relaci\xf3n ",(0,a.jsx)(n.code,{children:"1:N"})]}),"\n",(0,a.jsx)(n.p,{children:"Imagina que un usuario puede tener m\xfaltiples \xf3rdenes. La relaci\xf3n se modela as\xed:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Entidad ",(0,a.jsx)(n.code,{children:"Order"}),":"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Entity(\r\n    foreignKeys = @ForeignKey(\r\n        entity = User.class,\r\n        parentColumns = "id",\r\n        childColumns = "userId",\r\n        onDelete = ForeignKey.CASCADE\r\n    )\r\n)\r\npublic class Order {\r\n    @PrimaryKey(autoGenerate = true)\r\n    public int orderId;\r\n\r\n    public int userId; // Clave for\xe1nea que referencia a "users"\r\n\r\n    public String orderDescription;\r\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Clase de relaci\xf3n ",(0,a.jsx)(n.code,{children:"UserWithOrders"}),":"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'import androidx.room.Embedded;\r\nimport androidx.room.Relation;\r\n\r\nimport java.util.List;\r\n\r\npublic class UserWithOrders {\r\n    @Embedded\r\n    public User user;\r\n\r\n    @Relation(\r\n        parentColumn = "id",\r\n        entityColumn = "userId"\r\n    )\r\n    public List<Order> orders;\r\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"M\xe9todo en el DAO:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Dao\r\npublic interface UserDao {\r\n\r\n    @Transaction\r\n    @Query("SELECT * FROM users WHERE id = :userId")\r\n    UserWithOrders getUserWithOrders(int userId);\r\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"buenas-pr\xe1cticas-para-daos-",children:[(0,a.jsx)(n.strong,{children:"Buenas pr\xe1cticas para DAOs"})," \u2705"]}),"\n",(0,a.jsx)(n.admonition,{title:"sigue estos consejos...",type:"tip",children:(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Mantenlo limpio y espec\xedfico"})," \ud83e\uddf9:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Cada DAO debe estar enfocado en una sola entidad o grupo de entidades relacionadas."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Evita operaciones en el hilo principal"})," \ud83d\udeab\ud83e\uddf5:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Usa coroutines, LiveData, o Flow para mantener las operaciones fuera del ",(0,a.jsx)(n.code,{children:"MainThread"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Divide m\xe9todos complejos"})," \ud83e\udde9:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Si una consulta SQL es muy larga, div\xeddela en partes l\xf3gicas o usa vistas materializadas."}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(6540);const a={},o=r.createContext(a);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);