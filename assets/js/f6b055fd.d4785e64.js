"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[2097],{8428:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"aplicaciones m\xf3viles/5 Persistencia/FireBase/Firestore/soporte offline","title":"Soporte OffLine","description":"Firestore proporciona un modo offline que permite a las aplicaciones seguir funcionando sin conexi\xf3n a Internet. Cuando un dispositivo pierde la conexi\xf3n, Firestore almacena los datos en cach\xe9 y sincroniza los cambios cuando se restablece la conexi\xf3n.","source":"@site/docs/aplicaciones m\xf3viles/5 Persistencia/FireBase/Firestore/soporte offline.md","sourceDirName":"aplicaciones m\xf3viles/5 Persistencia/FireBase/Firestore","slug":"/aplicaciones m\xf3viles/5 Persistencia/FireBase/Firestore/soporte offline","permalink":"/docs/aplicaciones m\xf3viles/5 Persistencia/FireBase/Firestore/soporte offline","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8}}');var r=s(4848),o=s(8453);const a={sidebar_position:8},l="Soporte OffLine",t={},c=[{value:"1. <strong>Habilitar el Soporte Offline en Firestore</strong>",id:"1-habilitar-el-soporte-offline-en-firestore",level:2},{value:"2. <strong>Consultar Datos desde el Cach\xe9 Local</strong>",id:"2-consultar-datos-desde-el-cach\xe9-local",level:2},{value:"3. <strong>Detectar el Estado de Conexi\xf3n</strong>",id:"3-detectar-el-estado-de-conexi\xf3n",level:2},{value:"4. <strong>Sincronizaci\xf3n Autom\xe1tica cuando Vuelve la Conexi\xf3n</strong>",id:"4-sincronizaci\xf3n-autom\xe1tica-cuando-vuelve-la-conexi\xf3n",level:2},{value:"5. <strong>Limpiar la Cach\xe9 Manualmente</strong>",id:"5-limpiar-la-cach\xe9-manualmente",level:2},{value:"6. <strong>Uso del Modo Offline con LiveData y MVVM</strong>",id:"6-uso-del-modo-offline-con-livedata-y-mvvm",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"soporte-offline",children:"Soporte OffLine"})}),"\n",(0,r.jsxs)(n.p,{children:["Firestore proporciona un ",(0,r.jsx)(n.strong,{children:"modo offline"})," que permite a las aplicaciones seguir funcionando ",(0,r.jsx)(n.strong,{children:"sin conexi\xf3n a Internet"}),". Cuando un dispositivo pierde la conexi\xf3n, Firestore almacena los datos en cach\xe9 y sincroniza los cambios cuando se restablece la conexi\xf3n."]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.strong,{children:"Beneficios del soporte offline:"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Permite ",(0,r.jsx)(n.strong,{children:"acceder a datos sin conexi\xf3n"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Guarda cambios localmente y ",(0,r.jsx)(n.strong,{children:"los sincroniza autom\xe1ticamente"})," cuando vuelve la conexi\xf3n."]}),"\n",(0,r.jsx)(n.li,{children:"Mejora el rendimiento al evitar consultas repetitivas a Firestore."}),"\n",(0,r.jsxs)(n.li,{children:["Reduce el ",(0,r.jsx)(n.strong,{children:"consumo de red"})," en dispositivos m\xf3viles."]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"1-habilitar-el-soporte-offline-en-firestore",children:["1. ",(0,r.jsx)(n.strong,{children:"Habilitar el Soporte Offline en Firestore"})]}),"\n",(0,r.jsxs)(n.p,{children:["El modo offline est\xe1 activado por defecto en Firestore, pero podemos ",(0,r.jsx)(n.strong,{children:"confirmarlo o activarlo manualmente"})," con la siguiente configuraci\xf3n en nuestra aplicaci\xf3n:"]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,r.jsx)(n.strong,{children:"Ejemplo: Habilitar la persistencia offline"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n// Habilitar cach\xe9 persistente\r\nFirebaseFirestoreSettings settings = new FirebaseFirestoreSettings.Builder()\r\n        .setPersistenceEnabled(true) // Activa el almacenamiento en cach\xe9\r\n        .build();\r\n\r\ndb.setFirestoreSettings(settings);\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.strong,{children:"Explicaci\xf3n:"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setPersistenceEnabled(true)"})," permite ",(0,r.jsx)(n.strong,{children:"almacenar datos localmente"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Firestore usa un ",(0,r.jsx)(n.strong,{children:"cach\xe9 local"})," para almacenar datos y sincronizarlos cuando haya conexi\xf3n."]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"2-consultar-datos-desde-el-cach\xe9-local",children:["2. ",(0,r.jsx)(n.strong,{children:"Consultar Datos desde el Cach\xe9 Local"})]}),"\n",(0,r.jsxs)(n.p,{children:["Cuando Firestore est\xe1 en ",(0,r.jsx)(n.strong,{children:"modo offline"}),", primero intenta ",(0,r.jsx)(n.strong,{children:"recuperar datos del cach\xe9 local"})," antes de hacer una consulta en l\xednea."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,r.jsx)(n.strong,{children:"Ejemplo: Consultar datos desde cach\xe9"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'db.collection("peliculas").get(Source.CACHE)\r\n    .addOnSuccessListener(queryDocumentSnapshots -> {\r\n        for (DocumentSnapshot document : queryDocumentSnapshots) {\r\n            Log.d("Firestore", "Datos desde cach\xe9: " + document.getData());\r\n        }\r\n    })\r\n    .addOnFailureListener(e -> Log.w("Firestore", "Error al obtener datos offline", e));\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.strong,{children:"Explicaci\xf3n:"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Source.CACHE"})," fuerza la consulta a ",(0,r.jsx)(n.strong,{children:"usar solo los datos almacenados localmente"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Si el cach\xe9 no tiene datos, la consulta ",(0,r.jsx)(n.strong,{children:"fallar\xe1"}),"."]}),"\n"]})]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,r.jsx)(n.strong,{children:"Fuentes de datos disponibles en Firestore:"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Fuente"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Descripci\xf3n"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Source.DEFAULT"})}),(0,r.jsx)(n.td,{children:"Usa primero cach\xe9, si no hay datos consulta Firestore."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Source.CACHE"})}),(0,r.jsxs)(n.td,{children:["Obtiene los datos ",(0,r.jsx)(n.strong,{children:"solo desde cach\xe9"})," (offline)."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Source.SERVER"})}),(0,r.jsxs)(n.td,{children:["Obtiene los datos ",(0,r.jsx)(n.strong,{children:"solo desde Firestore"})," (requiere conexi\xf3n)."]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"3-detectar-el-estado-de-conexi\xf3n",children:["3. ",(0,r.jsx)(n.strong,{children:"Detectar el Estado de Conexi\xf3n"})]}),"\n",(0,r.jsxs)(n.p,{children:["Podemos verificar si la aplicaci\xf3n est\xe1 conectada a Firestore en ",(0,r.jsx)(n.strong,{children:"modo offline o en l\xednea"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,r.jsx)(n.strong,{children:"Ejemplo: Detectar conexi\xf3n"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'db.collection("peliculas").addSnapshotListener((queryDocumentSnapshots, e) -> {\r\n    if (e != null) {\r\n        Log.w("Firestore", "Error en la escucha", e);\r\n        return;\r\n    }\r\n\r\n    if (queryDocumentSnapshots != null && !queryDocumentSnapshots.isEmpty()) {\r\n        Log.d("Firestore", "Datos recibidos desde: " +\r\n                (queryDocumentSnapshots.getMetadata().isFromCache() ? "CACH\xc9" : "SERVIDOR"));\r\n    }\r\n});\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.strong,{children:"Explicaci\xf3n:"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"queryDocumentSnapshots.getMetadata().isFromCache()"})," indica si los datos provienen del ",(0,r.jsx)(n.strong,{children:"cach\xe9 local"})," o de ",(0,r.jsx)(n.strong,{children:"Firestore en l\xednea"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["\xdatil para mostrar mensajes como ",(0,r.jsx)(n.strong,{children:'"Modo offline activado"'})," en la UI."]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"4-sincronizaci\xf3n-autom\xe1tica-cuando-vuelve-la-conexi\xf3n",children:["4. ",(0,r.jsx)(n.strong,{children:"Sincronizaci\xf3n Autom\xe1tica cuando Vuelve la Conexi\xf3n"})]}),"\n",(0,r.jsxs)(n.p,{children:["Cuando el dispositivo ",(0,r.jsx)(n.strong,{children:"recupera la conexi\xf3n"}),", Firestore ",(0,r.jsx)(n.strong,{children:"sincroniza autom\xe1ticamente"})," los cambios almacenados en cach\xe9 con la base de datos en la nube."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,r.jsx)(n.strong,{children:"Ejemplo: Detectar cu\xe1ndo Firestore sincroniza datos"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'db.collection("peliculas").addSnapshotListener((queryDocumentSnapshots, e) -> {\r\n    if (queryDocumentSnapshots != null) {\r\n        if (!queryDocumentSnapshots.getMetadata().hasPendingWrites()) {\r\n            Log.d("Firestore", "Cambios sincronizados con el servidor.");\r\n        } else {\r\n            Log.d("Firestore", "Cambios pendientes de sincronizaci\xf3n.");\r\n        }\r\n    }\r\n});\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.strong,{children:"Explicaci\xf3n:"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"hasPendingWrites()"})," indica si hay ",(0,r.jsx)(n.strong,{children:"cambios en cach\xe9"})," que a\xfan no han sido enviados al servidor."]}),"\n",(0,r.jsxs)(n.li,{children:["Nos permite avisar al usuario cuando sus cambios ",(0,r.jsx)(n.strong,{children:"se han guardado en Firestore"}),"."]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"5-limpiar-la-cach\xe9-manualmente",children:["5. ",(0,r.jsx)(n.strong,{children:"Limpiar la Cach\xe9 Manualmente"})]}),"\n",(0,r.jsxs)(n.p,{children:["Si la aplicaci\xf3n tiene problemas de espacio o datos desactualizados, podemos ",(0,r.jsx)(n.strong,{children:"borrar el cach\xe9 de Firestore"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,r.jsx)(n.strong,{children:"Ejemplo: Limpiar cach\xe9 local"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'db.clearPersistence()\r\n    .addOnSuccessListener(aVoid -> Log.d("Firestore", "Cach\xe9 borrado con \xe9xito"))\r\n    .addOnFailureListener(e -> Log.w("Firestore", "Error al limpiar cach\xe9", e));\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.strong,{children:"Explicaci\xf3n:"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"clearPersistence()"})," borra todos los datos almacenados en cach\xe9."]}),"\n",(0,r.jsxs)(n.li,{children:["Solo funciona si ",(0,r.jsx)(n.strong,{children:"no hay listeners activos"})," en Firestore."]}),"\n"]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.strong,{children:"Advertencia:"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Al limpiar la cach\xe9, los datos ",(0,r.jsx)(n.strong,{children:"se perder\xe1n si el usuario est\xe1 offline"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Se recomienda solo ",(0,r.jsx)(n.strong,{children:"en casos donde sea necesario actualizar datos obsoletos"}),"."]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"6-uso-del-modo-offline-con-livedata-y-mvvm",children:["6. ",(0,r.jsx)(n.strong,{children:"Uso del Modo Offline con LiveData y MVVM"})]}),"\n",(0,r.jsxs)(n.p,{children:["Si usamos ",(0,r.jsx)(n.strong,{children:"MVVM y LiveData"}),", Firestore se puede integrar para obtener ",(0,r.jsx)(n.strong,{children:"datos en tiempo real, incluso offline"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,r.jsx)(n.strong,{children:"Ejemplo: ViewModel con Firestore y LiveData"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class PeliculasViewModel extends ViewModel {\r\n    private MutableLiveData<List<Pelicula>> peliculasLiveData = new MutableLiveData<>();\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    public PeliculasViewModel() {\r\n        db.collection("peliculas")\r\n            .addSnapshotListener((queryDocumentSnapshots, e) -> {\r\n                if (e != null) {\r\n                    return;\r\n                }\r\n\r\n                List<Pelicula> listaPeliculas = new ArrayList<>();\r\n                for (DocumentSnapshot document : queryDocumentSnapshots) {\r\n                    Pelicula pelicula = document.toObject(Pelicula.class);\r\n                    listaPeliculas.add(pelicula);\r\n                }\r\n                peliculasLiveData.setValue(listaPeliculas);\r\n            });\r\n    }\r\n\r\n    public LiveData<List<Pelicula>> getPeliculas() {\r\n        return peliculasLiveData;\r\n    }\r\n}\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.strong,{children:"Explicaci\xf3n:"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"addSnapshotListener()"})," obtiene datos ",(0,r.jsx)(n.strong,{children:"en tiempo real y desde cach\xe9"})," cuando no hay conexi\xf3n."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"LiveData"})," permite que los datos ",(0,r.jsx)(n.strong,{children:"se reflejen autom\xe1ticamente en la UI"}),"."]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);