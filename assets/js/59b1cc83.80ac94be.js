"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[5479],{3243:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Real Time Database/estructura de nodos","title":"Estructura de Nodos","description":"En Firebase Realtime Database, toda la informaci\xf3n se almacena como un \xe1rbol de nodos en formato JSON. Esto significa que no hay tablas ni colecciones como en otras bases de datos, sino un gran objeto JSON en el que cada nodo puede contener propiedades (parecidas a claves y valores) o subnodos (anidaciones).","source":"@site/docs/salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Real Time Database/estructura de nodos.md","sourceDirName":"salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Real Time Database","slug":"/salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Real Time Database/estructura de nodos","permalink":"/docs/salva/aplicaciones m\xf3viles/5 Persistencia/FireBase/Real Time Database/estructura de nodos","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3}}');var a=s(4848),o=s(8453);const i={sidebar_position:3},d="Estructura de Nodos",c={},l=[{value:"<strong>\xbfQu\xe9 es un Nodo?</strong>",id:"qu\xe9-es-un-nodo",level:2},{value:"<strong>Estructura B\xe1sica: Ra\xedz y Subnodos</strong>",id:"estructura-b\xe1sica-ra\xedz-y-subnodos",level:2},{value:"<strong>Profundidad de los Nodos (Anidaci\xf3n)</strong>",id:"profundidad-de-los-nodos-anidaci\xf3n",level:2},{value:"<strong>Claves Generadas Autom\xe1ticamente (<code>push()</code>)</strong>",id:"claves-generadas-autom\xe1ticamente-push",level:2},{value:"<strong>Patrones de Estructura</strong>",id:"patrones-de-estructura",level:2},{value:"<strong>Normalizaci\xf3n o Estructura Plana</strong>",id:"normalizaci\xf3n-o-estructura-plana",level:2},{value:"<strong>Referencias en el C\xf3digo</strong>",id:"referencias-en-el-c\xf3digo",level:2},{value:"<strong>Manejo de Listas</strong>",id:"manejo-de-listas",level:2},{value:"<strong>Ejemplo Completo</strong>",id:"ejemplo-completo",level:2},{value:"<strong>Buenas Pr\xe1cticas</strong>",id:"buenas-pr\xe1cticas",level:2}];function t(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"estructura-de-nodos",children:"Estructura de Nodos"})}),"\n",(0,a.jsxs)(n.p,{children:["En ",(0,a.jsx)(n.strong,{children:"Firebase Realtime Database"}),", toda la informaci\xf3n se almacena como un ",(0,a.jsx)(n.strong,{children:"\xe1rbol de nodos"})," en formato ",(0,a.jsx)(n.strong,{children:"JSON"}),". Esto significa que no hay tablas ni colecciones como en otras bases de datos, sino un gran objeto JSON en el que cada ",(0,a.jsx)(n.strong,{children:"nodo"})," puede contener ",(0,a.jsx)(n.strong,{children:"propiedades"})," (parecidas a claves y valores) o ",(0,a.jsx)(n.strong,{children:"subnodos"})," (anidaciones)."]}),"\n",(0,a.jsxs)(n.p,{children:["La ",(0,a.jsx)(n.strong,{children:"estructura de nodos"})," en ",(0,a.jsx)(n.strong,{children:"Firebase Realtime Database"})," es ",(0,a.jsx)(n.strong,{children:"jer\xe1rquica"})," . Cada ",(0,a.jsx)(n.strong,{children:"nodo"})," puede contener valores simples (cadenas, n\xfameros, booleanos) u ",(0,a.jsx)(n.strong,{children:"objetos"})," con m\xe1s subnodos. Al dise\xf1ar la estructura, es crucial pensar en:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"C\xf3mo"})," se van a ",(0,a.jsx)(n.strong,{children:"leer"})," los datos (para no anidar en exceso)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Qu\xe9"})," datos deben ser accesibles r\xe1pidamente."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"C\xf3mo"})," de grandes pueden llegar a ser ciertas ramas (para no saturar la lectura)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"C\xf3mo"})," se integrar\xe1n las ",(0,a.jsx)(n.a,{href:"https://firebase.google.com/docs/rules",children:"Reglas de Seguridad"})," para restringir y validar acceso."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"qu\xe9-es-un-nodo",children:(0,a.jsx)(n.strong,{children:"\xbfQu\xe9 es un Nodo?"})}),"\n",(0,a.jsxs)(n.p,{children:["Un ",(0,a.jsx)(n.strong,{children:"nodo"})," es cada ",(0,a.jsx)(n.strong,{children:"clave"})," (o llave) en el \xe1rbol JSON, acompa\xf1ado de su ",(0,a.jsx)(n.strong,{children:"valor"})," (que puede ser un valor simple o un objeto con m\xe1s nodos hijos). Cada nodo puede verse como:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plaintext",children:'"clave": valor\n'})}),"\n",(0,a.jsx)(n.p,{children:"Por ejemplo, si tienes:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\r\n  "usuarios": {\r\n    "uid1": {\r\n      "nombre": "Juan",\r\n      "email": "juan@ejemplo.com"\r\n    },\r\n    "uid2": {\r\n      "nombre": "Ana",\r\n      "email": "ana@ejemplo.com"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,a.jsx)(n.admonition,{title:"explicaci\xf3n",type:"note",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"usuarios"})," es un nodo que contiene otros nodos (",(0,a.jsx)(n.code,{children:"uid1"})," y ",(0,a.jsx)(n.code,{children:"uid2"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"uid1"})," y ",(0,a.jsx)(n.code,{children:"uid2"})," tambi\xe9n son nodos."]}),"\n",(0,a.jsxs)(n.li,{children:["Dentro de cada ",(0,a.jsx)(n.code,{children:"uid"}),", hay nodos con claves ",(0,a.jsx)(n.code,{children:"nombre"})," y ",(0,a.jsx)(n.code,{children:"email"}),"."]}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"estructura-b\xe1sica-ra\xedz-y-subnodos",children:(0,a.jsx)(n.strong,{children:"Estructura B\xe1sica: Ra\xedz y Subnodos"})}),"\n",(0,a.jsxs)(n.p,{children:["La ",(0,a.jsx)(n.strong,{children:"ra\xedz"})," de la base de datos (por ejemplo, ",(0,a.jsx)(n.code,{children:"mDatabase = FirebaseDatabase.getInstance().getReference()"}),") es el nodo de nivel superior. A partir de \xe9l, se definen los ",(0,a.jsx)(n.strong,{children:"subnodos"})," con el m\xe9todo ",(0,a.jsx)(n.code,{children:'.child("nombreNodo")'})," en tu c\xf3digo."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Ejemplo"})," en c\xf3digo Java para escribir un usuario:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Referencia a la ra\xedz\r\nDatabaseReference rootRef = FirebaseDatabase.getInstance().getReference();\r\n\r\n// Subnodo "usuarios/uid1"\r\nrootRef.child("usuarios").child("uid1").setValue(usuarioObj);\n'})}),"\n",(0,a.jsx)(n.p,{children:"El \xe1rbol JSON quedar\xeda as\xed:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\r\n  "usuarios": {\r\n    "uid1": {\r\n      ... // Datos de usuarioObj\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"profundidad-de-los-nodos-anidaci\xf3n",children:(0,a.jsx)(n.strong,{children:"Profundidad de los Nodos (Anidaci\xf3n)"})}),"\n",(0,a.jsx)(n.p,{children:"Puedes anidar nodos seg\xfan sea necesario. Por ejemplo, para almacenar informaci\xf3n de distintos tipos:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\r\n  "usuarios": {\r\n    "uid1": {\r\n      "nombre": "Juan",\r\n      "email": "juan@ejemplo.com"\r\n    },\r\n    "uid2": {\r\n      "nombre": "Ana",\r\n      "email": "ana@ejemplo.com"\r\n    }\r\n  },\r\n  "productos": {\r\n    "producto1": {\r\n      "nombre": "Camiseta",\r\n      "precio": 19.99\r\n    },\r\n    "producto2": {\r\n      "nombre": "Zapatos",\r\n      "precio": 45.50\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{}),(0,a.jsxs)(n.p,{children:["En este ejemplo, ",(0,a.jsx)(n.code,{children:"usuarios"})," y ",(0,a.jsx)(n.code,{children:"productos"})," son ",(0,a.jsx)(n.strong,{children:"hermanos"})," (coexisten en el mismo nivel bajo la ra\xedz), mientras que cada uno tiene sus propios subnodos."]})]}),"\n",(0,a.jsx)(n.p,{children:"Podemos visualizar la estructura anterior con un diagrama:"}),"\n",(0,a.jsx)("div",{style:{margin:"0 auto",width:"800px"},children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Diagrama del Ejemplo",src:s(9072).A+"",title:"Diagrama del Ejemplo",width:"1384",height:"716"})})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Ra\xedz"})," es el nodo principal."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"usuarios"}),"  y ",(0,a.jsx)(n.strong,{children:"productos"}),"  cuelgan directamente de la ra\xedz."]}),"\n",(0,a.jsxs)(n.li,{children:["Cada ",(0,a.jsx)(n.strong,{children:"UID"}),"  o ",(0,a.jsx)(n.strong,{children:"producto"})," tiene a su vez m\xe1s nodos dentro."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"claves-generadas-autom\xe1ticamente-push",children:(0,a.jsxs)(n.strong,{children:["Claves Generadas Autom\xe1ticamente (",(0,a.jsx)(n.code,{children:"push()"}),")"]})}),"\n",(0,a.jsxs)(n.p,{children:["Cuando insertas datos usando ",(0,a.jsx)(n.code,{children:"push()"})," (lo veremos en m\xe9todos CRUD), Firebase genera una ",(0,a.jsx)(n.strong,{children:"clave autom\xe1tica"})," con una parte de marca de tiempo y otra parte aleatoria (ej: ",(0,a.jsx)(n.code,{children:"-MYXtBvK..."}),"). Esto se usa normalmente para listas:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\r\n  "mensajes": {\r\n    "-MYX123abc": {\r\n      "texto": "Hola, mundo",\r\n      "autor": "uid1"\r\n    },\r\n    "-MYX124efg": {\r\n      "texto": "Adi\xf3s, mundo",\r\n      "autor": "uid2"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsxs)(n.strong,{children:["Ejemplo de creaci\xf3n con ",(0,a.jsx)(n.code,{children:"push()"})]})}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'DatabaseReference mensajesRef = FirebaseDatabase.getInstance().getReference().child("mensajes");\r\n// Genera una clave \xfanica\r\nString clave = mensajesRef.push().getKey();\r\n\r\nMensaje msg = new Mensaje("Hola, mundo", "uid1");\r\n\r\nif (clave != null) {\r\n    mensajesRef.child(clave).setValue(msg);\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["As\xed se generan nodos hijos en ",(0,a.jsx)(n.code,{children:"mensajes/"})," con IDs \xfanicos."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"patrones-de-estructura",children:(0,a.jsx)(n.strong,{children:"Patrones de Estructura"})}),"\n",(0,a.jsx)(n.p,{children:"Cuando hablamos de patrones de estructura en Firebase Realtime Database, nos referimos a las buenas pr\xe1cticas para dise\xf1ar c\xf3mo se organizar\xe1n los datos dentro de la base de datos (un \xe1rbol JSON). Estos patrones ayudan a que la aplicaci\xf3n sea m\xe1s f\xe1cil de mantener, consultar y escalar. A continuaci\xf3n, se detallan los tres puntos mencionados:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Datos Estructurados"}),": Cada ",(0,a.jsx)(n.strong,{children:"nodo"})," representa un objeto con campos clave-valor."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Evitar Anidaciones Profundas"}),": En lo posible, no anides datos en muchos niveles. La base de datos es un \xe1rbol JSON y la ",(0,a.jsx)(n.strong,{children:"profundidad"})," excesiva dificulta las consultas y actualizaciones parciales."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Dividir Datos"}),": A veces, conviene separar la informaci\xf3n en varias ramas. Por ejemplo, en lugar de guardar todos los datos del usuario en ",(0,a.jsx)(n.code,{children:"usuarios/uid/detalles"}),", puede que los \u201cdetalles\u201d m\xe1s pesados (perfil extenso, im\xe1genes, etc.) se almacenen en otra rama o en Firebase Storage."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"normalizaci\xf3n-o-estructura-plana",children:(0,a.jsx)(n.strong,{children:"Normalizaci\xf3n o Estructura Plana"})}),"\n",(0,a.jsxs)(n.p,{children:["Cuando se requiere ",(0,a.jsx)(n.strong,{children:"consultar"})," datos de forma eficiente, es com\xfan ",(0,a.jsx)(n.strong,{children:"normalizar"})," o \u201caplanar\u201d la estructura, evitando anidaciones profundas. Por ejemplo...:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\r\n  "usuarios": {\r\n    "uid1": {\r\n      "nombre": "Juan",\r\n      "posts": {\r\n        "post1": true,\r\n        "post2": true\r\n      }\r\n    }\r\n  },\r\n  "posts": {\r\n    "post1": {\r\n      "titulo": "Mi primer post",\r\n      "contenido": "..."\r\n    },\r\n    "post2": {\r\n      "titulo": "Mi segundo post",\r\n      "contenido": "..."\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,a.jsxs)(n.admonition,{title:"explicaci\xf3n",type:"note",children:[(0,a.jsxs)(n.p,{children:["El subnodo ",(0,a.jsx)(n.code,{children:"posts"})," dentro de ",(0,a.jsx)(n.code,{children:"usuarios/uid1"})," (que contiene ",(0,a.jsx)(n.code,{children:"post1"})," y ",(0,a.jsx)(n.code,{children:"post2"}),") ",(0,a.jsx)(n.strong,{children:"no"})," almacena datos del post en s\xed, sino referencias (en este caso, valores booleanos o marcadores de existencia). Esto se hace para que no est\xe9n \u201cs\xfaper anidados\u201d, sino ",(0,a.jsx)(n.strong,{children:"relacionados"}),"."]}),(0,a.jsxs)(n.p,{children:["Cuando necesites leer la info de cada post, vas a ",(0,a.jsx)(n.code,{children:"posts/postId"}),"."]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"referencias-en-el-c\xf3digo",children:(0,a.jsx)(n.strong,{children:"Referencias en el C\xf3digo"})}),"\n",(0,a.jsxs)(n.p,{children:["Para navegar por el \xe1rbol en tiempo de ejecuci\xf3n, cada ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:'.child("<nodo>")'})})," te acerca un nivel m\xe1s en la jerarqu\xeda. Por ejemplo:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'DatabaseReference rootRef = FirebaseDatabase.getInstance().getReference();\r\n\r\n// Ir a "usuarios/uid1"\r\nDatabaseReference usuario1Ref = rootRef.child("usuarios").child("uid1");\r\n\r\n// Ir a "productos/producto1"\r\nDatabaseReference producto1Ref = rootRef.child("productos").child("producto1");\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Cualquier operaci\xf3n (lectura, escritura, etc.) se hace sobre una ",(0,a.jsx)(n.strong,{children:"referencia"})," a un nodo (con ",(0,a.jsx)(n.code,{children:".setValue()"}),", ",(0,a.jsx)(n.code,{children:".updateChildren()"}),", ",(0,a.jsx)(n.code,{children:".removeValue()"}),", etc.)."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"manejo-de-listas",children:(0,a.jsx)(n.strong,{children:"Manejo de Listas"})}),"\n",(0,a.jsxs)(n.p,{children:["Las listas se suelen manejar con ",(0,a.jsx)(n.code,{children:"push()"}),", generando un \xe1rbol como:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\r\n  "comentarios": {\r\n    "-MYXALpha123": {\r\n      "texto": "Primer comentario",\r\n      "autor": "uid1"\r\n    },\r\n    "-MYXALpha124": {\r\n      "texto": "Segundo comentario",\r\n      "autor": "uid2"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Cada ",(0,a.jsx)(n.strong,{children:"comentario"})," es un subnodo de ",(0,a.jsx)(n.code,{children:"comentarios"}),", con un identificador \xfanico autom\xe1tico."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-completo",children:(0,a.jsx)(n.strong,{children:"Ejemplo Completo"})}),"\n",(0,a.jsx)(n.p,{children:"Veamos un ejemplo que combine usuarios, anuncios y mensajes. El JSON podr\xeda ser as\xed..."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\r\n  "usuarios": {\r\n    "uid1": {\r\n      "nombre": "Juan",\r\n      "email": "juan@ejemplo.com"\r\n    },\r\n    "uid2": {\r\n      "nombre": "Ana",\r\n      "email": "ana@ejemplo.com"\r\n    }\r\n  },\r\n  "anuncios": {\r\n    "-Mz001": {\r\n      "titulo": "Bienvenidos",\r\n      "mensaje": "\xa1Bienvenido a nuestro tabl\xf3n!",\r\n      "autor": "uid1"\r\n    },\r\n    "-Mz002": {\r\n      "titulo": "Segunda noticia",\r\n      "mensaje": "Tenemos grandes novedades",\r\n      "autor": "uid2"\r\n    }\r\n  },\r\n  "mensajesChat": {\r\n    "-Mz010": {\r\n      "texto": "Hola a todos",\r\n      "autor": "uid1",\r\n      "timestamp": 1676523452000\r\n    },\r\n    "-Mz011": {\r\n      "texto": "\xa1Hola Juan!",\r\n      "autor": "uid2",\r\n      "timestamp": 1676523461000\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"usuarios"})," es un ",(0,a.jsx)(n.strong,{children:"nodo"})," con subnodos por cada ID de usuario (",(0,a.jsx)(n.code,{children:"uid1"}),", ",(0,a.jsx)(n.code,{children:"uid2"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"anuncios"})," es un ",(0,a.jsx)(n.strong,{children:"nodo"})," con anuncios creados, cada uno con una clave generada (",(0,a.jsx)(n.code,{children:"-Mz001"}),", ",(0,a.jsx)(n.code,{children:"-Mz002"}),") y campos ",(0,a.jsx)(n.code,{children:"titulo"}),", ",(0,a.jsx)(n.code,{children:"mensaje"}),", ",(0,a.jsx)(n.code,{children:"autor"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"mensajesChat"})," es otro ",(0,a.jsx)(n.strong,{children:"nodo"})," donde se almacenan mensajes de chat con su autor y marca de tiempo."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)("div",{style:{margin:"0 auto",width:"800px"},children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Diagrama del Ejemplo",src:s(3949).A+"",title:"Diagrama del Ejemplo",width:"1384",height:"1220"})})}),"\n",(0,a.jsxs)(n.p,{children:["Este diagrama muestra c\xf3mo cada ",(0,a.jsx)(n.strong,{children:"subnodo"})," pende de otro, conformando un \xe1rbol de ",(0,a.jsx)(n.strong,{children:"JSON"}),"."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"buenas-pr\xe1cticas",children:(0,a.jsx)(n.strong,{children:"Buenas Pr\xe1cticas"})}),"\n",(0,a.jsx)(n.admonition,{title:"sigue estos consejos...",type:"tip",children:(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Aplanar donde sea posible"}),": Evita anidaciones profundas. Usa varios nodos para relaciones."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsxs)(n.strong,{children:["Usar ",(0,a.jsx)(n.code,{children:"push()"})," para listas"]}),": Crea nodos hijos con claves \xfanicas generadas autom\xe1ticamente."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Separar datos est\xe1ticos de din\xe1micos"}),": Por ejemplo, informaci\xf3n b\xe1sica de un usuario en ",(0,a.jsx)(n.code,{children:"usuarios/uid"})," y sus otras colecciones (historial, favoritos, etc.) en nodos separados."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Reglas de Seguridad"}),": Dise\xf1a la estructura pensando en que sea f\xe1cil restringir o autorizar el acceso a nodos independientes."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Lecturas Eficientes"}),": Si un nodo tiende a crecer mucho, considera dividirlo en subnodos (paginaci\xf3n) o aplicar ",(0,a.jsx)(n.code,{children:"orderByChild"}),", ",(0,a.jsx)(n.code,{children:"limitToFirst"}),", etc."]}),"\n"]})}),"\n",(0,a.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},3949:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/nodosEjemplo-2446081a06397e9082609a316747937b.png"},9072:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/nodosEjemplo1-cec4cb9a888cb0604d50b32327f124c6.png"},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var r=s(6540);const a={},o=r.createContext(a);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);