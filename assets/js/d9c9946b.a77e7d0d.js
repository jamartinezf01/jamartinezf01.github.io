"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[4201],{2430:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"python/UT4 - estructuras de datos/4.2_tuplas","title":"4.2 Tuplas (tuple)","description":"Una tupla es una colecci\xf3n ordenada e inmutable de elementos.","source":"@site/docs/python/UT4 - estructuras de datos/4.2_tuplas.md","sourceDirName":"python/UT4 - estructuras de datos","slug":"/python/UT4 - estructuras de datos/4.2_tuplas","permalink":"/docs/python/UT4 - estructuras de datos/4.2_tuplas","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"pythonSidebar","previous":{"title":"4.1 Listas (list)","permalink":"/docs/python/UT4 - estructuras de datos/4.1_listas"},"next":{"title":"4.3 Conjuntos (set)","permalink":"/docs/python/UT4 - estructuras de datos/4.3_conjuntos"}}');var a=s(4848),t=s(8453);s(1470),s(9365);const l={sidebar_position:2},i="4.2 Tuplas (tuple)",d={},o=[{value:"1\ufe0f\u20e3 <strong>C\xf3mo crear una tupla</strong>",id:"1\ufe0f\u20e3-c\xf3mo-crear-una-tupla",level:2},{value:"\ud83d\udfe9 Usando par\xe9ntesis <code>()</code>",id:"-usando-par\xe9ntesis-",level:3},{value:"\ud83d\udfe6 Empaquetado impl\xedcito",id:"-empaquetado-impl\xedcito",level:3},{value:"\ud83d\udfe8 Tupla de un solo elemento",id:"-tupla-de-un-solo-elemento",level:3},{value:"\ud83d\udfe7 Convertir otras estructuras en tuplas",id:"-convertir-otras-estructuras-en-tuplas",level:3},{value:"2\ufe0f\u20e3 <strong>Acceso a los elementos de una tupla</strong>",id:"2\ufe0f\u20e3-acceso-a-los-elementos-de-una-tupla",level:2},{value:"3\ufe0f\u20e3 <strong>Inmutabilidad de las tuplas</strong>",id:"3\ufe0f\u20e3-inmutabilidad-de-las-tuplas",level:2},{value:"4\ufe0f\u20e3 <strong>Desempaquetado de tuplas</strong>",id:"4\ufe0f\u20e3-desempaquetado-de-tuplas",level:2},{value:"\ud83d\udfe9 Desempaquetado con <code>*</code>",id:"-desempaquetado-con-",level:3},{value:"5\ufe0f\u20e3 <strong>Operaciones con tuplas</strong>",id:"5\ufe0f\u20e3-operaciones-con-tuplas",level:2},{value:"6\ufe0f\u20e3 <strong>M\xe9todos disponibles en las tuplas</strong>",id:"6\ufe0f\u20e3-m\xe9todos-disponibles-en-las-tuplas",level:2},{value:"7\ufe0f\u20e3 <strong>Tuplas anidadas</strong>",id:"7\ufe0f\u20e3-tuplas-anidadas",level:2},{value:"8\ufe0f\u20e3 <strong>Conversi\xf3n entre tuplas y listas</strong>",id:"8\ufe0f\u20e3-conversi\xf3n-entre-tuplas-y-listas",level:2},{value:"\ud83d\udcca <strong>Comparaci\xf3n tuplas Vs. listas</strong>...",id:"-comparaci\xf3n-tuplas-vs-listas",level:2}];function c(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsxs)(n.h1,{id:"42-tuplas-tuple",children:["4.2 Tuplas (",(0,a.jsx)(n.code,{children:"tuple"}),")"]})}),"\n",(0,a.jsxs)(n.p,{children:["Una ",(0,a.jsx)(n.strong,{children:"tupla"})," es una colecci\xf3n ",(0,a.jsx)(n.strong,{children:"ordenada e inmutable"})," de elementos.\r\nA primera vista se parece mucho a una lista, pero con una diferencia fundamental: ",(0,a.jsx)(n.strong,{children:"no se puede modificar despu\xe9s de crearla"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Esto significa que ",(0,a.jsx)(n.strong,{children:"no se pueden a\xf1adir, eliminar ni cambiar"})," sus elementos.\r\nPor esa raz\xf3n, las tuplas se utilizan cuando se desea ",(0,a.jsx)(n.strong,{children:"mantener los datos fijos y protegidos contra modificaciones accidentales"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Las tuplas son muy \xfatiles, por ejemplo, para representar ",(0,a.jsx)(n.strong,{children:"coordenadas"}),", ",(0,a.jsx)(n.strong,{children:"fechas"}),", ",(0,a.jsx)(n.strong,{children:"valores devueltos por una funci\xf3n"})," o ",(0,a.jsx)(n.strong,{children:"pares de datos constantes"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de tupla"',children:"coordenadas = (40.7128, -74.0060)\r\nprint(coordenadas)\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:["La variable ",(0,a.jsx)(n.code,{children:"coordenadas"})," contiene una tupla con dos valores: la latitud y la longitud de Nueva York.\r\nAunque se pueden leer sus elementos, no se pueden cambiar."]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"1\ufe0f\u20e3-c\xf3mo-crear-una-tupla",children:["1\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"C\xf3mo crear una tupla"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-usando-par\xe9ntesis-",children:["\ud83d\udfe9 Usando par\xe9ntesis ",(0,a.jsx)(n.code,{children:"()"})]}),"\n",(0,a.jsx)(n.p,{children:"La forma m\xe1s com\xfan es escribir los elementos entre par\xe9ntesis y separados por comas."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Creaci\xf3n de tuplas con ()"',children:"numeros = (10, 20, 30)\r\nprint(numeros)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"-empaquetado-impl\xedcito",children:"\ud83d\udfe6 Empaquetado impl\xedcito"}),"\n",(0,a.jsx)(n.p,{children:"Python permite omitir los par\xe9ntesis si los valores est\xe1n separados por comas."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Creaci\xf3n de tuplas de manera impl\xedcita"',children:'colores = "rojo", "verde", "azul"\r\nprint(colores)\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:["Aunque no haya par\xe9ntesis, Python entiende que es una tupla.\r\nEsto se llama ",(0,a.jsx)(n.strong,{children:"empaquetado impl\xedcito"})," (",(0,a.jsx)(n.em,{children:"tuple packing"}),")."]})}),"\n",(0,a.jsx)(n.h3,{id:"-tupla-de-un-solo-elemento",children:"\ud83d\udfe8 Tupla de un solo elemento"}),"\n",(0,a.jsxs)(n.p,{children:["Este caso tiene una peque\xf1a trampa:\r\nSi escribimos solo un valor entre par\xe9ntesis, Python ",(0,a.jsx)(n.strong,{children:"no lo interpreta como tupla"}),", sino como el propio valor.\r\nPara que sea una tupla, hay que a\xf1adir una coma final."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Creaci\xf3n de tuplas con solo un elemento"',children:"t1 = (5)\r\nt2 = (5,)\r\nprint(type(t1))   # <class 'int'>\r\nprint(type(t2))   # <class 'tuple'>\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsx)(n.p,{children:"La coma es lo que realmente convierte la expresi\xf3n en una tupla.\r\nLos par\xe9ntesis ayudan a la legibilidad, pero no son estrictamente necesarios."})}),"\n",(0,a.jsx)(n.h3,{id:"-convertir-otras-estructuras-en-tuplas",children:"\ud83d\udfe7 Convertir otras estructuras en tuplas"}),"\n",(0,a.jsxs)(n.p,{children:["Al igual que con las listas, podemos convertir un iterable (como una cadena o una lista) en una tupla usando la funci\xf3n ",(0,a.jsx)(n.code,{children:"tuple()"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Creaci\xf3n de tuplas mediante casting"',children:"letras = tuple(\"Python\")\r\nprint(letras)\r\n\r\n# ('P', 'y', 't', 'h', 'o', 'n')\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:["La cadena ",(0,a.jsx)(n.code,{children:'"Python"'})," se descompone en una tupla donde cada car\xe1cter ocupa una posici\xf3n."]})}),"\n",(0,a.jsxs)(n.h2,{id:"2\ufe0f\u20e3-acceso-a-los-elementos-de-una-tupla",children:["2\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Acceso a los elementos de una tupla"})]}),"\n",(0,a.jsxs)(n.p,{children:["Las tuplas, como las listas, son ",(0,a.jsx)(n.strong,{children:"ordenadas e indexadas"}),", por lo que se puede acceder a sus elementos mediante el \xedndice."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Acceso mediante \xedndice"',children:'dias = ("lunes", "martes", "mi\xe9rcoles")\r\nprint(dias[0])   # lunes\r\nprint(dias[1])   # martes\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsx)(n.p,{children:"Los \xedndices comienzan en 0."})}),"\n",(0,a.jsxs)(n.admonition,{title:"\xedndices negativos",type:"info",children:[(0,a.jsx)(n.p,{children:"Tambi\xe9n se pueden usar \xedndices negativos para contar desde el final:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"print(dias[-1])  # mi\xe9rcoles\n"})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"3\ufe0f\u20e3-inmutabilidad-de-las-tuplas",children:["3\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Inmutabilidad de las tuplas"})]}),"\n",(0,a.jsxs)(n.p,{children:["La principal caracter\xedstica de las tuplas es que ",(0,a.jsx)(n.strong,{children:"no se pueden modificar"}),".\r\nCualquier intento de cambiar su contenido produce un error."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Intento de modificaci\xf3n de un elemento de la tupla"',children:"numeros = (1, 2, 3)\r\nnumeros[0] = 99   # \u274c Error\r\n\r\n# TypeError: 'tuple' object does not support item assignment\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:["Una vez creada, la tupla queda fija.\r\nSi se necesita cambiar algo, debe crearse una ",(0,a.jsx)(n.strong,{children:"nueva tupla"})," a partir de la anterior."]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"4\ufe0f\u20e3-desempaquetado-de-tuplas",children:["4\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Desempaquetado de tuplas"})]}),"\n",(0,a.jsxs)(n.p,{children:["Una de las caracter\xedsticas m\xe1s pr\xe1cticas de las tuplas es que se pueden ",(0,a.jsx)(n.strong,{children:"desempaquetar"}),", es decir, asignar sus valores a varias variables en una sola l\xednea."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Desempaquetado de tuplas"',children:'punto = (4, 5)\r\nx, y = punto\r\nprint(f"x = {x}, y = {y}")\r\n\r\n# x = 4, y = 5\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:["Cada elemento de la tupla se asigna autom\xe1ticamente a una variable distinta.\r\nEsto se conoce como ",(0,a.jsx)(n.strong,{children:"desempaquetado m\xfaltiple"}),"."]})}),"\n",(0,a.jsxs)(n.h3,{id:"-desempaquetado-con-",children:["\ud83d\udfe9 Desempaquetado con ",(0,a.jsx)(n.code,{children:"*"})]}),"\n",(0,a.jsxs)(n.p,{children:["Cuando no se sabe cu\xe1ntos elementos tendr\xe1 la tupla, se puede usar el operador ",(0,a.jsx)(n.code,{children:"*"})," para agrupar los valores restantes."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:"title=\"Uso del operador '*' para desempaquetar tuplas\"",children:"valores = (1, 2, 3, 4, 5)\r\nprimero, *intermedios, ultimo = valores\r\nprint(primero)      # 1\r\nprint(intermedios)  # [2, 3, 4]\r\nprint(ultimo)       # 5\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"*intermedios"})," agrupa los elementos del medio en una lista.\r\nEsto ofrece gran flexibilidad en asignaciones."]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"5\ufe0f\u20e3-operaciones-con-tuplas",children:["5\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Operaciones con tuplas"})]}),"\n",(0,a.jsx)(n.p,{children:"Aunque las tuplas son inmutables, s\xed permiten ciertas operaciones comunes:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Operaci\xf3n"}),(0,a.jsx)(n.th,{children:"Descripci\xf3n"}),(0,a.jsx)(n.th,{children:"Ejemplo"}),(0,a.jsx)(n.th,{children:"Resultado"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"len(t)"})}),(0,a.jsx)(n.td,{children:"Longitud"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"len((1,2,3))"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"3"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"+"})}),(0,a.jsx)(n.td,{children:"Concatenar"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(1,2) + (3,4)"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(1,2,3,4)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"*"})}),(0,a.jsx)(n.td,{children:"Repetir"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(1,2) * 2"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(1,2,1,2)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"in"})}),(0,a.jsx)(n.td,{children:"Comprobar existencia"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"2 in (1,2,3)"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"True"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"max(t)"})}),(0,a.jsx)(n.td,{children:"M\xe1ximo"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"max((5,8,3))"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"8"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"min(t)"})}),(0,a.jsx)(n.td,{children:"M\xednimo"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"min((5,8,3))"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"3"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"sum(t)"})}),(0,a.jsx)(n.td,{children:"Suma (si hay n\xfameros)"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"sum((1,2,3))"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"6"})})]})]})]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"Estas funciones integradas no modifican la tupla, crean y devuelven nuevos valores."})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"6\ufe0f\u20e3-m\xe9todos-disponibles-en-las-tuplas",children:["6\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"M\xe9todos disponibles en las tuplas"})]}),"\n",(0,a.jsxs)(n.p,{children:["A diferencia de las listas, las tuplas tienen ",(0,a.jsx)(n.strong,{children:"solo dos m\xe9todos"})," propios, debido a su inmutabilidad."]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"M\xe9todo"}),(0,a.jsx)(n.th,{children:"Descripci\xf3n"}),(0,a.jsx)(n.th,{children:"Ejemplo"}),(0,a.jsx)(n.th,{children:"Resultado"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"count(x)"})}),(0,a.jsxs)(n.td,{children:["Devuelve cu\xe1ntas veces aparece ",(0,a.jsx)(n.code,{children:"x"}),"."]}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(1,2,2,3).count(2)"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"2"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"index(x)"})}),(0,a.jsxs)(n.td,{children:["Devuelve el \xedndice de la primera aparici\xf3n de ",(0,a.jsx)(n.code,{children:"x"}),"."]}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(1,2,3).index(3)"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"2"})})]})]})]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Si ",(0,a.jsx)(n.code,{children:"x"})," no est\xe1 en la tupla, ",(0,a.jsx)(n.code,{children:"index()"})," genera un error (",(0,a.jsx)(n.code,{children:"ValueError"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"El m\xe9todo index() tambi\xe9n acepta un segundo par\xe1metro opcional, que indica a partir de que \xedndice empezar a buscar el objeto."}),"\n"]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"7\ufe0f\u20e3-tuplas-anidadas",children:["7\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Tuplas anidadas"})]}),"\n",(0,a.jsxs)(n.p,{children:["Una tupla puede contener otras tuplas dentro, lo que permite representar ",(0,a.jsx)(n.strong,{children:"estructuras m\xe1s complejas"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Ejemplo de tupla anidada"',children:'alumnos = (\r\n    ("Ana", 8.5),\r\n    ("Luis", 7.2),\r\n    ("Marta", 9.0)\r\n)\r\nprint(alumnos[0][0])  # Ana\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"alumnos"})," es una tupla de tuplas.\r\nCada subtupla representa un alumno y su nota.\r\nEs una forma muy compacta de almacenar datos estructurados sin listas ni diccionarios."]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"8\ufe0f\u20e3-conversi\xf3n-entre-tuplas-y-listas",children:["8\ufe0f\u20e3 ",(0,a.jsx)(n.strong,{children:"Conversi\xf3n entre tuplas y listas"})]}),"\n",(0,a.jsx)(n.p,{children:"En algunos casos, puede resultar \xfatil convertir una tupla en lista (para modificarla) y luego volver a tupla."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="Casting de tupla en lista y viceversa"',children:"colores = (\"rojo\", \"verde\", \"azul\")\r\nlista_colores = list(colores)    # Conversi\xf3n a lista\r\nlista_colores.append(\"amarillo\")\r\nnueva_tupla = tuple(lista_colores)\r\nprint(nueva_tupla)              \r\n\r\n# ('rojo', 'verde', 'azul', 'amarillo')\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"explicacion",children:(0,a.jsx)(n.p,{children:"Se crea una lista a partir de la tupla, se modifica, y despu\xe9s se convierte de nuevo en tupla.\r\nEsto permite actualizar el contenido manteniendo la estructura final inmutable."})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"-comparaci\xf3n-tuplas-vs-listas",children:["\ud83d\udcca ",(0,a.jsx)(n.strong,{children:"Comparaci\xf3n tuplas Vs. listas"}),"..."]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Caracter\xedstica"}),(0,a.jsxs)(n.th,{children:["Tupla (",(0,a.jsx)(n.code,{children:"tuple"}),")"]}),(0,a.jsxs)(n.th,{children:["Lista (",(0,a.jsx)(n.code,{children:"list"}),")"]})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Estructura"}),(0,a.jsx)(n.td,{children:"Ordenada"}),(0,a.jsx)(n.td,{children:"Ordenada"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Mutabilidad"}),(0,a.jsx)(n.td,{children:"\u274c Inmutable"}),(0,a.jsx)(n.td,{children:"\u2705 Mutable"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Sintaxis"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(1, 2, 3)"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"[1, 2, 3]"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Duplicados"}),(0,a.jsx)(n.td,{children:"Permitidos"}),(0,a.jsx)(n.td,{children:"Permitidos"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Tipos diferentes"}),(0,a.jsx)(n.td,{children:"S\xed"}),(0,a.jsx)(n.td,{children:"S\xed"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"M\xe9todos disponibles"}),(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"count()"}),", ",(0,a.jsx)(n.code,{children:"index()"})]}),(0,a.jsx)(n.td,{children:"Muchos"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Uso habitual"}),(0,a.jsx)(n.td,{children:"Datos constantes"}),(0,a.jsx)(n.td,{children:"Datos cambiantes"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Velocidad"}),(0,a.jsx)(n.td,{children:"M\xe1s r\xe1pida"}),(0,a.jsx)(n.td,{children:"M\xe1s flexible"})]})]})]}),"\n",(0,a.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},9365:(e,n,s)=>{s.d(n,{A:()=>l});s(6540);var r=s(4164);const a={tabItem:"tabItem_Ymn6"};var t=s(4848);function l({children:e,hidden:n,className:s}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,s),hidden:n,children:e})}},1470:(e,n,s)=>{s.d(n,{A:()=>q});var r=s(6540),a=s(4164),t=s(3104),l=s(6347),i=s(205),d=s(7485),o=s(1682),c=s(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:s}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((({props:{value:e,label:n,attributes:s,default:r}})=>({value:e,label:n,attributes:s,default:r})))}(s);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function h({value:e,tabValues:n}){return n.some((n=>n.value===e))}function x({queryString:e=!1,groupId:n}){const s=(0,l.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function j(e){const{defaultValue:n,queryString:s=!1,groupId:a}=e,t=p(e),[l,d]=(0,r.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:t}))),[o,u]=x({queryString:s,groupId:a}),[j,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,a]=(0,c.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:a}),g=(()=>{const e=o??j;return h({value:e,tabValues:t})?e:null})();(0,i.A)((()=>{g&&d(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),m(e)}),[u,m,t]),tabValues:t}}var m=s(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=s(4848);function b({className:e,block:n,selectedValue:s,selectValue:r,tabValues:l}){const i=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.a_)(),o=e=>{const n=e.currentTarget,a=i.indexOf(n),t=l[a].value;t!==s&&(d(n),r(t))},c=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const s=i.indexOf(e.currentTarget)+1;n=i[s]??i[0];break}case"ArrowLeft":{const s=i.indexOf(e.currentTarget)-1;n=i[s]??i[i.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:l.map((({value:e,label:n,attributes:r})=>(0,v.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{i.push(e)},onKeyDown:c,onClick:o,...r,className:(0,a.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":s===e}),children:n??e},e)))})}function f({lazy:e,children:n,selectedValue:s}){const t=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=t.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=j(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,v.jsx)(b,{...n,...e}),(0,v.jsx)(f,{...n,...e})]})}function q(e){const n=(0,m.A)();return(0,v.jsx)(y,{...e,children:u(e.children)},String(n))}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var r=s(6540);const a={},t=r.createContext(a);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);