"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[25],{4611:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"salva/aplicaciones m\xf3viles/5 Persistencia/Supabase/storage","title":"5.5.2 Supabase Sorage","description":"El servicio de Storage en Supabase ofrece una forma sencilla de gestionar archivos (im\xe1genes, documentos, videos, etc.) en la nube, con una estructura de buckets y permisos similar a Amazon S3. En aplicaciones Android escritas en Java, podemos interactuar con esta funcionalidad usando las APIs REST de Supabase y una librer\xeda HTTP como OkHttp. A continuaci\xf3n, se detalla la configuraci\xf3n y los ejemplos necesarios para su implementaci\xf3n.","source":"@site/docs/salva/aplicaciones m\xf3viles/5 Persistencia/Supabase/storage.md","sourceDirName":"salva/aplicaciones m\xf3viles/5 Persistencia/Supabase","slug":"/salva/aplicaciones m\xf3viles/5 Persistencia/Supabase/storage","permalink":"/docs/salva/aplicaciones m\xf3viles/5 Persistencia/Supabase/storage","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2}}');var a=r(4848),s=r(8453);const o={sidebar_position:2},t="5.5.2 Supabase Sorage",c={},l=[{value:"1. <strong>Conceptos Clave</strong>",id:"1-conceptos-clave",level:2},{value:"2. <strong>Creaci\xf3n y administraci\xf3n de buckets</strong>",id:"2-creaci\xf3n-y-administraci\xf3n-de-buckets",level:2},{value:"Creaci\xf3n de un bucket",id:"creaci\xf3n-de-un-bucket",level:3},{value:"Administraci\xf3n de buckets",id:"administraci\xf3n-de-buckets",level:3},{value:"3. <strong>Permisos y visibilidad de archivos</strong>",id:"3-permisos-y-visibilidad-de-archivos",level:2},{value:"4. <strong>Uso del servicio Storage en Android</strong> (OkHttp)",id:"4-uso-del-servicio-storage-en-android-okhttp",level:2},{value:"Configuraci\xf3n de dependencias",id:"configuraci\xf3n-de-dependencias",level:3},{value:"Subir archivos",id:"subir-archivos",level:3},{value:"Ejemplo: Subir imagen desde la galer\xeda",id:"ejemplo-subir-imagen-desde-la-galer\xeda",level:4},{value:"Descargar archivos",id:"descargar-archivos",level:3},{value:"Eliminar archivos",id:"eliminar-archivos",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"552-supabase-sorage",children:"5.5.2 Supabase Sorage"})}),"\n",(0,a.jsxs)(n.p,{children:["El servicio de ",(0,a.jsx)(n.strong,{children:"Storage"})," en Supabase ofrece una forma sencilla de gestionar archivos (im\xe1genes, documentos, videos, etc.) en la nube, con una estructura de buckets y permisos similar a Amazon S3. En aplicaciones Android escritas en Java, podemos interactuar con esta funcionalidad usando las ",(0,a.jsx)(n.strong,{children:"APIs REST"})," de Supabase y una librer\xeda HTTP como ",(0,a.jsx)(n.strong,{children:"OkHttp"}),". A continuaci\xf3n, se detalla la configuraci\xf3n y los ejemplos necesarios para su implementaci\xf3n."]}),"\n",(0,a.jsxs)(n.h2,{id:"1-conceptos-clave",children:["1. ",(0,a.jsx)(n.strong,{children:"Conceptos Clave"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Bucket"}),": Contenedor ra\xedz para tus archivos (similar a una carpeta en la nube)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Objeto / Archivo"}),": Cada archivo subido se identifica por un ",(0,a.jsx)(n.code,{children:"path"})," \xfanico dentro del bucket."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Bucket P\xfablico"}),": Se puede leer sin necesidad de autenticaci\xf3n. La subida y eliminaci\xf3n requieren claves o permisos espec\xedficos."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Bucket Privado"}),": Se requiere autenticaci\xf3n y claves v\xe1lidas para leer y escribir."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Signed URL"}),": Enlaces con firma criptogr\xe1fica que dan acceso temporal a un archivo, aun cuando el bucket sea privado."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Estos conceptos se trasladan de forma directa al desarrollo en Android, utilizando peticiones HTTP a la API de Supabase."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"2-creaci\xf3n-y-administraci\xf3n-de-buckets",children:["2. ",(0,a.jsx)(n.strong,{children:"Creaci\xf3n y administraci\xf3n de buckets"})]}),"\n",(0,a.jsx)(n.h3,{id:"creaci\xf3n-de-un-bucket",children:"Creaci\xf3n de un bucket"}),"\n",(0,a.jsxs)(n.p,{children:["Puedes crear un bucket desde la ",(0,a.jsx)(n.a,{href:"https://app.supabase.io",children:"consola de Supabase"})," o utilizando un SDK/HTTP en otro entorno (no existe un SDK oficial para Java Android, pero podr\xedas hacerlo con peticiones HTTP en cualquier backend)."]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["En la consola, ve a ",(0,a.jsx)(n.strong,{children:"Storage"})," \u2192 ",(0,a.jsx)(n.strong,{children:"New Bucket"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Especifica el nombre (ej. ",(0,a.jsx)(n.code,{children:"imagenes-producto"}),") y la visibilidad (",(0,a.jsx)(n.code,{children:"Public"})," o ",(0,a.jsx)(n.code,{children:"Private"}),")."]}),"\n"]}),"\n",(0,a.jsx)("div",{style:{margin:"0 auto",width:"800px"},children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Nuevo contenedor",src:r(6476).A+"",title:"Nuevo contenedor",width:"1092",height:"1184"})})}),"\n",(0,a.jsx)(n.h3,{id:"administraci\xf3n-de-buckets",children:"Administraci\xf3n de buckets"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Listar buckets"}),": En la consola ver\xe1s todos los buckets creados."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Modificar visibilidad"}),": Puedes cambiar un bucket de ",(0,a.jsx)(n.code,{children:"public"})," a ",(0,a.jsx)(n.code,{children:"private"})," y viceversa."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Eliminar buckets"}),": Elimina el bucket y todos los archivos que contiene (irreversible)."]}),"\n",(0,a.jsx)(n.li,{children:"Adem\xe1s puedes crear carpetas o subir archivos de forma manual"}),"\n"]}),"\n",(0,a.jsx)("div",{style:{margin:"0 auto",width:"800px"},children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Crear carpetas y subir archivos",src:r(5650).A+"",title:"Crear carpetas y subir archivos",width:"1014",height:"403"})})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"3-permisos-y-visibilidad-de-archivos",children:["3. ",(0,a.jsx)(n.strong,{children:"Permisos y visibilidad de archivos"})]}),"\n",(0,a.jsx)(n.p,{children:"Cuando creas un bucket, puedes marcarlo como:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"P\xfablico"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Cualquier persona con la URL puede ver los archivos."}),"\n",(0,a.jsx)(n.li,{children:"Ideal para im\xe1genes u otros recursos que no requieren privacidad."}),"\n",(0,a.jsx)(n.li,{children:"Para subir o borrar, s\xed se requiere autenticaci\xf3n (con la clave o token JWT apropiado)."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Privado"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Solo usuarios autenticados o con tokens v\xe1lidos pueden ver, subir o eliminar archivos."}),"\n",(0,a.jsxs)(n.li,{children:["Para compartir un archivo concreto, se generan ",(0,a.jsx)(n.strong,{children:"Signed URLs"})," con validez limitada."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["En ambos casos, la configuraci\xf3n de acceso puede complementarse con ",(0,a.jsx)(n.strong,{children:"Policies"})," y ",(0,a.jsx)(n.strong,{children:"Row Level Security (RLS)"})," para un control a\xfan m\xe1s granular."]}),"\n",(0,a.jsxs)(n.admonition,{title:"pol\xedticas de acceso",type:"warning",children:[(0,a.jsx)(n.p,{children:"Para que tus contenedores sean accesibles mediante la API de supabase es necesario asignar alguna pol\xedca de acceso."}),(0,a.jsx)("div",{style:{margin:"0 auto",width:"800px"},children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Pol\xedticas de Acceso",src:r(2813).A+"",title:"Pol\xedticas de Acceso",width:"1041",height:"571"})})}),(0,a.jsx)(n.p,{children:"Para ello puedes usar alguna de las plantillas que se ofrecen o crearlas de manera manual."}),(0,a.jsx)("div",{style:{margin:"0 auto",width:"800px"},children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Plantillas",src:r(6627).A+"",title:"Plantillas",width:"1028",height:"488"})})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"4-uso-del-servicio-storage-en-android-okhttp",children:["4. ",(0,a.jsx)(n.strong,{children:"Uso del servicio Storage en Android"})," (OkHttp)"]}),"\n",(0,a.jsx)(n.p,{children:"Para interactuar desde Android con el servicio de Storage, usaremos:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"OkHttp"}),": una librer\xeda HTTP potente y muy popular en Android."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"API de Supabase Storage"}),": Endpoints REST que nos permiten subir, descargar y eliminar archivos."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"configuraci\xf3n-de-dependencias",children:"Configuraci\xf3n de dependencias"}),"\n",(0,a.jsxs)(n.p,{children:["En tu archivo ",(0,a.jsx)(n.code,{children:"app/build.gradle"})," (m\xf3dulo de la aplicaci\xf3n), aseg\xfarate de incluir OkHttp:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-groovy",children:"dependencies {\r\n    // ...\r\n    implementation 'com.squareup.okhttp3:okhttp:4.10.0'\r\n    // ...\r\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["(La versi\xf3n puede variar; revisa la ",(0,a.jsx)(n.a,{href:"https://square.github.io/okhttp/",children:"p\xe1gina oficial de OkHttp"}),".)"]}),"\n",(0,a.jsx)(n.h3,{id:"subir-archivos",children:"Subir archivos"}),"\n",(0,a.jsx)(n.p,{children:"Para subir un archivo a Supabase Storage, necesitas:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"URL Base"}),": ",(0,a.jsx)(n.code,{children:"https://<PROJECT_ID>.supabase.co/storage/v1/object"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Nombre del bucket"}),": Ej. ",(0,a.jsx)(n.code,{children:"imagenes-producto"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Cabeceras"}),": ",(0,a.jsx)(n.code,{children:"apikey"})," y ",(0,a.jsx)(n.code,{children:"Authorization: Bearer {TU_API_KEY}"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Estos datos los encontrar\xe1s en la parte de settings de tu proyecto, en la parte de API"}),"\n",(0,a.jsx)("div",{style:{margin:"0 auto",width:"800px"},children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"API Settings",src:r(3511).A+"",title:"API Settings",width:"1023",height:"687"})})}),"\n",(0,a.jsx)(n.h4,{id:"ejemplo-subir-imagen-desde-la-galer\xeda",children:"Ejemplo: Subir imagen desde la galer\xeda"}),"\n",(0,a.jsxs)(n.p,{children:["Supongamos que quieres subir una imagen seleccionada de la galer\xeda. El usuario elige una imagen, obtienes su ",(0,a.jsx)(n.code,{children:"Uri"})," y luego lees el archivo para enviarlo a Supabase."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'private static final String SUPABASE_URL = "https://TU_PROJECT_ID.supabase.co/storage/v1/object";\r\nprivate static final String BUCKET_NAME = "imagenes-producto";\r\nprivate static final String SUPABASE_API_KEY = "TU_ANON_O_SERVICE_KEY"; // O la que corresponda\r\n\r\n// M\xe9todo para subir un archivo a Supabase\r\npublic void subirArchivoASupabase(Uri uri, String nombreArchivo) {\r\n    // 1. Crear instancia de OkHttpClient\r\n    OkHttpClient client = new OkHttpClient();\r\n\r\n    // 2. Obtener el path en Supabase (ej. "uploads/nombreArchivo.jpg")\r\n    String rutaEnSupabase = "uploads/" + nombreArchivo;\r\n\r\n    // 3. Construir la URL final\r\n    String endpoint = SUPABASE_URL + "/" + BUCKET_NAME + "/" + rutaEnSupabase;\r\n\r\n    // 4. Crear RequestBody con contenido del archivo\r\n    //    Primero convertimos el uri de la galer\xeda en un InputStream\r\n    try {\r\n        InputStream inputStream = getContentResolver().openInputStream(uri);\r\n        byte[] fileBytes = toByteArray(inputStream); // M\xe9todo auxiliar para leer el stream\r\n\r\n        RequestBody fileBody = RequestBody.create(\r\n                fileBytes,\r\n                MediaType.parse("image/jpeg")\r\n        );\r\n\r\n        // 5. Construir la petici\xf3n PUT\r\n        Request request = new Request.Builder()\r\n                .url(endpoint)\r\n                .header("apikey", SUPABASE_API_KEY)\r\n                .header("Authorization", "Bearer " + SUPABASE_API_KEY)\r\n                // "x-upsert" define si se sobrescribe el archivo si ya existe\r\n                .header("x-upsert", "false")\r\n                .put(fileBody)\r\n                .build();\r\n\r\n        // 6. Enviar la petici\xf3n en un hilo secundario (importante para no bloquear el main thread)\r\n        new Thread(() -> {\r\n            try (Response response = client.newCall(request).execute()) {\r\n                if (response.isSuccessful()) {\r\n                    Log.d("Supabase", "Archivo subido con \xe9xito: " + response.code());\r\n                } else {\r\n                    Log.e("Supabase", "Error al subir archivo: " + response.code()\r\n                            + " - " + response.message());\r\n                    Log.e("Supabase", "Detalles: " + response.body().string());\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }).start();\r\n    } catch (Exception e) {\r\n        e.printStackTrace();\r\n    }\r\n}\r\n\r\n// M\xe9todo auxiliar para convertir un InputStream a byte[]\r\nprivate byte[] toByteArray(InputStream inputStream) throws IOException {\r\n    ByteArrayOutputStream buffer = new ByteArrayOutputStream();\r\n    int nRead;\r\n    byte[] data = new byte[4096];\r\n    while ((nRead = inputStream.read(data, 0, data.length)) != -1) {\r\n        buffer.write(data, 0, nRead);\r\n    }\r\n    return buffer.toByteArray();\r\n}\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Nota"}),": ",(0,a.jsx)(n.code,{children:'MediaType.parse("image/jpeg")'})," asume que subes un JPEG. Ajusta seg\xfan el tipo real (ej. ",(0,a.jsx)(n.code,{children:"image/png"}),", ",(0,a.jsx)(n.code,{children:"application/pdf"}),", etc.)."]}),"\n",(0,a.jsxs)(n.li,{children:["Para no bloquear la UI, la petici\xf3n se hace en un ",(0,a.jsx)(n.strong,{children:"Thread"})," separado. Puedes usar RxJava, Coroutine (si fuera Kotlin) o cualquier otra forma de asincron\xeda que prefieras."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"descargar-archivos",children:"Descargar archivos"}),"\n",(0,a.jsxs)(n.p,{children:["Para ",(0,a.jsx)(n.strong,{children:"descargar"})," un archivo, haremos una petici\xf3n ",(0,a.jsx)(n.code,{children:"GET"})," al mismo endpoint (en realidad es una petici\xf3n sin verbo expl\xedcito: se obtiene con ",(0,a.jsx)(n.code,{children:"GET"})," la URL completa):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public void descargarArchivoASupabase(String nombreArchivo) {\r\n    OkHttpClient client = new OkHttpClient();\r\n\r\n    // Asumimos que el archivo est\xe1 en "uploads/nombreArchivo"\r\n    String objectPath = "uploads/" + nombreArchivo;\r\n    String endpoint = SUPABASE_URL + "/" + BUCKET_NAME + "/" + objectPath;\r\n\r\n    Request request = new Request.Builder()\r\n            .url(endpoint)\r\n            .header("apikey", SUPABASE_API_KEY)\r\n            .header("Authorization", "Bearer " + SUPABASE_API_KEY)\r\n            .build();\r\n\r\n    new Thread(() -> {\r\n        try (Response response = client.newCall(request).execute()) {\r\n            if (response.isSuccessful()) {\r\n                // Obtener los bytes del archivo\r\n                byte[] fileBytes = response.body().bytes();\r\n\r\n                // Guardar en disco local (directorio interno, por ejemplo)\r\n                File outputFile = new File(getFilesDir(), nombreArchivo);\r\n                FileOutputStream fos = new FileOutputStream(outputFile);\r\n                fos.write(fileBytes);\r\n                fos.close();\r\n\r\n                Log.d("Supabase", "Archivo descargado y guardado en: " + outputFile.getAbsolutePath());\r\n            } else {\r\n                Log.e("Supabase", "Error en la descarga: " + response.code() + " - " + response.message());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }).start();\r\n}\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Si el bucket es p\xfablico, la descarga no requerir\xeda ",(0,a.jsx)(n.code,{children:"Authorization"}),". Sin embargo, en caso de ser privado, necesitas la cabecera con el token."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"eliminar-archivos",children:"Eliminar archivos"}),"\n",(0,a.jsxs)(n.p,{children:["Para ",(0,a.jsx)(n.strong,{children:"eliminar"})," un archivo, se env\xeda una petici\xf3n ",(0,a.jsx)(n.code,{children:"DELETE"})," al endpoint:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public void eliminarArchivoSupabase(String nombreArchivo) {\r\n    OkHttpClient client = new OkHttpClient();\r\n    \r\n    String objectPath = "uploads/" + nombreArchivo;\r\n    String endpoint = SUPABASE_URL + "/" + BUCKET_NAME + "/" + objectPath;\r\n\r\n    Request request = new Request.Builder()\r\n            .url(endpoint)\r\n            .header("apikey", SUPABASE_API_KEY)\r\n            .header("Authorization", "Bearer " + SUPABASE_API_KEY)\r\n            .delete()\r\n            .build();\r\n\r\n    new Thread(() -> {\r\n        try (Response response = client.newCall(request).execute()) {\r\n            if (response.isSuccessful()) {\r\n                Log.d("Supabase", "Archivo eliminado correctamente: " + nombreArchivo);\r\n            } else {\r\n                Log.e("Supabase", "Error al eliminar: " + response.code() + " - " + response.message());\r\n                Log.e("Supabase", "Detalles: " + response.body().string());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }).start();\r\n}\n'})}),"\n",(0,a.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},3511:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/API_Settings-63ddae94cfd563bdb104d361f5258b24.png"},5650:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/Crear_Carpetas-5321cd35e31cfb7a2291bfcb2e5b3ea2.png"},6476:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/New_Bucket-8409399d75b6cdeb788d65ef2934c37e.png"},6627:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/Plantillas-7512b7396f4621895afeac8581b5c96e.png"},2813:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/Politicas-27a5c2f2e510f31bf7d519e9e6f005f1.png"},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var i=r(6540);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);